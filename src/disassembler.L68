00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/9/2015 10:38:44 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      
00000000                            25  * AND
00000000                            26  * ADD 
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000  =0000001E                 60  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            61  
00000000                            62  
00001000                            63      ORG    $1000
00001000                            64  START:                  ; first instruction of program
00001000                            65  
00001000                            66  *********************************************************************************************************************
00001000                            67  * Displays a fancy ascii art
00001000                            68  
00001000                            69  DISPASCII
00001000  43F9 00003617             70          LEA     ASCII11,A1
00001006  303C 000D                 71          MOVE    #13,D0
0000100A  4E4F                      72          TRAP    #15
0000100C  43F9 00003638             73          LEA     ASCII12,A1
00001012  4E4F                      74          TRAP    #15
00001014  43F9 00003688             75          LEA     ASCII13,A1
0000101A  4E4F                      76          TRAP    #15
0000101C  43F9 000036D8             77          LEA     ASCII14,A1
00001022  4E4F                      78          TRAP    #15
00001024  43F9 00003728             79          LEA     ASCII15,A1
0000102A  4E4F                      80          TRAP    #15
0000102C  43F9 00003778             81          LEA     ASCII16,A1
00001032  4E4F                      82          TRAP    #15
00001034  43F9 0000379B             83          LEA     ASCII17,A1
0000103A  4E4F                      84          TRAP    #15
0000103C  43F9 000037BE             85          LEA     ASCII18,A1
00001042  4E4F                      86          TRAP    #15
00001044  43F9 000037E2             87          LEA     ASCII19,A1
0000104A  4E4F                      88          TRAP    #15
0000104C  43F9 0000382C             89          LEA     ASCII1A,A1
00001052  4E4F                      90          TRAP    #15
00001054  43F9 00003877             91          LEA     ASCII1B,A1
0000105A  4E4F                      92          TRAP    #15
0000105C  43F9 000038C4             93          LEA     ASCII1C,A1
00001062  4E4F                      94          TRAP    #15
00001064  43F9 00003912             95          LEA     ASCII1D,A1
0000106A  4E4F                      96          TRAP    #15
0000106C  43F9 00003961             97          LEA     ASCII1E,A1
00001072  4E4F                      98          TRAP    #15
00001074  43F9 000039B1             99          LEA     ASCII1F,A1
0000107A  4E4F                     100          TRAP    #15
0000107C  43F9 000032B2            101          LEA     NEWLINE,A1          Creates a new line in output window
00001082  103C 000E                102          MOVE.B  #14,D0
00001086  4E4F                     103          TRAP    #15
00001088                           104  
00001088                           105  *********************************************************************************************************************
00001088                           106  * Takes in user start and end address
00001088                           107  
00001088                           108  IOSTART
00001088                           109  *   Displays message asking for address
00001088  43F9 000033C0            110          LEA     MADDR1,A1           Loads message to retrieve first number
0000108E  6100 0020                111          BSR     IOGETADDR
00001092                           112  
00001092  0804 0000                113          BTST    #0,D4               Checks of the starting address is an odd number
00001096  6600 0090                114          BNE     IOERROR4            Throws an error if it is because it will crash
0000109A                           115  
0000109A  2E04                     116          MOVE.L  D4,D7               Moves starting address to D7 for now
0000109C  43F9 000033E3            117          LEA     MADDR2,A1           Then grabs the ending address
000010A2  6100 000C                118          BSR     IOGETADDR
000010A6  B887                     119          CMP.L   D7,D4               Compares the start address to end address
000010A8  6E00 008E                120          BGT     DISPADDR            Continues if start < end
000010AC  6000 004C                121          BRA     IOERROR1            Error if not
000010B0                           122  
000010B0                           123  IOGETADDR
000010B0  2649                     124          MOVEA.L A1,A3               Saves the message incase of an error
000010B2  103C 000E                125          MOVE.B  #14,D0              Prepares to display message
000010B6  4E4F                     126          TRAP    #15                 Displays message
000010B8                           127  
000010B8  4244                     128          CLR     D4                  Clears D4 register to prevent errors
000010BA                           129  
000010BA  43F9 00003A02            130          LEA     startaddr,A1        Uses this memory location to store the data
000010C0  103C 0002                131          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
000010C4  4E4F                     132          TRAP    #15
000010C6                           133  
000010C6  B23C 0008                134          CMP.B   #8,D1               Throws an error if the input is longer than a longword
000010CA  6E00 003C                135          BGT     IOERROR2
000010CE  1A01                     136          MOVE.B  D1,D5               Moves the length of the input to D5
000010D0                           137  
000010D0                           138  IOSTARTLOOP
000010D0  45F9 00003A02            139          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
000010D6                           140  
000010D6                           141  IOLOOP
000010D6  141A                     142          MOVE.B  (A2)+,D2            Moves data from current addr to D2
000010D8  5305                     143          SUB.B   #1,D5               Subtract 1 from counter
000010DA  6100 2050                144          BSR     DEC2HEX             Converts decimal to hex number
000010DE  B23C 000F                145          CMP.B   #$F,D1
000010E2  6700 0034                146          BEQ     IOERROR3
000010E6                           147  
000010E6  1C05                     148          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
000010E8  CDFC 0004                149          MULS    #4,D6               Multiply by 4 to find number of shifts left
000010EC                           150          
000010EC  EDAB                     151          LSL.L   D6,D3               Shifts hex left
000010EE  D883                     152          ADD.L   D3,D4               Adds number to new total
000010F0                           153          
000010F0  7600                     154          MOVE.L  #0,D3               Clears D3 to prevent errors
000010F2                           155          
000010F2  BA3C 0000                156          CMP.B   #0,D5               Compares counter to 0    
000010F6  66DE                     157          BNE     IOLOOP              Otherwise will loop
000010F8  4E75                     158          RTS
000010FA                           159  
000010FA                           160  * Error message for start address greater than end address
000010FA                           161  IOERROR1
000010FA  43F9 00003426            162          LEA     MIOERR1,A1
00001100  103C 000D                163          MOVE.B  #13,D0
00001104  4E4F                     164          TRAP    #15
00001106  6080                     165          BRA     IOSTART
00001108                           166  
00001108                           167  * Error message if user input address is longer than longword
00001108                           168  IOERROR2
00001108  43F9 0000345E            169          LEA     MIOERR2,A1
0000110E  103C 000D                170          MOVE.B  #13,D0
00001112  4E4F                     171          TRAP    #15
00001114  224B                     172          MOVEA.L A3,A1
00001116  6098                     173          BRA     IOGETADDR
00001118                           174  
00001118                           175  * Error message if user enters non-valid hex numbers
00001118                           176  IOERROR3
00001118  43F9 00003491            177          LEA     MIOERR3,A1
0000111E  103C 000D                178          MOVE.B  #13,D0
00001122  4E4F                     179          TRAP    #15
00001124  224B                     180          MOVEA.L A3,A1
00001126  6088                     181          BRA     IOGETADDR
00001128                           182  
00001128                           183  * Error message for odd numbered addresses
00001128                           184  IOERROR4
00001128  43F9 000034AD            185          LEA     MIOERR4,A1
0000112E  103C 000D                186          MOVE.B  #13,D0
00001132  4E4F                     187          TRAP    #15
00001134  6000 FF52                188          BRA     IOSTART
00001138                           189  
00001138                           190  ******************************************** displays address location***********************************************
00001138                           191  * This displays the address location of the op-code being worked on
00001138                           192  * A6 is used as current address
00001138                           193  DISPADDR
00001138  23C7 00003A02            194          MOVE.L  D7,startaddr
0000113E  23C4 00003A06            195          MOVE.L  D4,endaddr
00001144  6100 1E96                196          BSR     CLRDN
00001148  2C79 00003A02            197          MOVEA.L startaddr,A6        Moves starting addr into A6 register
0000114E  13FC 001E 00003A01       198          MOVE.B  #dispnum,dispcount  Sets display line counter
00001156                           199  
00001156  43F9 000032B2            200          LEA     NEWLINE,A1          Creates a new line in output window
0000115C  103C 000E                201          MOVE.B  #14,D0
00001160  4E4F                     202          TRAP    #15
00001162                           203  
00001162                           204  NEWADDR
00001162  2E0E                     205          MOVE.L  A6,D7               Loads the current address into D7
00001164  BEB9 00003A06            206          CMP.L   endaddr,D7          Compares current address to end address
0000116A  6E00 20D6                207          BGT     ASK4REPEAT          Branches to done if current address > end address
0000116E  45F9 00001202            208          LEA     DISPADDREND,A2
00001174                           209  
00001174                           210  ************************************************
00001174                           211  * Displays address as HEX
00001174                           212  * INPUT: address stored into D7
00001174                           213  * OUTPUT: prints hex address to output window
00001174                           214  DISPADDRSTART
00001174  1C3C 0002                215          MOVE.B  #2,D6               D6 is a counter, used for looping
00001178  2407                     216          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
0000117A  4842                     217          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
0000117C  6000 0004                218          BRA     DISPADDR2           Skips the second part to do later
00001180                           219  
00001180                           220  DISPADDR1
00001180  3407                     221          MOVE.W  D7,D2
00001182                           222  DISPADDR2
00001182  3202                     223          MOVE.W  D2,D1               D1 will be the first byte of the word
00001184  3602                     224          MOVE.W  D2,D3               D3 will be the second byte of the word
00001186  3802                     225          MOVE.W  D2,D4               D4 will be the third byte of the word
00001188  3A02                     226          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000118A                           227  
0000118A  E049                     228          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000118C  E849                     229          LSR.W   #4,D1
0000118E  E94B                     230          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001190  E04B                     231          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001192  E84B                     232          LSR.W   #4,D3
00001194  E14C                     233          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001196  E04C                     234          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001198  E84C                     235          LSR.W   #4,D4
0000119A  E14D                     236          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000119C  E94D                     237          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000119E  E04D                     238          LSR.W   #8,D5
000011A0  E84D                     239          LSR.W   #4,D5
000011A2                           240          
000011A2                           241          
000011A2  47F9 000011B6            242          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
000011A8  B23C 0009                243          CMP.B   #9,D1               Compares digit to 9
000011AC  6E00 1F0A                244          BGT     CONV                Print out letter representation if greater than 9
000011B0                           245  
000011B0  103C 0003                246          MOVE.B  #3,D0               Displays digit if it is less than A
000011B4  4E4F                     247          TRAP    #15
000011B6                           248          
000011B6                           249  DISPADDR3   
000011B6  1203                     250          MOVE.B  D3,D1               Displays digit in 1's place second
000011B8                           251  
000011B8                           252          *   converts digits 10+ into letters
000011B8  47F9 000011CC            253          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
000011BE  B23C 0009                254          CMP.B   #9,D1               Compares digit to 9
000011C2  6E00 1EF4                255          BGT     CONV                Print out letter representation if greater than 9
000011C6                           256          
000011C6  103C 0003                257          MOVE.B  #3,D0               Displays digit if it is less than A
000011CA  4E4F                     258          TRAP    #15
000011CC                           259  
000011CC                           260  DISPADDR4
000011CC  1204                     261          MOVE.B  D4,D1               Displays digit in 1's place second
000011CE                           262  
000011CE                           263          *   converts digits 10+ into letters
000011CE  47F9 000011E2            264          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
000011D4  B23C 0009                265          CMP.B   #9,D1               Compares digit to 9
000011D8  6E00 1EDE                266          BGT     CONV                Print out letter representation if greater than 9
000011DC                           267          
000011DC  103C 0003                268          MOVE.B  #3,D0               Displays digit if it is less than A
000011E0  4E4F                     269          TRAP    #15
000011E2                           270  
000011E2                           271  DISPADDR5
000011E2  1205                     272          MOVE.B  D5,D1               Displays digit in 1's place second
000011E4                           273  
000011E4                           274          *   converts digits 10+ into letters
000011E4  47F9 000011F8            275          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
000011EA  B23C 0009                276          CMP.B   #9,D1               Compares digit to 9
000011EE  6E00 1EC8                277          BGT     CONV                Print out letter representation if greater than 9
000011F2                           278          
000011F2  103C 0003                279          MOVE.B  #3,D0               Displays digit if it is less than A
000011F6  4E4F                     280          TRAP    #15
000011F8                           281          
000011F8                           282  DISPADDR6
000011F8                           283  * Display counter -- creates new line every 8 bytes
000011F8                           284          * D6 is used as counter
000011F8                           285          
000011F8  5306                     286          SUB.B   #1,D6
000011FA  BC3C 0000                287          CMP.B   #0,D6
000011FE  6680                     288          BNE     DISPADDR1
00001200                           289  
00001200  4ED2                     290          JMP     (A2)                Jumps to address stored in A2 when complete
00001202                           291  
00001202                           292  DISPADDREND
00001202  43F9 000032B5            293          LEA     TAB,A1
00001208  103C 000E                294          MOVE.B  #14,D0
0000120C  4E4F                     295          TRAP    #15
0000120E                           296          
0000120E                           297  *********************************************************************************************************************
0000120E                           298  * Splits the first byte of the op code into nibbles
0000120E                           299  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000120E                           300  
0000120E  4281                     301          CLR.L   D1                  Clears the data registers
00001210  4282                     302          CLR.L   D2
00001212  4283                     303          CLR.L   D3
00001214  4284                     304          CLR.L   D4
00001216  4285                     305          CLR.L   D5
00001218  4286                     306          CLR.L   D6
0000121A  3C16                     307          MOVE.W  (A6),D6
0000121C  141E                     308          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000121E                           309    
0000121E  1E02                     310          MOVE.B  D2,D7
00001220  E14F                     311          LSL.W   #8,D7
00001222                           312          
00001222  1602                     313          MOVE.B  D2,D3               Copies data at D2 to D3
00001224                           314          *   this gets digit in 10's place
00001224  E80B                     315          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001226                           316          *   this gets digit in 1's place
00001226  E90A                     317          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001228  E80A                     318          LSR.B   #4,D2               Shifts back right into 1's place
0000122A                           319          
0000122A                           320          *   D3 holds digit in 10's place
0000122A                           321          *   D2 holds digit in 1's place
0000122A                           322  
0000122A                           323          *   Moves second nibble to D5 to be used later
0000122A  1A02                     324          MOVE.B  D2,D5
0000122C  13C3 00003A0A            325          MOVE.B  D3,bit0
00001232                           326          *   Goes to a branch-table to figure out which op code it is
00001232  6000 0002                327          BRA     CODE
00001236                           328  
00001236                           329  ******************************************************************************************************
00001236                           330  *   This is where the table goes to detirmine which op-code to use
00001236                           331  CODE    
00001236  B63C 0000                332          CMP.B   #$0,D3              Goes to immediate operation section
0000123A  6700 0F0A                333          BEQ     IMD
0000123E  B63C 0004                334          CMP.B   #$4,D3              Goes to miscellaneous section
00001242  6700 104C                335          BEQ     MISC
00001246  B63C 0005                336          CMP.B   #$5,D3
0000124A  6700 12CE                337          BEQ     ADDQ                Goes to addq section
0000124E  B63C 0006                338          CMP.B   #$6,D3
00001252  6700 0E3E                339          BEQ     BCC
00001256  B63C 0009                340          CMP.B   #$9,D3              Goes to sub section
0000125A  6700 16A6                341          BEQ     SUB
0000125E  B63C 000C                342          CMP.B   #$C,D3              Goes to sub but displays as AND
00001262  6700 169E                343          BEQ     SUB
00001266  B63C 000D                344          CMP.B   #$D,D3              Goes to sub but displays as ADD
0000126A  6700 1696                345          BEQ     SUB
0000126E  B63C 000B                346          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
00001272  6700 168E                347          BEQ     SUB
00001276  B63C 0001                348          CMP.B   #$1,D3
0000127A  6700 02C4                349          BEQ     MOVB                Goes to movb
0000127E  B63C 0003                350          CMP.B   #$3,D3
00001282  6700 00FC                351          BEQ     MOVW                Goes to movb
00001286  B63C 0002                352          CMP.B   #$2,D3
0000128A  6700 01D4                353          BEQ     MOVL                Goes to movb
0000128E  B63C 0008                354          CMP.B   #$8,D3
00001292  6700 08E4                355          BEQ     DIVSW               Goes to divsw
00001296  B63C 000E                356          CMP.B   #$E,D3
0000129A  6700 0AC0                357          BEQ     LSLR                Goes to divsw
0000129E                           358  
0000129E  6000 1D4E                359          BRA     INVOPCODE
000012A2                           360  
000012A2                           361  ******************************************************************************************************
000012A2                           362  * 
000012A2                           363  JSR
000012A2  43F9 000032E4            364          LEA MJSR,A1
000012A8  103C 000E                365          MOVE.B  #14,D0
000012AC  4E4F                     366          TRAP    #15 
000012AE                           367          
000012AE  1406                     368          MOVE.B  D6,D2
000012B0  EB0A                     369          LSL.B   #5,D2
000012B2  EA0A                     370          LSR.B   #5,D2
000012B4  13C2 00003A0E            371          MOVE.B  D2,bit4
000012BA                           372          
000012BA  1406                     373          MOVE.B  D6,D2
000012BC  E50A                     374          LSL.B   #2,D2
000012BE  EA0A                     375          LSR.B   #5,D2
000012C0  13C2 00003A0D            376          MOVE.B  D2,bit3
000012C6                           377  
000012C6  183C 0003                378          MOVE.B  #$3,D4
000012CA                           379  
000012CA  0C39 0002 00003A0D       380          CMP.B   #$2,bit3
000012D2  6700 0476                381          BEQ     MOVEIAN1
000012D6                           382          
000012D6  43F9 000032B5            383          LEA     TAB,A1
000012DC  323C 0003                384          MOVE    #3,D1
000012E0  4E4F                     385          TRAP    #15
000012E2                           386          
000012E2  0C39 0007 00003A0D       387          CMP.B   #$7,bit3
000012EA  6700 0394                388          BEQ     ADDIMDDES
000012EE                           389          
000012EE                           390  BTST 
000012EE  43F9 000032E8            391          LEA MBTST,A1
000012F4  103C 000E                392          MOVE.B  #14,D0
000012F8  4E4F                     393          TRAP    #15 
000012FA                           394          
000012FA  1406                     395          MOVE.B  D6,D2
000012FC  EB0A                     396          LSL.B   #5,D2
000012FE  EA0A                     397          LSR.B   #5,D2
00001300  13C2 00003A0B            398          MOVE.B  D2,bit1
00001306                           399          
00001306  1406                     400          MOVE.B  D6,D2
00001308  E50A                     401          LSL.B   #2,D2
0000130A  EA0A                     402          LSR.B   #5,D2
0000130C  13C2 00003A0C            403          MOVE.B  D2,bit2
00001312                           404          
00001312  3406                     405          MOVE.W  D6,D2
00001314  E94A                     406          LSL.W   #4,D2
00001316  E04A                     407          LSR.W   #8,D2
00001318  EA4A                     408          LSR.W   #5,D2
0000131A  13C2 00003A0D            409          MOVE.B  D2,bit3
00001320                           410          
00001320  3406                     411          MOVE.W  D6,D2
00001322  EF4A                     412          LSL.W   #7,D2
00001324  E04A                     413          LSR.W   #8,D2
00001326  EE4A                     414          LSR.W   #7,D2
00001328  13C2 00003A0A            415          MOVE.B  D2,bit0
0000132E                           416          
0000132E  0C39 0000 00003A0A       417          CMP.B   #0,bit0
00001336  6700 002E                418          BEQ     BTSTMEM
0000133A                           419          
0000133A  43F9 000032B5            420          LEA TAB,A1
00001340  103C 000E                421          MOVE.B  #14,D0
00001344  4E4F                     422          TRAP    #15
00001346                           423  
00001346  43F9 000032CD            424          LEA DISPD,A1
0000134C  103C 000E                425          MOVE.B  #14,D0
00001350  4E4F                     426          TRAP    #15
00001352                           427          
00001352  1A3C 0004                428          MOVE.B   #$4,D5
00001356                           429          
00001356  1239 00003A0D            430          MOVE.B  bit3,D1
0000135C  103C 0003                431          MOVE.B  #3,D0
00001360  4E4F                     432          TRAP    #15
00001362                           433          
00001362  6000 02C4                434          BRA HANDLEDES
00001366                           435          
00001366                           436  BTSTMEM
00001366  43F9 000032B5            437          LEA TAB,A1
0000136C  123C 0003                438          MOVE.B  #3,D1
00001370  4E4F                     439          TRAP    #15
00001372                           440          
00001372  183C 0001                441          MOVE.B  #$1,D4
00001376  45F9 00001628            442          LEA     HANDLEDES,A2
0000137C  6000 1BF8                443          BRA     DISPEA
00001380                           444          
00001380                           445  MOVW
00001380  E20A                     446          LSR.B   #1,D2
00001382  13C2 00003A0B            447          MOVE.B  D2,bit1
00001388                           448          
00001388  1416                     449          MOVE.B  (A6),D2
0000138A  EB0A                     450          LSL.B   #5,D2
0000138C  EA0A                     451          LSR.B   #5,D2
0000138E  13C2 00003A0E            452          MOVE.B  D2,bit4
00001394                           453          
00001394  141E                     454          MOVE.B  (A6)+,D2
00001396  E50A                     455          LSL.B   #2,D2
00001398  EA0A                     456          LSR.B   #5,D2
0000139A  13C2 00003A0D            457          MOVE.B  D2,bit3
000013A0                           458          
000013A0  EF4E                     459          LSL.W   #7,D6
000013A2  E04E                     460          LSR.W   #8,D6 
000013A4  EA4E                     461          LSR.W   #5,D6 
000013A6  13C6 00003A0C            462          MOVE.B  D6,bit2
000013AC                           463  
000013AC  0C39 0001 00003A0C       464          CMP.B   #$1,bit2
000013B4  6700 0056                465          BEQ     MOVEAW
000013B8                           466  
000013B8  43F9 00003317            467          LEA MMOVEW,A1
000013BE  103C 000E                468          MOVE.B  #14,D0
000013C2  4E4F                     469          TRAP    #15 
000013C4                           470  
000013C4  0C39 0000 00003A0D       471          CMP.B   #$0,bit3           
000013CC  6700 0558                472          BEQ     MOVBDN1
000013D0  0C39 0001 00003A0D       473          CMP.B   #$1,bit3
000013D8  6700 02FC                474          BEQ     MOVEAN1
000013DC  0C39 0002 00003A0D       475          CMP.B   #$2,bit3
000013E4  6700 0364                476          BEQ     MOVEIAN1
000013E8  0C39 0003 00003A0D       477          CMP.B   #$3,bit3
000013F0  6700 03EC                478          BEQ     MOVEIANI1
000013F4  0C39 0004 00003A0D       479          CMP.B   #$4,bit3
000013FC  6700 0488                480          BEQ     MOVEIAND1
00001400  0C39 0007 00003A0D       481          CMP.B   #$7,bit3
00001408  6700 01BC                482          BEQ     ADDIMD
0000140C                           483  
0000140C                           484  MOVEAW
0000140C  43F9 00003325            485          LEA MMOVEAW,A1
00001412  103C 000E                486          MOVE.B  #14,D0
00001416  4E4F                     487          TRAP    #15 
00001418                           488          
00001418  0C39 0000 00003A0D       489          CMP.B   #$0,bit3           
00001420  6700 0504                490          BEQ     MOVBDN1
00001424  0C39 0001 00003A0D       491          CMP.B   #$1,bit3
0000142C  6700 02A8                492          BEQ     MOVEAN1
00001430  0C39 0002 00003A0D       493          CMP.B   #$2,bit3
00001438  6700 0310                494          BEQ     MOVEIAN1
0000143C  0C39 0003 00003A0D       495          CMP.B   #$3,bit3
00001444  6700 0398                496          BEQ     MOVEIANI1
00001448  0C39 0004 00003A0D       497          CMP.B   #$4,bit3
00001450  6700 0434                498          BEQ     MOVEIAND1
00001454  0C39 0007 00003A0D       499          CMP.B   #$7,bit3
0000145C  6700 0168                500          BEQ     ADDIMD
00001460                           501  
00001460                           502  MOVL
00001460  E20A                     503          LSR.B   #1,D2
00001462  13C2 00003A0B            504          MOVE.B  D2,bit1
00001468                           505          
00001468  1416                     506          MOVE.B  (A6),D2
0000146A  EB0A                     507          LSL.B   #5,D2
0000146C  EA0A                     508          LSR.B   #5,D2
0000146E  13C2 00003A0E            509          MOVE.B  D2,bit4
00001474                           510          
00001474  141E                     511          MOVE.B  (A6)+,D2
00001476  E50A                     512          LSL.B   #2,D2
00001478  EA0A                     513          LSR.B   #5,D2
0000147A  13C2 00003A0D            514          MOVE.B  D2,bit3
00001480                           515          
00001480  EF4E                     516          LSL.W   #7,D6
00001482  E04E                     517          LSR.W   #8,D6 
00001484  EA4E                     518          LSR.W   #5,D6 
00001486  13C6 00003A0C            519          MOVE.B  D6,bit2
0000148C                           520          
0000148C  0C39 0001 00003A0C       521          CMP.B   #$1,bit2
00001494  6700 0056                522          BEQ     MOVEAL
00001498                           523  
00001498  43F9 0000331E            524          LEA MMOVEL,A1
0000149E  103C 000E                525          MOVE.B  #14,D0
000014A2  4E4F                     526          TRAP    #15 
000014A4                           527          
000014A4  0C39 0000 00003A0D       528          CMP.B   #$0,bit3           
000014AC  6700 0478                529          BEQ     MOVBDN1
000014B0  0C39 0001 00003A0D       530          CMP.B   #$1,bit3
000014B8  6700 021C                531          BEQ     MOVEAN1
000014BC  0C39 0002 00003A0D       532          CMP.B   #$2,bit3
000014C4  6700 0284                533          BEQ     MOVEIAN1
000014C8  0C39 0003 00003A0D       534          CMP.B   #$3,bit3
000014D0  6700 030C                535          BEQ     MOVEIANI1
000014D4  0C39 0004 00003A0D       536          CMP.B   #$4,bit3
000014DC  6700 03A8                537          BEQ     MOVEIAND1
000014E0  0C39 0007 00003A0D       538          CMP.B   #$7,bit3
000014E8  6700 00DC                539          BEQ     ADDIMD
000014EC                           540  
000014EC                           541  MOVEAL
000014EC  43F9 0000332D            542          LEA MMOVEAL,A1
000014F2  103C 000E                543          MOVE.B  #14,D0
000014F6  4E4F                     544          TRAP    #15 
000014F8                           545          
000014F8  0C39 0000 00003A0D       546          CMP.B   #$0,bit3           
00001500  6700 0424                547          BEQ     MOVBDN1
00001504  0C39 0001 00003A0D       548          CMP.B   #$1,bit3
0000150C  6700 01C8                549          BEQ     MOVEAN1
00001510  0C39 0002 00003A0D       550          CMP.B   #$2,bit3
00001518  6700 0230                551          BEQ     MOVEIAN1
0000151C  0C39 0003 00003A0D       552          CMP.B   #$3,bit3
00001524  6700 02B8                553          BEQ     MOVEIANI1
00001528  0C39 0004 00003A0D       554          CMP.B   #$4,bit3
00001530  6700 0354                555          BEQ     MOVEIAND1
00001534  0C39 0007 00003A0D       556          CMP.B   #$7,bit3
0000153C  6700 0088                557          BEQ     ADDIMD        
00001540                           558  
00001540                           559  MOVB
00001540  43F9 00003310            560          LEA MMOVEB,A1
00001546  103C 000E                561          MOVE.B  #14,D0
0000154A  4E4F                     562          TRAP    #15 
0000154C                           563          
0000154C  E20A                     564          LSR.B   #1,D2
0000154E  13C2 00003A0B            565          MOVE.B  D2,bit1
00001554                           566          
00001554  1416                     567          MOVE.B  (A6),D2
00001556  EB0A                     568          LSL.B   #5,D2
00001558  EA0A                     569          LSR.B   #5,D2
0000155A  13C2 00003A0E            570          MOVE.B  D2,bit4
00001560                           571          
00001560  141E                     572          MOVE.B  (A6)+,D2
00001562  E50A                     573          LSL.B   #2,D2
00001564  EA0A                     574          LSR.B   #5,D2
00001566  13C2 00003A0D            575          MOVE.B  D2,bit3
0000156C                           576          
0000156C  EF4E                     577          LSL.W   #7,D6
0000156E  E04E                     578          LSR.W   #8,D6 
00001570  EA4E                     579          LSR.W   #5,D6 
00001572  13C6 00003A0C            580          MOVE.B  D6,bit2
00001578                           581          
00001578                           582      
00001578  4285                     583          CLR.L   D5
0000157A                           584          
0000157A  0C39 0000 00003A0D       585          CMP.B   #$0,bit3           
00001582  6700 03A2                586          BEQ     MOVBDN1
00001586  0C39 0001 00003A0D       587          CMP.B   #$1,bit3
0000158E  6700 0146                588          BEQ     MOVEAN1
00001592  0C39 0002 00003A0D       589          CMP.B   #$2,bit3
0000159A  6700 01AE                590          BEQ     MOVEIAN1
0000159E  0C39 0003 00003A0D       591          CMP.B   #$3,bit3
000015A6  6700 0236                592          BEQ     MOVEIANI1
000015AA  0C39 0004 00003A0D       593          CMP.B   #$4,bit3
000015B2  6700 02D2                594          BEQ     MOVEIAND1
000015B6  0C39 0007 00003A0D       595          CMP.B   #$7,bit3
000015BE  6700 0006                596          BEQ     ADDIMD
000015C2                           597          
000015C2  6000 1A2C                598          BRA     INVOP
000015C6                           599  
000015C6                           600  ADDIMD
000015C6  43F9 000032B5            601      LEA     TAB,A1
000015CC  103C 000E                602      MOVE.B  #14,D0
000015D0  4E4F                     603      TRAP    #15
000015D2                           604      
000015D2  0C39 0000 00003A0E       605      CMP.B   #$0,bit4
000015DA  6700 001A                606      BEQ     ADDIMD0
000015DE  0C39 0001 00003A0E       607      CMP.B   #$1,bit4
000015E6  6700 001C                608      BEQ     ADDIMD1
000015EA  0C39 0004 00003A0E       609      CMP.B   #$4,bit4
000015F2  6700 001E                610      BEQ     ADDIMD4
000015F6                           611  
000015F6                           612  ADDIMD0
000015F6  183C 0001                613      MOVE.B  #$1,D4
000015FA  45F9 00001628            614      LEA     HANDLEDES,A2
00001600  6000 1974                615      BRA     DISPEA
00001604                           616  ADDIMD1 
00001604  183C 0002                617      MOVE.B  #$2,D4
00001608  45F9 00001628            618      LEA     HANDLEDES,A2
0000160E  6000 1966                619      BRA     DISPEA
00001612                           620  ADDIMD4
00001612  43F9 000032C3            621      LEA     HASH,A1
00001618  103C 000E                622      MOVE.B  #14,D0
0000161C  4E4F                     623      TRAP    #15
0000161E                           624      
0000161E  45F9 00001628            625      LEA     HANDLEDES,A2
00001624  6000 1950                626      BRA     DISPEA 
00001628                           627      
00001628                           628  HANDLEDES
00001628  43F9 000032B9            629      LEA     COMMA,A1
0000162E  103C 000E                630      MOVE.B  #14,D0
00001632  4E4F                     631      TRAP    #15
00001634                           632      
00001634  0C39 0000 00003A0C       633      CMP.B   #$0,bit2
0000163C  6700 0488                634      BEQ     MOVBDN2
00001640  0C39 0001 00003A0C       635      CMP.B   #$1,bit2
00001648  6700 03AC                636      BEQ     MOVEAN2
0000164C  0C39 0002 00003A0C       637      CMP.B   #$2,bit2 
00001654  6700 03BC                638      BEQ     MOVIAN2
00001658  0C39 0003 00003A0C       639      CMP.B   #$3,bit2 
00001660  6700 03E4                640      BEQ     MOVIANI2
00001664  0C39 0004 00003A0C       641      CMP.B   #$4,bit2 
0000166C  6700 0418                642      BEQ     MOVIAND2
00001670  BA3C 0005                643      CMP.B   #$5,D5
00001674  6700 0450                644      BEQ     MOVBDN2
00001678  BA3C 0007                645      CMP.B   #$7,D5
0000167C  6700 0002                646      BEQ     ADDIMDDES
00001680                           647  
00001680                           648  ADDIMDDES
00001680  0C39 0000 00003A0E       649      CMP.B   #$0,bit4
00001688  6700 001A                650      BEQ     ADDIMDDES0
0000168C  0C39 0001 00003A0E       651      CMP.B   #$1,bit4
00001694  6700 001C                652      BEQ     ADDIMDDES1
00001698  0C39 0004 00003A0E       653      CMP.B   #$4,bit4
000016A0  6700 001E                654      BEQ     ADDIMDDES4
000016A4                           655      
000016A4                           656  ADDIMDDES0
000016A4  183C 0001                657      MOVE.B  #$1,D4
000016A8  45F9 00003062            658      LEA     ENDNEWLINE,A2
000016AE  6000 18C6                659      BRA     DISPEA
000016B2                           660      
000016B2                           661  ADDIMDDES1
000016B2  183C 0002                662      MOVE.B  #$2,D4
000016B6  45F9 00003062            663      LEA     ENDNEWLINE,A2
000016BC  6000 18B8                664      BRA     DISPEA
000016C0                           665      
000016C0                           666  ADDIMDDES4    
000016C0  43F9 000032C3            667      LEA     HASH,A1
000016C6  103C 000E                668      MOVE.B  #14,D0
000016CA  4E4F                     669      TRAP    #15
000016CC                           670      
000016CC  45F9 00003062            671      LEA     ENDNEWLINE,A2
000016D2  6000 18A2                672      BRA     DISPEA 
000016D6                           673          
000016D6                           674  MOVEAN1
000016D6  43F9 000032B5            675      LEA TAB,A1
000016DC  103C 000E                676      MOVE.B  #14,D0
000016E0  4E4F                     677      TRAP    #15
000016E2                           678  
000016E2  43F9 000032C7            679      LEA DISPA,A1
000016E8  103C 000E                680      MOVE.B  #14,D0
000016EC  4E4F                     681      TRAP    #15
000016EE                           682      
000016EE  1239 00003A0E            683      MOVE.B  bit4,D1
000016F4  103C 0003                684      MOVE.B  #3,D0
000016F8  4E4F                     685      TRAP    #15
000016FA                           686      
000016FA  43F9 000032B9            687      LEA COMMA,A1
00001700  103C 000E                688      MOVE.B  #14,D0
00001704  4E4F                     689      TRAP    #15
00001706                           690      
00001706  0C39 0000 00003A0C       691      CMP.B   #$0,bit2
0000170E  6700 03B6                692      BEQ     MOVBDN2
00001712  0C39 0001 00003A0C       693      CMP.B   #$1,bit2
0000171A  6700 02DA                694      BEQ     MOVEAN2
0000171E  0C39 0002 00003A0C       695      CMP.B   #$2,bit2 
00001726  6700 02EA                696      BEQ     MOVIAN2
0000172A  0C39 0003 00003A0C       697      CMP.B   #$3,bit2 
00001732  6700 0312                698      BEQ     MOVIANI2
00001736  0C39 0004 00003A0C       699      CMP.B   #$4,bit2 
0000173E  6700 0346                700      BEQ     MOVIAND2
00001742  BA3C 0005                701      CMP.B   #$5,D5
00001746  6700 037E                702      BEQ     MOVBDN2
0000174A                           703      
0000174A                           704  MOVEIAN1
0000174A  43F9 000032B5            705      LEA TAB,A1
00001750  103C 000E                706      MOVE.B  #14,D0
00001754  4E4F                     707      TRAP    #15
00001756                           708      
00001756  43F9 000032BB            709      LEA OPENBRA,A1
0000175C  103C 000E                710      MOVE.B  #14,D0
00001760  4E4F                     711      TRAP    #15
00001762                           712  
00001762  43F9 000032C7            713      LEA DISPA,A1
00001768  103C 000E                714      MOVE.B  #14,D0
0000176C  4E4F                     715      TRAP    #15
0000176E                           716      
0000176E  1239 00003A0E            717      MOVE.B  bit4,D1
00001774  103C 0003                718      MOVE.B  #3,D0
00001778  4E4F                     719      TRAP    #15
0000177A                           720      
0000177A  43F9 000032BD            721      LEA CLOSEBRA,A1
00001780  103C 000E                722      MOVE.B  #14,D0
00001784  4E4F                     723      TRAP    #15
00001786                           724      
00001786  B83C 0003                725      CMP.B   #$3,D4
0000178A  6700 18D6                726      BEQ     ENDNEWLINE
0000178E                           727      
0000178E  43F9 000032B9            728      LEA COMMA,A1
00001794  103C 000E                729      MOVE.B  #14,D0
00001798  4E4F                     730      TRAP    #15
0000179A                           731      
0000179A  0C39 0000 00003A0C       732      CMP.B   #$0,bit2
000017A2  6700 0322                733      BEQ     MOVBDN2
000017A6  0C39 0001 00003A0C       734      CMP.B   #$1,bit2
000017AE  6700 0246                735      BEQ     MOVEAN2
000017B2  0C39 0002 00003A0C       736      CMP.B   #$2,bit2 
000017BA  6700 0256                737      BEQ     MOVIAN2
000017BE  0C39 0003 00003A0C       738      CMP.B   #$3,bit2 
000017C6  6700 027E                739      BEQ     MOVIANI2
000017CA  0C39 0004 00003A0C       740      CMP.B   #$4,bit2 
000017D2  6700 02B2                741      BEQ     MOVIAND2
000017D6  BA3C 0005                742      CMP.B   #$5,D5
000017DA  6700 02EA                743      BEQ     MOVBDN2
000017DE                           744  
000017DE                           745  MOVEIANI1
000017DE  43F9 000032B5            746      LEA TAB,A1
000017E4  103C 000E                747      MOVE.B  #14,D0
000017E8  4E4F                     748      TRAP    #15
000017EA                           749      
000017EA  43F9 000032BB            750      LEA OPENBRA,A1
000017F0  103C 000E                751      MOVE.B  #14,D0
000017F4  4E4F                     752      TRAP    #15
000017F6                           753  
000017F6  43F9 000032C7            754      LEA DISPA,A1
000017FC  103C 000E                755      MOVE.B  #14,D0
00001800  4E4F                     756      TRAP    #15
00001802                           757      
00001802  1239 00003A0E            758      MOVE.B  bit4,D1
00001808  103C 0003                759      MOVE.B  #3,D0
0000180C  4E4F                     760      TRAP    #15
0000180E                           761      
0000180E  43F9 000032BD            762      LEA CLOSEBRA,A1
00001814  103C 000E                763      MOVE.B  #14,D0
00001818  4E4F                     764      TRAP    #15
0000181A                           765      
0000181A  43F9 000032BF            766      LEA POS,A1
00001820  103C 000E                767      MOVE.B  #14,D0
00001824  4E4F                     768      TRAP    #15
00001826                           769      
00001826  BA3C 0003                770      CMP.B   #$3,D5
0000182A  6700 1836                771      BEQ     ENDNEWLINE
0000182E                           772             
0000182E  BA3C 0004                773      CMP.B   #$4,D5
00001832  6700 182E                774      BEQ     ENDNEWLINE
00001836                           775          
00001836                           776          
00001836  43F9 000032B9            777      LEA COMMA,A1
0000183C  103C 000E                778      MOVE.B  #14,D0
00001840  4E4F                     779      TRAP    #15
00001842                           780      
00001842  0C39 0000 00003A0C       781      CMP.B   #$0,bit2
0000184A  6700 027A                782      BEQ     MOVBDN2
0000184E  0C39 0001 00003A0C       783      CMP.B   #$1,bit2
00001856  6700 019E                784      BEQ     MOVEAN2
0000185A  0C39 0002 00003A0C       785      CMP.B   #$2,bit2 
00001862  6700 01AE                786      BEQ     MOVIAN2
00001866  0C39 0003 00003A0C       787      CMP.B   #$3,bit2 
0000186E  6700 01D6                788      BEQ     MOVIANI2
00001872  0C39 0004 00003A0C       789      CMP.B   #$4,bit2 
0000187A  6700 020A                790      BEQ     MOVIAND2
0000187E  BA3C 0005                791      CMP.B   #$5,D5
00001882  6700 0242                792      BEQ     MOVBDN2
00001886                           793  
00001886                           794  MOVEIAND1
00001886  43F9 000032B5            795      LEA TAB,A1
0000188C  103C 000E                796      MOVE.B  #14,D0
00001890  4E4F                     797      TRAP    #15
00001892                           798      
00001892  43F9 000032C1            799      LEA NEG,A1
00001898  103C 000E                800      MOVE.B  #14,D0
0000189C  4E4F                     801      TRAP    #15
0000189E                           802      
0000189E  43F9 000032BB            803      LEA OPENBRA,A1
000018A4  103C 000E                804      MOVE.B  #14,D0
000018A8  4E4F                     805      TRAP    #15
000018AA                           806  
000018AA  43F9 000032C7            807      LEA DISPA,A1
000018B0  103C 000E                808      MOVE.B  #14,D0
000018B4  4E4F                     809      TRAP    #15
000018B6                           810      
000018B6  1239 00003A0E            811      MOVE.B  bit4,D1
000018BC  103C 0003                812      MOVE.B  #3,D0
000018C0  4E4F                     813      TRAP    #15
000018C2                           814      
000018C2  43F9 000032BD            815      LEA CLOSEBRA,A1
000018C8  103C 000E                816      MOVE.B  #14,D0
000018CC  4E4F                     817      TRAP    #15
000018CE                           818      
000018CE  BA3C 0004                819      CMP.B   #$4,D5
000018D2  6700 178E                820      BEQ     ENDNEWLINE
000018D6                           821      
000018D6  43F9 000032B9            822      LEA COMMA,A1
000018DC  103C 000E                823      MOVE.B  #14,D0
000018E0  4E4F                     824      TRAP    #15
000018E2                           825      
000018E2  0C39 0000 00003A0C       826      CMP.B   #$0,bit2
000018EA  6700 01DA                827      BEQ     MOVBDN2
000018EE  0C39 0001 00003A0C       828      CMP.B   #$1,bit2
000018F6  6700 00FE                829      BEQ     MOVEAN2
000018FA  0C39 0002 00003A0C       830      CMP.B   #$2,bit2 
00001902  6700 010E                831      BEQ     MOVIAN2
00001906  0C39 0003 00003A0C       832      CMP.B   #$3,bit2 
0000190E  6700 0136                833      BEQ     MOVIANI2
00001912  0C39 0004 00003A0C       834      CMP.B   #$4,bit2 
0000191A  6700 016A                835      BEQ     MOVIAND2
0000191E  BA3C 0005                836      CMP.B   #$5,D5
00001922  6700 01A2                837      BEQ     MOVBDN2
00001926                           838  
00001926                           839  MOVBDN1
00001926  43F9 000032B5            840      LEA TAB,A1
0000192C  103C 000E                841      MOVE.B  #14,D0
00001930  4E4F                     842      TRAP    #15
00001932                           843  
00001932  BA3C 0006                844      CMP.B   #$6,D5             * Data Reg for LSLR
00001936  6700 007A                845      BEQ     LSLRSRCD
0000193A                           846  
0000193A  43F9 000032CD            847      LEA DISPD,A1
00001940  103C 000E                848      MOVE.B  #14,D0
00001944  4E4F                     849      TRAP    #15
00001946                           850      
00001946  1239 00003A0E            851      MOVE.B  bit4,D1
0000194C  103C 0003                852      MOVE.B  #3,D0
00001950  4E4F                     853      TRAP    #15
00001952                           854  
00001952  BA3C 0004                855      CMP.B   #$4,D5
00001956  6700 0192                856      BEQ     ENDNLINC
0000195A                           857  
0000195A  43F9 000032B9            858      LEA COMMA,A1
00001960  103C 000E                859      MOVE.B  #14,D0
00001964  4E4F                     860      TRAP    #15
00001966                           861  
00001966  BA3C 0006                862      CMP.B   #$6,D5             * Data Reg for LSLR
0000196A  6700 006E                863      BEQ     LSLRDESD
0000196E  0C39 0000 00003A0C       864      CMP.B   #$0,bit2
00001976  6700 014E                865      BEQ     MOVBDN2
0000197A  0C39 0001 00003A0C       866      CMP.B   #$1,bit2
00001982  6700 0072                867      BEQ     MOVEAN2
00001986  0C39 0002 00003A0C       868      CMP.B   #$2,bit2 
0000198E  6700 0082                869      BEQ     MOVIAN2
00001992  0C39 0003 00003A0C       870      CMP.B   #$3,bit2 
0000199A  6700 00AA                871      BEQ     MOVIANI2
0000199E  0C39 0004 00003A0C       872      CMP.B   #$4,bit2 
000019A6  6700 00DE                873      BEQ     MOVIAND2
000019AA  BA3C 0005                874      CMP.B   #$5,D5
000019AE  6700 0116                875      BEQ     MOVBDN2
000019B2                           876      
000019B2                           877  LSLRSRCD
000019B2  43F9 000032CD            878      LEA DISPD,A1
000019B8  103C 000E                879      MOVE.B  #14,D0
000019BC  4E4F                     880      TRAP    #15
000019BE                           881          
000019BE  1239 00003A0A            882      MOVE.B  bit0,D1
000019C4  103C 0003                883      MOVE.B  #3,D0
000019C8  4E4F                     884      TRAP    #15    
000019CA                           885  
000019CA  43F9 000032B9            886      LEA COMMA,A1
000019D0  103C 000E                887      MOVE.B  #14,D0
000019D4  4E4F                     888      TRAP    #15  
000019D6                           889      
000019D6  6000 0002                890      BRA     LSLRDESD
000019DA                           891      
000019DA                           892  LSLRDESD
000019DA  43F9 000032CD            893      LEA DISPD,A1
000019E0  103C 000E                894      MOVE.B  #14,D0
000019E4  4E4F                     895      TRAP    #15
000019E6                           896          
000019E6  1239 00003A0E            897      MOVE.B  bit4,D1
000019EC  103C 0003                898      MOVE.B  #3,D0
000019F0  4E4F                     899      TRAP    #15      
000019F2                           900      
000019F2                           901      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019F2  6000 166E                902      BRA     ENDNEWLINE       
000019F6                           903  
000019F6                           904  MOVEAN2
000019F6  43F9 000032C7            905      LEA DISPA,A1
000019FC  103C 000E                906      MOVE.B  #14,D0
00001A00  4E4F                     907      TRAP    #15
00001A02                           908      
00001A02  1239 00003A0B            909      MOVE.B  bit1,D1
00001A08  103C 0003                910      MOVE.B  #3,D0
00001A0C  4E4F                     911      TRAP    #15
00001A0E                           912  
00001A0E                           913      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A0E  6000 1652                914      BRA     ENDNEWLINE    
00001A12                           915  
00001A12                           916  MOVIAN2
00001A12  43F9 000032BB            917      LEA OPENBRA,A1
00001A18  103C 000E                918      MOVE.B  #14,D0
00001A1C  4E4F                     919      TRAP    #15
00001A1E                           920  
00001A1E  43F9 000032C7            921      LEA DISPA,A1
00001A24  103C 000E                922      MOVE.B  #14,D0
00001A28  4E4F                     923      TRAP    #15
00001A2A                           924      
00001A2A  1239 00003A0B            925      MOVE.B  bit1,D1
00001A30  103C 0003                926      MOVE.B  #3,D0
00001A34  4E4F                     927      TRAP    #15
00001A36                           928      
00001A36  43F9 000032BD            929      LEA CLOSEBRA,A1
00001A3C  103C 000E                930      MOVE.B  #14,D0
00001A40  4E4F                     931      TRAP    #15
00001A42                           932      
00001A42                           933      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A42  6000 161E                934      BRA     ENDNEWLINE
00001A46                           935  
00001A46                           936  MOVIANI2
00001A46  43F9 000032BB            937      LEA OPENBRA,A1
00001A4C  103C 000E                938      MOVE.B  #14,D0
00001A50  4E4F                     939      TRAP    #15
00001A52                           940  
00001A52  43F9 000032C7            941      LEA DISPA,A1
00001A58  103C 000E                942      MOVE.B  #14,D0
00001A5C  4E4F                     943      TRAP    #15
00001A5E                           944      
00001A5E  1239 00003A0B            945      MOVE.B  bit1,D1
00001A64  103C 0003                946      MOVE.B  #3,D0
00001A68  4E4F                     947      TRAP    #15
00001A6A                           948      
00001A6A  43F9 000032BD            949      LEA CLOSEBRA,A1
00001A70  103C 000E                950      MOVE.B  #14,D0
00001A74  4E4F                     951      TRAP    #15
00001A76                           952      
00001A76  43F9 000032BF            953      LEA POS,A1
00001A7C  103C 000E                954      MOVE.B  #14,D0
00001A80  4E4F                     955      TRAP    #15
00001A82                           956      
00001A82                           957      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A82  6000 15DE                958      BRA     ENDNEWLINE
00001A86                           959  
00001A86                           960  MOVIAND2
00001A86  43F9 000032C1            961      LEA NEG,A1
00001A8C  103C 000E                962      MOVE.B  #14,D0
00001A90  4E4F                     963      TRAP    #15
00001A92                           964      
00001A92  43F9 000032BB            965      LEA OPENBRA,A1
00001A98  103C 000E                966      MOVE.B  #14,D0
00001A9C  4E4F                     967      TRAP    #15
00001A9E                           968  
00001A9E  43F9 000032C7            969      LEA DISPA,A1
00001AA4  103C 000E                970      MOVE.B  #14,D0
00001AA8  4E4F                     971      TRAP    #15
00001AAA                           972      
00001AAA  1239 00003A0B            973      MOVE.B  bit1,D1
00001AB0  103C 0003                974      MOVE.B  #3,D0
00001AB4  4E4F                     975      TRAP    #15
00001AB6                           976      
00001AB6  43F9 000032BD            977      LEA CLOSEBRA,A1
00001ABC  103C 000E                978      MOVE.B  #14,D0
00001AC0  4E4F                     979      TRAP    #15
00001AC2                           980  
00001AC2                           981      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001AC2  6000 159E                982      BRA     ENDNEWLINE
00001AC6                           983  
00001AC6                           984  MOVBDN2
00001AC6  43F9 000032CD            985      LEA DISPD,A1
00001ACC  103C 000E                986      MOVE.B  #14,D0
00001AD0  4E4F                     987      TRAP    #15
00001AD2                           988          
00001AD2  1239 00003A0B            989      MOVE.B  bit1,D1
00001AD8  103C 0003                990      MOVE.B  #3,D0
00001ADC  4E4F                     991      TRAP    #15   
00001ADE                           992      
00001ADE  B83C 0000                993      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001AE2  6700 157E                994      BEQ     ENDNEWLINE
00001AE6                           995      
00001AE6                           996      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001AE6  6000 157A                997      BRA     ENDNEWLINE
00001AEA                           998      
00001AEA                           999      
00001AEA                          1000  ENDNLINC
00001AEA                          1001      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001AEA  6000 1576               1002      BRA     ENDNEWLINE    
00001AEE                          1003      
00001AEE                          1004  MULSW
00001AEE  1407                    1005          MOVE.B  D7,D2
00001AF0  EB0A                    1006          LSL.B   #5,D2
00001AF2  EA0A                    1007          LSR.B   #5,D2
00001AF4  13C2 00003A0E           1008          MOVE.B  D2,bit4
00001AFA                          1009          
00001AFA  1407                    1010          MOVE.B  D7,D2
00001AFC  E50A                    1011          LSL.B   #2,D2
00001AFE  EA0A                    1012          LSR.B   #5,D2
00001B00  13C2 00003A0D           1013          MOVE.B  D2,bit3
00001B06                          1014          
00001B06  3C07                    1015          MOVE.W  D7,D6
00001B08  EF4E                    1016          LSL.W   #7,D6
00001B0A  E04E                    1017          LSR.W   #8,D6 
00001B0C  EA4E                    1018          LSR.W   #5,D6 
00001B0E  13C6 00003A0C           1019          MOVE.B  D6,bit2
00001B14                          1020          
00001B14  E94F                    1021          LSL.W   #4,D7
00001B16  E04F                    1022          LSR.W   #8,D7 
00001B18  EA4F                    1023          LSR.W   #5,D7 
00001B1A  13C7 00003A0B           1024          MOVE.B  D7,bit1
00001B20                          1025          
00001B20  43F9 00003309           1026          LEA MMULSW,A1
00001B26  323C 000E               1027          MOVE    #14,D1
00001B2A  4E4F                    1028          TRAP    #15
00001B2C                          1029          
00001B2C  1A3C 0005               1030          MOVE.B  #$5,D5 
00001B30                          1031          
00001B30  0C39 0000 00003A0D      1032          CMP.B   #$0,bit3           
00001B38  6700 FDEC               1033          BEQ     MOVBDN1
00001B3C  0C39 0001 00003A0D      1034          CMP.B   #$1,bit3
00001B44  6700 FB90               1035          BEQ     MOVEAN1
00001B48  0C39 0002 00003A0D      1036          CMP.B   #$2,bit3
00001B50  6700 FBF8               1037          BEQ     MOVEIAN1
00001B54  0C39 0003 00003A0D      1038          CMP.B   #$3,bit3
00001B5C  6700 FC80               1039          BEQ     MOVEIANI1
00001B60  0C39 0004 00003A0D      1040          CMP.B   #$4,bit3
00001B68  6700 FD1C               1041          BEQ     MOVEIAND1
00001B6C  0C39 0007 00003A0D      1042          CMP.B   #$7,bit3
00001B74  6700 FA50               1043          BEQ     ADDIMD
00001B78                          1044  
00001B78                          1045           
00001B78                          1046  DIVSW               
00001B78                          1047          *MOVE.B  D6,D2
00001B78  141E                    1048          MOVE.B  (A6)+,D2
00001B7A  EB0A                    1049          LSL.B   #5,D2
00001B7C  EA0A                    1050          LSR.B   #5,D2
00001B7E  13C2 00003A0E           1051          MOVE.B  D2,bit4
00001B84                          1052          
00001B84  1406                    1053          MOVE.B  D6,D2
00001B86  E50A                    1054          LSL.B   #2,D2
00001B88  EA0A                    1055          LSR.B   #5,D2
00001B8A  13C2 00003A0D           1056          MOVE.B  D2,bit3
00001B90                          1057          
00001B90  3E06                    1058          MOVE.W  D6,D7
00001B92  EF4F                    1059          LSL.W   #7,D7
00001B94  E04F                    1060          LSR.W   #8,D7 
00001B96  EA4F                    1061          LSR.W   #5,D7 
00001B98  13C7 00003A0C           1062          MOVE.B  D7,bit2
00001B9E                          1063          
00001B9E  E94E                    1064          LSL.W   #4,D6
00001BA0  E04E                    1065          LSR.W   #8,D6 
00001BA2  EA4E                    1066          LSR.W   #5,D6 
00001BA4  13C6 00003A0B           1067          MOVE.B  D6,bit1
00001BAA                          1068          
00001BAA  43F9 00003302           1069          LEA MMDIVSW,A1
00001BB0  323C 000E               1070          MOVE    #14,D1
00001BB4  4E4F                    1071          TRAP    #15
00001BB6                          1072          
00001BB6  1A3C 0005               1073          MOVE.B  #$5,D5 
00001BBA  183C 0004               1074          MOVE.B  #$4,D4
00001BBE                          1075          
00001BBE  0C39 0000 00003A0D      1076          CMP.B   #$0,bit3           
00001BC6  6700 FD5E               1077          BEQ     MOVBDN1
00001BCA  0C39 0001 00003A0D      1078          CMP.B   #$1,bit3
00001BD2  6700 FB02               1079          BEQ     MOVEAN1
00001BD6  0C39 0002 00003A0D      1080          CMP.B   #$2,bit3
00001BDE  6700 FB6A               1081          BEQ     MOVEIAN1
00001BE2  0C39 0003 00003A0D      1082          CMP.B   #$3,bit3
00001BEA  6700 FBF2               1083          BEQ     MOVEIANI1
00001BEE  0C39 0004 00003A0D      1084          CMP.B   #$4,bit3
00001BF6  6700 FC8E               1085          BEQ     MOVEIAND1
00001BFA  0C39 0007 00003A0D      1086          CMP.B   #$7,bit3
00001C02  6700 F9C2               1087          BEQ     ADDIMD
00001C06                          1088  
00001C06                          1089  NEGW
00001C06  1406                    1090          MOVE.B  D6,D2
00001C08  EB0A                    1091          LSL.B   #5,D2
00001C0A  EA0A                    1092          LSR.B   #5,D2
00001C0C  13C2 00003A0E           1093          MOVE.B  D2,bit4
00001C12                          1094          
00001C12  1406                    1095          MOVE.B  D6,D2
00001C14  E50A                    1096          LSL.B   #2,D2
00001C16  EA0A                    1097          LSR.B   #5,D2
00001C18  13C2 00003A0D           1098          MOVE.B  D2,bit3
00001C1E                          1099          
00001C1E  3E06                    1100          MOVE.W  D6,D7
00001C20  E14F                    1101          LSL.W   #8,D7
00001C22  E04F                    1102          LSR.W   #8,D7 
00001C24  EC4F                    1103          LSR.W   #6,D7 
00001C26  13C7 00003A0C           1104          MOVE.B  D7,bit2
00001C2C                          1105          
00001C2C  43F9 000032FD           1106          LEA MMNEGW,A1
00001C32  323C 000E               1107          MOVE    #14,D1
00001C36  4E4F                    1108          TRAP    #15
00001C38                          1109          
00001C38  183C 0003               1110          MOVE.B  #$3,D4
00001C3C                          1111          
00001C3C  0C39 0000 00003A0C      1112          CMP.B   #$0,bit2
00001C44  6700 001A               1113          BEQ     PRINTBYTE
00001C48  0C39 0001 00003A0C      1114          CMP.B   #$1,bit2
00001C50  6700 0062               1115          BEQ     PRINTWORD
00001C54  0C39 0002 00003A0C      1116          CMP.B   #$2,bit2
00001C5C  6700 00AA               1117          BEQ     PRINTLONG
00001C60                          1118          
00001C60                          1119  PRINTBYTE
00001C60  43F9 000032D7           1120      LEA MBYTE,A1
00001C66  323C 000E               1121      MOVE    #14,D1
00001C6A  4E4F                    1122      TRAP    #15
00001C6C                          1123  
00001C6C  0C39 0000 00003A0D      1124      CMP.B   #$0,bit3           
00001C74  6700 FCB0               1125          BEQ     MOVBDN1
00001C78  0C39 0001 00003A0D      1126          CMP.B   #$1,bit3
00001C80  6700 FA54               1127          BEQ     MOVEAN1
00001C84  0C39 0002 00003A0D      1128          CMP.B   #$2,bit3
00001C8C  6700 FABC               1129          BEQ     MOVEIAN1
00001C90  0C39 0003 00003A0D      1130          CMP.B   #$3,bit3
00001C98  6700 FB44               1131          BEQ     MOVEIANI1
00001C9C  0C39 0004 00003A0D      1132          CMP.B   #$4,bit3
00001CA4  6700 FBE0               1133          BEQ     MOVEIAND1
00001CA8  0C39 0007 00003A0D      1134          CMP.B   #$7,bit3
00001CB0  6700 F9CE               1135          BEQ     ADDIMDDES
00001CB4                          1136      
00001CB4                          1137  PRINTWORD
00001CB4  43F9 000032DA           1138      LEA MWORD,A1
00001CBA  323C 000E               1139      MOVE    #14,D1
00001CBE  4E4F                    1140      TRAP    #15
00001CC0                          1141  
00001CC0  0C39 0000 00003A0D      1142      CMP.B   #$0,bit3           
00001CC8  6700 FC5C               1143          BEQ     MOVBDN1
00001CCC  0C39 0001 00003A0D      1144          CMP.B   #$1,bit3
00001CD4  6700 FA00               1145          BEQ     MOVEAN1
00001CD8  0C39 0002 00003A0D      1146          CMP.B   #$2,bit3
00001CE0  6700 FA68               1147          BEQ     MOVEIAN1
00001CE4  0C39 0003 00003A0D      1148          CMP.B   #$3,bit3
00001CEC  6700 FAF0               1149          BEQ     MOVEIANI1
00001CF0  0C39 0004 00003A0D      1150          CMP.B   #$4,bit3
00001CF8  6700 FB8C               1151          BEQ     MOVEIAND1
00001CFC  0C39 0007 00003A0D      1152          CMP.B   #$7,bit3
00001D04  6700 F97A               1153          BEQ     ADDIMDDES
00001D08                          1154      
00001D08                          1155  PRINTLONG
00001D08  43F9 000032DD           1156      LEA MLONG,A1
00001D0E  323C 000E               1157      MOVE    #14,D1
00001D12  4E4F                    1158      TRAP    #15
00001D14                          1159   
00001D14  0C39 0000 00003A0D      1160      CMP.B   #$0,bit3           
00001D1C  6700 FC08               1161          BEQ     MOVBDN1
00001D20  0C39 0001 00003A0D      1162          CMP.B   #$1,bit3
00001D28  6700 F9AC               1163          BEQ     MOVEAN1
00001D2C  0C39 0002 00003A0D      1164          CMP.B   #$2,bit3
00001D34  6700 FA14               1165          BEQ     MOVEIAN1
00001D38  0C39 0003 00003A0D      1166          CMP.B   #$3,bit3
00001D40  6700 FA9C               1167          BEQ     MOVEIANI1
00001D44  0C39 0004 00003A0D      1168          CMP.B   #$4,bit3
00001D4C  6700 FB38               1169          BEQ     MOVEIAND1
00001D50  0C39 0007 00003A0D      1170          CMP.B   #$7,bit3
00001D58  6700 F926               1171          BEQ     ADDIMDDES
00001D5C                          1172          
00001D5C                          1173  LSLR
00001D5C                          1174          *MOVE.B  D6,D2
00001D5C  141E                    1175          MOVE.B  (A6)+,D2
00001D5E  EB0A                    1176          LSL.B   #5,D2
00001D60  EA0A                    1177          LSR.B   #5,D2
00001D62  13C2 00003A0E           1178          MOVE.B  D2,bit4
00001D68                          1179          
00001D68  1406                    1180          MOVE.B  D6,D2
00001D6A  E50A                    1181          LSL.B   #2,D2
00001D6C  EE0A                    1182          LSR.B   #7,D2
00001D6E  13C2 00003A0D           1183          MOVE.B  D2,bit3
00001D74                          1184          
00001D74  3E06                    1185          MOVE.W  D6,D7
00001D76  E14F                    1186          LSL.W   #8,D7
00001D78  E04F                    1187          LSR.W   #8,D7 
00001D7A  EC4F                    1188          LSR.W   #6,D7 
00001D7C  13C7 00003A0C           1189          MOVE.B  D7,bit2
00001D82                          1190          
00001D82  3E06                    1191          MOVE.W  D6,D7
00001D84  EF4F                    1192          LSL.W   #7,D7
00001D86  E04F                    1193          LSR.W   #8,D7 
00001D88  EE4F                    1194          LSR.W   #7,D7
00001D8A  13C7 00003A0B           1195          MOVE.B  D7,bit1   
00001D90                          1196      
00001D90  1806                    1197          MOVE.B  D6,D4
00001D92                          1198          
00001D92  3E06                    1199          MOVE.W  D6,D7
00001D94  E94F                    1200          LSL.W   #4,D7
00001D96  E04F                    1201          LSR.W   #8,D7 
00001D98  EA4F                    1202          LSR.W   #5,D7
00001D9A  13C7 00003A0A           1203          MOVE.B  D7,bit0 
00001DA0                          1204          
00001DA0  1E06                    1205          MOVE.B  D6,D7
00001DA2  E90F                    1206          LSL.B   #4,D7
00001DA4  EE0F                    1207          LSR.B   #7,D7
00001DA6                          1208          
00001DA6  0C39 0003 00003A0C      1209          CMP.B   #3,bit2
00001DAE  6700 00B4               1210          BEQ     LSLRMEMH
00001DB2                          1211          
00001DB2  BE3C 0000               1212          CMP.B   #0,D7
00001DB6  6700 0028               1213          BEQ     ASLRMEMH
00001DBA                          1214          
00001DBA  1606                    1215          MOVE.B  D6,D3
00001DBC  E70B                    1216          LSL.B   #3,D3
00001DBE  EC0B                    1217          LSR.B   #6,D3
00001DC0  B63C 0003               1218          CMP.B   #3,D3
00001DC4  6700 00CA               1219          BEQ     RORL
00001DC8                          1220          
00001DC8  0C39 0001 00003A0B      1221          CMP.B   #$1,bit1
00001DD0  6700 013E               1222          BEQ     PRINTLSL
00001DD4  0C39 0000 00003A0B      1223          CMP.B   #$0,bit1
00001DDC  6700 0280               1224          BEQ     PRINTLSR
00001DE0                          1225          
00001DE0                          1226  ASLRMEMH
00001DE0  1A3C 0004               1227          MOVE.B  #4,D5
00001DE4  0C39 0001 00003A0B      1228          CMP.B   #$1,bit1
00001DEC  6700 000E               1229          BEQ     PRINTASL
00001DF0  0C39 0000 00003A0B      1230          CMP.B   #$0,bit1
00001DF8  6700 0036               1231          BEQ     PRINTASR
00001DFC                          1232          
00001DFC                          1233  PRINTASL
00001DFC  43F9 0000333C           1234          LEA MASL,A1
00001E02  303C 000E               1235          MOVE    #14,D0
00001E06  4E4F                    1236          TRAP    #15
00001E08                          1237          
00001E08  0C39 0000 00003A0C      1238          CMP.B   #$0,bit2
00001E10  6700 017C               1239          BEQ     PRINTB
00001E14  0C39 0001 00003A0C      1240          CMP.B   #$1,bit2
00001E1C  6700 01A4               1241          BEQ     PRINTW
00001E20  0C39 0002 00003A0C      1242          CMP.B   #$2,bit2
00001E28  6700 01CC               1243          BEQ     PRINTL
00001E2C  6000 0116               1244          BRA     LSLRMEM
00001E30                          1245          
00001E30                          1246  PRINTASR        
00001E30  43F9 00003340           1247          LEA MASR,A1
00001E36  303C 000E               1248          MOVE    #14,D0
00001E3A  4E4F                    1249          TRAP    #15
00001E3C                          1250          
00001E3C  0C39 0000 00003A0C      1251          CMP.B   #$0,bit2
00001E44  6700 0148               1252          BEQ     PRINTB
00001E48  0C39 0001 00003A0C      1253          CMP.B   #$1,bit2
00001E50  6700 0170               1254          BEQ     PRINTW
00001E54  0C39 0002 00003A0C      1255          CMP.B   #$2,bit2
00001E5C  6700 0198               1256          BEQ     PRINTL
00001E60  6000 00E2               1257          BRA     LSLRMEM
00001E64                          1258          
00001E64                          1259  LSLRMEMH
00001E64  3E06                    1260          MOVE.W  D6,D7
00001E66  ED4F                    1261          LSL.W   #6,D7
00001E68  E04F                    1262          LSR.W   #8,D7
00001E6A  EE4F                    1263          LSR.W   #7,D7
00001E6C  BE3C 0000               1264          CMP.B   #0,D7
00001E70  6700 FF6E               1265          BEQ     ASLRMEMH
00001E74                          1266          
00001E74  1A3C 0004               1267          MOVE.B  #4,D5
00001E78  0C39 0001 00003A0B      1268          CMP.B   #$1,bit1
00001E80  6700 008E               1269          BEQ     PRINTLSL
00001E84  0C39 0000 00003A0B      1270          CMP.B   #$0,bit1
00001E8C  6700 01D0               1271          BEQ     PRINTLSR
00001E90                          1272  RORL
00001E90  0C39 0001 00003A0B      1273          CMP.B   #$1,bit1
00001E98  6700 000E               1274          BEQ     PRINTROL
00001E9C  0C39 0000 00003A0B      1275          CMP.B   #$0,bit1
00001EA4  6700 0036               1276          BEQ     PRINTROR
00001EA8                          1277  PRINTROL
00001EA8  43F9 000032ED           1278          LEA MROL,A1
00001EAE  303C 000E               1279          MOVE    #14,D0
00001EB2  4E4F                    1280          TRAP    #15
00001EB4                          1281          
00001EB4  0C39 0000 00003A0C      1282          CMP.B   #$0,bit2
00001EBC  6700 00D0               1283          BEQ     PRINTB
00001EC0  0C39 0001 00003A0C      1284          CMP.B   #$1,bit2
00001EC8  6700 00F8               1285          BEQ     PRINTW
00001ECC  0C39 0002 00003A0C      1286          CMP.B   #$2,bit2
00001ED4  6700 0120               1287          BEQ     PRINTL
00001ED8  6000 006A               1288          BRA     LSLRMEM
00001EDC                          1289  PRINTROR
00001EDC  43F9 000032F1           1290          LEA MROR,A1
00001EE2  323C 000E               1291          MOVE    #14,D1
00001EE6  4E4F                    1292          TRAP    #15
00001EE8                          1293          
00001EE8  0C39 0000 00003A0C      1294          CMP.B   #$0,bit2
00001EF0  6700 009C               1295          BEQ     PRINTB
00001EF4  0C39 0001 00003A0C      1296          CMP.B   #$1,bit2
00001EFC  6700 00C4               1297          BEQ     PRINTW
00001F00  0C39 0002 00003A0C      1298          CMP.B   #$2,bit2
00001F08  6700 00EC               1299          BEQ     PRINTL
00001F0C  6000 0036               1300          BRA     LSLRMEM
00001F10                          1301  PRINTLSL
00001F10  43F9 000032F5           1302          LEA MLSL,A1
00001F16  303C 000E               1303          MOVE    #14,D0
00001F1A  4E4F                    1304          TRAP    #15
00001F1C                          1305          
00001F1C  0C39 0000 00003A0C      1306          CMP.B   #$0,bit2
00001F24  6700 0068               1307          BEQ     PRINTB
00001F28  0C39 0001 00003A0C      1308          CMP.B   #$1,bit2
00001F30  6700 0090               1309          BEQ     PRINTW
00001F34  0C39 0002 00003A0C      1310          CMP.B   #$2,bit2
00001F3C  6700 00B8               1311          BEQ     PRINTL
00001F40  6000 0002               1312          BRA     LSLRMEM
00001F44                          1313          
00001F44                          1314  LSLRMEM
00001F44                          1315          
00001F44  E50C                    1316          LSL.B   #2,D4
00001F46  EA0C                    1317          LSR.B   #5,D4
00001F48  13C4 00003A0D           1318          MOVE.B  D4,bit3
00001F4E                          1319          
00001F4E  183C 0003               1320          MOVE.B  #$3,D4
00001F52                          1321          
00001F52  0C39 0002 00003A0D      1322          CMP.B   #$2,bit3
00001F5A  6700 F7EE               1323          BEQ     MOVEIAN1
00001F5E  0C39 0003 00003A0D      1324          CMP.B   #$3,bit3
00001F66  6700 F876               1325          BEQ     MOVEIANI1
00001F6A  0C39 0004 00003A0D      1326          CMP.B   #$4,bit3
00001F72  6700 F912               1327          BEQ     MOVEIAND1
00001F76                          1328          
00001F76  43F9 000032B5           1329          LEA TAB,A1
00001F7C  123C 0003               1330          MOVE.B  #3,D1
00001F80  4E4F                    1331          TRAP    #15 
00001F82                          1332          
00001F82  0C39 0007 00003A0D      1333          CMP.B   #$7,bit3
00001F8A  6700 F6F4               1334          BEQ     ADDIMDDES
00001F8E                          1335  PRINTB
00001F8E  43F9 000032D3           1336          LEA MDOT,A1
00001F94  303C 000E               1337          MOVE    #14,D0
00001F98  4E4F                    1338          TRAP    #15
00001F9A                          1339  
00001F9A  43F9 000032D7           1340          LEA MBYTE,A1
00001FA0  303C 000E               1341          MOVE    #14,D0
00001FA4  4E4F                    1342          TRAP    #15
00001FA6                          1343          
00001FA6  3A3C 0006               1344          MOVE #$6,D5
00001FAA                          1345          
00001FAA  0C39 0000 00003A0D      1346          CMP.B   #0,bit3
00001FB2  6700 0076               1347          BEQ     PRINTLSLRCOUNT
00001FB6  0C39 0001 00003A0D      1348          CMP.B   #1,bit3
00001FBE  6700 F966               1349          BEQ     MOVBDN1
00001FC2                          1350  
00001FC2                          1351  PRINTW 
00001FC2  43F9 000032D3           1352          LEA MDOT,A1
00001FC8  303C 000E               1353          MOVE    #14,D0
00001FCC  4E4F                    1354          TRAP    #15
00001FCE                          1355  
00001FCE  43F9 000032DA           1356          LEA MWORD,A1
00001FD4  303C 000E               1357          MOVE    #14,D0
00001FD8  4E4F                    1358          TRAP    #15
00001FDA                          1359          
00001FDA  3A3C 0006               1360          MOVE #$6,D5
00001FDE                          1361          
00001FDE  0C39 0000 00003A0D      1362          CMP.B   #0,bit3
00001FE6  6700 0042               1363          BEQ     PRINTLSLRCOUNT
00001FEA  0C39 0001 00003A0D      1364          CMP.B   #1,bit3
00001FF2  6700 F932               1365          BEQ     MOVBDN1
00001FF6                          1366  
00001FF6                          1367  PRINTL
00001FF6  43F9 000032D3           1368          LEA MDOT,A1
00001FFC  303C 000E               1369          MOVE    #14,D0
00002000  4E4F                    1370          TRAP    #15
00002002                          1371  
00002002  43F9 000032DD           1372          LEA MLONG,A1
00002008  303C 000E               1373          MOVE    #14,D0
0000200C  4E4F                    1374          TRAP    #15
0000200E                          1375  
0000200E  3A3C 0006               1376          MOVE #$6,D5
00002012                          1377          
00002012  0C39 0000 00003A0D      1378          CMP.B   #0,bit3
0000201A  6700 000E               1379          BEQ     PRINTLSLRCOUNT
0000201E  0C39 0001 00003A0D      1380          CMP.B   #1,bit3
00002026  6700 F8FE               1381          BEQ     MOVBDN1    
0000202A                          1382  
0000202A                          1383  PRINTLSLRCOUNT
0000202A  43F9 000032B5           1384          LEA TAB,A1
00002030  303C 000E               1385          MOVE    #14,D0
00002034  4E4F                    1386          TRAP    #15
00002036                          1387          
00002036  43F9 000032C3           1388          LEA HASH,A1
0000203C  303C 000E               1389          MOVE    #14,D0
00002040  4E4F                    1390          TRAP    #15
00002042                          1391          
00002042  1239 00003A0A           1392          MOVE.B  bit0,D1
00002048  303C 0003               1393          MOVE    #3,D0
0000204C  4E4F                    1394          TRAP    #15
0000204E                          1395          
0000204E  43F9 000032B9           1396          LEA COMMA,A1
00002054  303C 000E               1397          MOVE    #14,D0
00002058  4E4F                    1398          TRAP    #15
0000205A                          1399          
0000205A  6000 F97E               1400          BRA LSLRDESD
0000205E                          1401    
0000205E                          1402  PRINTLSR
0000205E  43F9 000032F9           1403          LEA MLSR,A1
00002064  323C 000E               1404          MOVE    #14,D1
00002068  4E4F                    1405          TRAP    #15
0000206A                          1406          
0000206A  0C39 0000 00003A0C      1407          CMP.B   #$0,bit2
00002072  6700 FF1A               1408          BEQ     PRINTB
00002076  0C39 0001 00003A0C      1409          CMP.B   #$1,bit2
0000207E  6700 FF42               1410          BEQ     PRINTW
00002082  0C39 0002 00003A0C      1411          CMP.B   #$2,bit2
0000208A  6700 FF6A               1412          BEQ     PRINTL
0000208E  6000 FEB4               1413          BRA     LSLRMEM
00002092                          1414  
00002092                          1415  ******************************************************************************************************
00002092                          1416  *   Branch, branch to subroutine, and branch conditionally
00002092                          1417  *   BRA, BSR, Bcc
00002092                          1418  
00002092                          1419  BCC
00002092  13C5 00003A0B           1420          MOVE.B  D5,bit1             Moves condition code to bit1
00002098  1A1E                    1421          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
0000209A  13C5 00003A0C           1422          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
000020A0  280E                    1423          MOVE.L  A6,D4               Moves current address to D4 register
000020A2                          1424  
000020A2  BA3C 0000               1425          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
000020A6  6700 0010               1426          BEQ     BCCWORD
000020AA  BA3C 00FF               1427          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
000020AE  6700 0010               1428          BEQ     BCCLONG             Else, displacement is 8-bits
000020B2                          1429  
000020B2                          1430          * Calculates 8-bit displacement
000020B2                          1431          * 8-bit displacement is already in D5
000020B2                          1432          * Adds displacement to current address
000020B2  D805                    1433          ADD.B   D5,D4               Adds the displacement to current address
000020B4  6000 0012               1434          BRA     BCCNEXT
000020B8                          1435  
000020B8                          1436  * Calculates 16-bit displacement
000020B8                          1437  BCCWORD
000020B8  3A1E                    1438          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
000020BA  D845                    1439          ADD.W   D5,D4               Adds the displacement to current address
000020BC  6000 000A               1440          BRA     BCCNEXT
000020C0                          1441  
000020C0                          1442  * Calculates 32-bit displacement
000020C0                          1443  BCCLONG
000020C0  2A1E                    1444          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
000020C2  D885                    1445          ADD.L   D5,D4               Adds the displacement to current address
000020C4  6000 0002               1446          BRA     BCCNEXT
000020C8                          1447  
000020C8                          1448  * Does the actual calculation
000020C8                          1449  * Adds the displacement to the current address
000020C8                          1450  BCCNEXT
000020C8  6100 000E               1451          BSR     BCCDISP             Displays branch op-code
000020CC  45F9 00003062           1452          LEA     ENDNEWLINE,A2
000020D2  2E04                    1453          MOVE.L  D4,D7
000020D4  6000 F09E               1454          BRA     DISPADDRSTART
000020D8                          1455  
000020D8                          1456  BCCDISP * Figures out which conditional code it is
000020D8  B43C 0000               1457          CMP.B   #$0,D2
000020DC  6700 0026               1458          BEQ     BCCBRA
000020E0  B43C 0007               1459          CMP.B   #$7,D2
000020E4  6700 0028               1460          BEQ     BCCBEQ
000020E8  B43C 0006               1461          CMP.B   #$6,D2
000020EC  6700 002A               1462          BEQ     BCCBNE
000020F0  B43C 000D               1463          CMP.B   #$D,D2
000020F4  6700 002C               1464          BEQ     BCCBLT
000020F8  B43C 0002               1465          CMP.B   #$2,D2
000020FC  6700 002E               1466          BEQ     BCCBHI
00002100                          1467  
00002100  6000 0EEE               1468          BRA     INVOP
00002104                          1469  
00002104                          1470  * Prints out the appropiate code
00002104                          1471  BCCBRA
00002104  43F9 000033B0           1472          LEA     MBRA,A1
0000210A  6000 002A               1473          BRA     BCCPRINT
0000210E                          1474  BCCBEQ
0000210E  43F9 000033A0           1475          LEA     MBEQ,A1
00002114  6000 0020               1476          BRA     BCCPRINT
00002118                          1477  BCCBNE
00002118  43F9 000033A4           1478          LEA     MBNE,A1
0000211E  6000 0016               1479          BRA     BCCPRINT
00002122                          1480  BCCBLT
00002122  43F9 000033A8           1481          LEA     MBLT,A1
00002128  6000 000C               1482          BRA     BCCPRINT
0000212C                          1483  BCCBHI
0000212C  43F9 000033AC           1484          LEA     MBHI,A1
00002132  6000 0002               1485          BRA     BCCPRINT
00002136                          1486  BCCPRINT
00002136  103C 000E               1487          MOVE.B  #14,D0
0000213A  4E4F                    1488          TRAP    #15
0000213C  43F9 000032B5           1489          LEA     TAB,A1
00002142  4E4F                    1490          TRAP    #15
00002144  4E75                    1491          RTS
00002146                          1492  
00002146                          1493  ******************************************************************************************************
00002146                          1494  *   Immediate data arithmetic operations
00002146                          1495  *   SUBI
00002146                          1496  
00002146  13C5 00003A0B           1497  IMD     MOVE.B  D5,bit1
0000214C  1202                    1498          MOVE.B  D2,D1
0000214E  141E                    1499          MOVE.B  (A6)+,D2
00002150                          1500          
00002150  3805                    1501          MOVE    D5,D4
00002152  C83C 0001               1502          AND.B   #$0001,D4
00002156  B83C 0001               1503          CMP.B   #$1,D4
0000215A  6700 F192               1504          BEQ     BTST
0000215E  B23C 0008               1505          CMP.B   #8,D1
00002162  6700 F18A               1506          BEQ     BTST
00002166                          1507  
00002166  DE02                    1508          ADD.B   D2,D7
00002168                          1509  
00002168  1602                    1510          MOVE.B  D2,D3               Copies data at D2 to D3
0000216A                          1511          *   this gets digit in 10's place
0000216A  E80B                    1512          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000216C                          1513          *   this gets digit in 1's place
0000216C  E90A                    1514          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000216E  E80A                    1515          LSR.B   #4,D2               Shifts back right into 1's place
00002170                          1516  
00002170                          1517          *   D3 holds digit in 10's place
00002170                          1518          *   D2 holds digit in 1's place
00002170                          1519  
00002170  E20B                    1520          LSR.B   #1,D3
00002172  6400 0004               1521          BCC     IMD2
00002176  5404                    1522          ADD.B   #$2,D4
00002178  E20B                    1523  IMD2    LSR.B   #1,D3
0000217A  6400 0004               1524          BCC     IMD3
0000217E  5804                    1525          ADD.B   #$4,D4
00002180  B43C 0007               1526  IMD3    CMP.B   #$7,D2
00002184  6D00 0006               1527          BLT     IMD4
00002188  5204                    1528          ADD.B   #$1,D4
0000218A  5102                    1529          SUB.B   #$8,D2
0000218C                          1530  
0000218C                          1531          *   Stores them into addr
0000218C  13C3 00003A0C           1532  IMD4    MOVE.B  D3,bit2
00002192  13C4 00003A0D           1533          MOVE.B  D4,bit3
00002198  13C2 00003A0E           1534          MOVE.B  D2,bit4
0000219E                          1535  
0000219E                          1536  **************************
0000219E                          1537  * This finds the size of the operation
0000219E                          1538  
0000219E  0C39 0000 00003A0C      1539          CMP.B   #$0,bit2
000021A6  6700 007E               1540          BEQ     IMDBYTE
000021AA  0C39 0001 00003A0C      1541          CMP.B   #$1,bit2
000021B2  6700 0082               1542          BEQ     IMDWORD
000021B6  0C39 0002 00003A0C      1543          CMP.B   #$2,bit2
000021BE  6700 0084               1544          BEQ     IMDLONG
000021C2  6000 0E2C               1545          BRA     INVOP
000021C6                          1546  
000021C6                          1547  *************************************************************
000021C6                          1548  * Display IMD op-code
000021C6                          1549  IMDPRINT
000021C6  0C39 0000 00003A0B      1550          CMP.B   #$0,bit1
000021CE  6700 0026               1551          BEQ     IMDPRINTORI
000021D2  0C39 0004 00003A0B      1552          CMP.B   #$4,bit1
000021DA  6700 0024               1553          BEQ     IMDPRINTSUBI
000021DE  0C39 000A 00003A0B      1554          CMP.B   #$A,bit1
000021E6  6700 0022               1555          BEQ     IMDPRINTEORI
000021EA  0C39 000C 00003A0B      1556          CMP.B   #$C,bit1
000021F2  6700 0020               1557          BEQ     IMDPRINTCMPI
000021F6                          1558  
000021F6                          1559  IMDPRINTORI
000021F6  43F9 00003364           1560          LEA     MORI,A1
000021FC  6000 0020               1561          BRA     IMDPRINTEND
00002200                          1562  
00002200                          1563  IMDPRINTSUBI
00002200  43F9 0000335E           1564          LEA     MSUBI,A1
00002206  6000 0016               1565          BRA     IMDPRINTEND
0000220A                          1566  
0000220A                          1567  IMDPRINTEORI
0000220A  43F9 0000338E           1568          LEA     MEORI,A1
00002210  6000 000C               1569          BRA     IMDPRINTEND
00002214                          1570  
00002214                          1571  IMDPRINTCMPI
00002214  43F9 0000337D           1572          LEA     MCMPI,A1
0000221A  6000 0002               1573          BRA     IMDPRINTEND
0000221E                          1574  
0000221E                          1575  IMDPRINTEND
0000221E  103C 000E               1576          MOVE.B  #14,D0
00002222  4E4F                    1577          TRAP    #15
00002224  4E75                    1578          RTS
00002226                          1579  
00002226                          1580  *************************************************************
00002226                          1581  * Immediate data operation size BYTE
00002226                          1582  IMDBYTE
00002226  619E                    1583          BSR     IMDPRINT
00002228  43F9 000032D7           1584          LEA     MBYTE,A1
0000222E                          1585  
0000222E                          1586          * Moves size to D4, needed to use DISPEA
0000222E  183C 0001               1587          MOVE.B  #$1,D4
00002232  6000 001A               1588          BRA     IMDEA
00002236                          1589  
00002236                          1590  *************************************************************
00002236                          1591  * Immediate data operation size WORD
00002236                          1592  IMDWORD
00002236  618E                    1593          BSR     IMDPRINT
00002238  43F9 000032DA           1594          LEA     MWORD,A1
0000223E                          1595  
0000223E  1803                    1596          MOVE.B  D3,D4
00002240  6000 000C               1597          BRA     IMDEA
00002244                          1598  
00002244                          1599  
00002244                          1600  *************************************************************
00002244                          1601  * Immediate data operation size LONG
00002244                          1602  IMDLONG
00002244  6180                    1603          BSR     IMDPRINT
00002246  43F9 000032DD           1604          LEA     MLONG,A1
0000224C                          1605          
0000224C                          1606  
0000224C                          1607          * Moves size to D4, needed to use DISPEA
0000224C  1803                    1608          MOVE.B  D3,D4
0000224E                          1609  
0000224E                          1610  IMDEA
0000224E                          1611          * This prints out the size and creates tab
0000224E  103C 000E               1612          MOVE.B  #14,D0
00002252  4E4F                    1613          TRAP    #15
00002254  43F9 000032B5           1614          LEA     TAB,A1
0000225A  103C 000E               1615          MOVE.B  #14,D0
0000225E  4E4F                    1616          TRAP    #15
00002260  43F9 000032C3           1617          LEA     HASH,A1
00002266  103C 000E               1618          MOVE.B  #14,D0
0000226A  4E4F                    1619          TRAP    #15
0000226C                          1620          * Loads return address into A2
0000226C  45F9 00002276           1621          LEA     IMDEA2,A2
00002272  6000 0D02               1622          BRA     DISPEA
00002276                          1623  IMDEA2
00002276  43F9 000032B9           1624          LEA     COMMA,A1
0000227C  103C 000E               1625          MOVE.B  #14,D0
00002280  4E4F                    1626          TRAP    #15
00002282                          1627  
00002282  45F9 0000228C           1628          LEA     IMDEA3,A2
00002288  6000 0B9C               1629          BRA     SUBEA
0000228C                          1630  IMDEA3
0000228C  6000 0DD4               1631          BRA     ENDNEWLINE
00002290                          1632  
00002290                          1633  ******************************************************************************************************
00002290                          1634  * Miscellaneous section
00002290                          1635  *   Not goes here
00002290                          1636  
00002290                          1637  MISC
00002290  13C5 00003A0B           1638          MOVE.B  D5,bit1
00002296  141E                    1639          MOVE.B  (A6)+,D2
00002298                          1640  
00002298  DE02                    1641          ADD.B   D2,D7
0000229A                          1642  
0000229A  1602                    1643          MOVE.B  D2,D3               Copies data at D2 to D3
0000229C                          1644          *   this gets digit in 10's place
0000229C  E80B                    1645          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000229E                          1646          *   this gets digit in 1's place
0000229E  E90A                    1647          LSL.B   #4,D2               Shifts left to get rid of 10's place
000022A0  E80A                    1648          LSR.B   #4,D2               Shifts back right into 1's place
000022A2                          1649  
000022A2                          1650  
000022A2  3806                    1651          MOVE.W  D6,D4
000022A4  E94C                    1652          LSL.W   #$4,D4
000022A6  E04C                    1653          LSR.W   #$8,D4
000022A8  E44C                    1654          LSR.W   #$2,D4
000022AA  13C4 00003A0C           1655          MOVE.B  D4,bit2
000022B0  0C39 003A 00003A0C      1656          CMP.B   #$3A,bit2
000022B8  6700 EFE8               1657          BEQ     JSR
000022BC                          1658  
000022BC                          1659      ***
000022BC                          1660          *BTST.B  #$04,bit0
000022BC                          1661          *BEQ     MISCLEA
000022BC                          1662          *   D5 is bit1
000022BC                          1663          *   D3 is bit2
000022BC                          1664          *   D2 is bit3
000022BC                          1665  
000022BC                          1666  **************************
000022BC                          1667  * This finds the size of the operation
000022BC                          1668          * D5 is bit1
000022BC  BA3C 0004               1669          CMP.B   #$4,D5
000022C0  6700 F944               1670          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
000022C4  BA3C 0006               1671          CMP.B   #$6,D5              Branches to NOT section
000022C8  6700 0182               1672          BEQ     MISCNOT
000022CC  BA3C 000E               1673          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
000022D0  6700 0006               1674          BEQ     MISCBIT2
000022D4  6000 0022               1675          BRA     MISCCHKLEA          Check bits to see if LEA, else branch to MoveM
000022D8                          1676  
000022D8                          1677  MISCBIT2
000022D8                          1678          * D3 is bit2
000022D8  B63C 0007               1679          CMP.B   #$7,D3              Branches to NOP
000022DC  6700 0006               1680          BEQ     MISCBIT3
000022E0  6000 0D0E               1681          BRA     INVOP
000022E4                          1682  
000022E4                          1683  MISCBIT3
000022E4                          1684          * D2 is bit3
000022E4  B43C 0001               1685          CMP.B   #$1,D2              Branches to NOP
000022E8  6700 004E               1686          BEQ     MISCNOP
000022EC  B43C 0005               1687          CMP.B   #$5,D2              Branches to NOP
000022F0  6700 014A               1688          BEQ     MISCRTS
000022F4  6000 0CFA               1689          BRA     INVOP
000022F8                          1690  
000022F8                          1691  * Checks if the opcode is LEA
000022F8                          1692  MISCCHKLEA
000022F8  1805                    1693          MOVE.B  D5,D4
000022FA  C83C 0001               1694          AND.B   #$1,D4
000022FE  B83C 0001               1695          CMP.B   #$1,D4
00002302  6600 0014               1696          BNE     MISCCHECKM
00002306  1803                    1697          MOVE.B  D3,D4
00002308  C83C 000C               1698          AND.B   #$C,D4
0000230C  B83C 000C               1699          CMP.B   #$C,D4
00002310  6600 0006               1700          BNE     MISCCHECKM
00002314  6000 0032               1701          BRA     MISCLEA
00002318                          1702  
00002318                          1703  * Checks if the opcode is MOVEM
00002318                          1704  MISCCHECKM
00002318  1805                    1705          MOVE.B  D5,D4
0000231A  C83C 0008               1706          AND.B   #$8,D4
0000231E  B83C 0008               1707          CMP.B   #$8,D4
00002322  6600 0CCC               1708          BNE     INVOP
00002326  1803                    1709          MOVE.B  D3,D4
00002328  C83C 0008               1710          AND.B   #$8,D4
0000232C  B83C 0008               1711          CMP.B   #$8,D4
00002330  6600 0CBE               1712          BNE     INVOP
00002334  6000 03DA               1713          BRA     MISCMOVEM
00002338                          1714  
00002338                          1715  ******************************************************
00002338                          1716  * NOP
00002338                          1717  * No operation
00002338                          1718  MISCNOP
00002338  43F9 000033B4           1719          LEA     MNOP,A1
0000233E  103C 000E               1720          MOVE.B  #14,D0
00002342  4E4F                    1721          TRAP    #15
00002344                          1722  
00002344  6000 0D1C               1723          BRA     ENDNEWLINE          Goes to next opcode
00002348                          1724  
00002348                          1725  ******************************************************
00002348                          1726  MISCLEA
00002348                          1727      
00002348  43F9 000033BC           1728          LEA     MLEA,A1
0000234E  103C 000E               1729          MOVE.B  #14,D0
00002352  4E4F                    1730          TRAP    #15
00002354  43F9 000032B5           1731          LEA     TAB,A1
0000235A  103C 000E               1732          MOVE.B  #14,D0
0000235E  4E4F                    1733          TRAP    #15        
00002360                          1734          
00002360  E20D                    1735          LSR.B   #1,D5   *isolate addr register
00002362  3C02                    1736          MOVE.W  D2,D6   *copy over bit3 for potential manip of ea reg
00002364                          1737  
00002364  E30B                    1738          LSL.B   #1,D3               Shifts the byte to the left
00002366  C63C 0007               1739          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
0000236A                          1740  
0000236A  0882 0003               1741          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
0000236E  6700 0004               1742          BEQ     MISCLEA2             If it was already zero, then it will skip this next step
00002372  5203                    1743          ADD.B   #$1,D3              It it was one, then it will add one to the mode
00002374                          1744  
00002374                          1745  MISCLEA2
00002374  13C3 00003A0D           1746          MOVE.B  D3,bit3     *MODE?
0000237A  13C2 00003A0E           1747          MOVE.B  D2,bit4     *REG?
00002380                          1748  
00002380                          1749          ***
00002380                          1750  *        AND.L   D2,D7
00002380                          1751  *        CMP.L   #$0,D7
00002380                          1752  *        BEQ     LEAMODE0
00002380                          1753  *        CMP.L   #$1,D7 
00002380                          1754  *        BEQ     LEAMODE1
00002380                          1755  *        
00002380                          1756  *        CMP.B   #1,D7
00002380                          1757  *        BEQ     LEAMODE1
00002380                          1758  *        CMP.B   #0,D7
00002380                          1759  *        BEQ     LEAMODE0
00002380                          1760  *        
00002380                          1761  *        ***
00002380                          1762          
00002380                          1763  LEAMODE1
00002380                          1764          *ea mode should be set to 111
00002380  B63C 0007               1765          CMP.B   #7,D3   *error check
00002384  6700 000E               1766          BEQ     LEA_ABS_EA 
00002388                          1767          
00002388                          1768  LEAMODE0
00002388                          1769          *ea mode should be set to 010
00002388  B63C 0002               1770          CMP.B   #2,D3   *error check
0000238C  6700 005E               1771          BEQ     LEA_INDIR_AN
00002390  6600 0C5E               1772          BNE     INVOP
00002394                          1773  
00002394                          1774  LEA_ABS_EA
00002394                          1775          *MOVE RET LOC INTO A2
00002394  0C39 0000 00003A0E      1776          CMP.B   #$0,bit4
0000239C  6700 000E               1777          BEQ     LEAIMD0
000023A0  0C39 0001 00003A0E      1778          CMP.B   #$1,bit4
000023A8  6700 0010               1779          BEQ     LEAIMD1
000023AC                          1780  
000023AC                          1781  LEAIMD0
000023AC  183C 0001               1782          MOVE.B  #$1,D4
000023B0  45F9 000023C8           1783          LEA     CONTPRINTLEA,A2
000023B6  6000 0BBE               1784          BRA     DISPEA
000023BA                          1785  LEAIMD1 
000023BA  183C 0002               1786          MOVE.B  #$2,D4
000023BE  45F9 000023C8           1787          LEA     CONTPRINTLEA,A2
000023C4  6000 0BB0               1788          BRA     DISPEA  
000023C8                          1789          
000023C8                          1790  CONTPRINTLEA
000023C8  43F9 000032B9           1791          LEA     COMMA,A1
000023CE  103C 000E               1792          MOVE.B  #14,D0
000023D2  4E4F                    1793          TRAP    #15
000023D4  43F9 000032C7           1794          LEA     DISPA,A1
000023DA  103C 000E               1795          MOVE.B  #14,D0
000023DE  4E4F                    1796          TRAP    #15
000023E0  1205                    1797          MOVE.B  D5,D1
000023E2  103C 0003               1798          MOVE.B  #3,D0
000023E6  4E4F                    1799          TRAP    #15
000023E8  6000 0C78               1800          BRA     ENDNEWLINE
000023EC                          1801          
000023EC                          1802  LEA_INDIR_AN
000023EC                          1803  
000023EC  43F9 000032BB           1804          LEA     OPENBRA,A1
000023F2  103C 000E               1805          MOVE.B  #14,D0
000023F6  4E4F                    1806          TRAP    #15
000023F8                          1807          
000023F8  43F9 000032C7           1808          LEA     DISPA,A1
000023FE  103C 000E               1809          MOVE.B  #14,D0
00002402  4E4F                    1810          TRAP    #15
00002404                          1811          
00002404  1202                    1812          MOVE.B  D2,D1
00002406  103C 0003               1813          MOVE.B  #3,D0
0000240A  4E4F                    1814          TRAP    #15
0000240C                          1815          
0000240C  43F9 000032BD           1816          LEA     CLOSEBRA,A1
00002412  103C 000E               1817          MOVE.B  #14,D0
00002416  4E4F                    1818          TRAP    #15
00002418                          1819          
00002418  43F9 000032B9           1820          LEA     COMMA,A1
0000241E  103C 000E               1821          MOVE.B  #14,D0
00002422  4E4F                    1822          TRAP    #15
00002424                          1823          
00002424  43F9 000032C7           1824          LEA     DISPA,A1
0000242A  103C 000E               1825          MOVE.B  #14,D0
0000242E  4E4F                    1826          TRAP    #15
00002430                          1827  
00002430  1205                    1828          MOVE.B  D5,D1
00002432  103C 0003               1829          MOVE.B  #3,D0
00002436  4E4F                    1830          TRAP    #15
00002438                          1831  
00002438  6000 0C28               1832          BRA     ENDNEWLINE
0000243C                          1833  
0000243C                          1834  ******************************************************
0000243C                          1835  * RTS
0000243C                          1836  * Return to sub routine
0000243C                          1837  MISCRTS
0000243C  43F9 000033B8           1838          LEA     MRTS,A1
00002442  103C 000E               1839          MOVE.B  #14,D0
00002446  4E4F                    1840          TRAP    #15
00002448                          1841  
00002448  6000 0C18               1842          BRA     ENDNEWLINE          Goes to next opcode
0000244C                          1843  
0000244C                          1844  ******************************************************
0000244C                          1845  * NOT
0000244C                          1846  * Reuses some of IMD section to display because they have similar format
0000244C                          1847  *  (I was kinda lazy too)
0000244C                          1848  MISCNOT
0000244C  4244                    1849          CLR     D4
0000244E  E20B                    1850          LSR.B   #1,D3
00002450  6400 0004               1851          BCC     MISCNOT2
00002454  5404                    1852          ADD.B   #$2,D4
00002456                          1853  MISCNOT2   
00002456  E20B                    1854          LSR.B   #1,D3
00002458  6400 0004               1855          BCC     MISCNOT3
0000245C  5804                    1856          ADD.B   #$4,D4
0000245E                          1857  MISCNOT3   
0000245E  B43C 0007               1858          CMP.B   #$7,D2
00002462  6D00 0006               1859          BLT     MISCNOT4
00002466  5204                    1860          ADD.B   #$1,D4
00002468  5102                    1861          SUB.B   #$8,D2
0000246A                          1862  
0000246A                          1863          *   Stores them into addr
0000246A                          1864  MISCNOT4
0000246A  13C3 00003A0C           1865          MOVE.B  D3,bit2
00002470  13C4 00003A0D           1866          MOVE.B  D4,bit3
00002476  13C2 00003A0E           1867          MOVE.B  D2,bit4
0000247C                          1868  
0000247C  B63C 0000               1869          CMP.B   #$0,D3
00002480  6700 0016               1870          BEQ     MISCBYTE
00002484  B63C 0001               1871          CMP.B   #$1,D3
00002488  6700 0020               1872          BEQ     MISCWORD
0000248C  B63C 0002               1873          CMP.B   #$2,D3
00002490  6700 0028               1874          BEQ     MISCLONG
00002494  6000 0B5A               1875          BRA     INVOP
00002498                          1876  *************************************************************
00002498                          1877  * Immediate data operation size BYTE
00002498                          1878  MISCBYTE
00002498  6100 004C               1879          BSR     MISCPRINT
0000249C  43F9 000032D7           1880          LEA     MBYTE,A1
000024A2                          1881  
000024A2                          1882          * Moves size to D4, needed to use DISPEA
000024A2  183C 0001               1883          MOVE.B  #$1,D4
000024A6  6000 001E               1884          BRA     MISCEA
000024AA                          1885  
000024AA                          1886  *************************************************************
000024AA                          1887  * Immediate data operation size WORD
000024AA                          1888  MISCWORD
000024AA  6100 003A               1889          BSR     MISCPRINT
000024AE  43F9 000032DA           1890          LEA     MWORD,A1
000024B4                          1891  
000024B4  1803                    1892          MOVE.B  D3,D4
000024B6  6000 000E               1893          BRA     MISCEA
000024BA                          1894  
000024BA                          1895  
000024BA                          1896  *************************************************************
000024BA                          1897  * Immediate data operation size LONG
000024BA                          1898  MISCLONG
000024BA  6100 002A               1899          BSR     MISCPRINT
000024BE  43F9 000032DD           1900          LEA     MLONG,A1
000024C4                          1901  
000024C4                          1902          * Moves size to D4, needed to use DISPEA
000024C4  1803                    1903          MOVE.B  D3,D4
000024C6                          1904  
000024C6                          1905  MISCEA
000024C6  103C 000E               1906          MOVE.B  #14,D0
000024CA  4E4F                    1907          TRAP    #15
000024CC  43F9 000032B5           1908          LEA     TAB,A1
000024D2  103C 000E               1909          MOVE.B  #14,D0
000024D6  4E4F                    1910          TRAP    #15
000024D8                          1911  
000024D8  45F9 000024E2           1912          LEA     MISCEA2,A2
000024DE  6000 0946               1913          BRA     SUBEA
000024E2                          1914  MISCEA2
000024E2  6000 0B7E               1915          BRA     ENDNEWLINE
000024E6                          1916  
000024E6                          1917  *************************************************************
000024E6                          1918  * Display IMD op-code
000024E6                          1919  MISCPRINT
000024E6  0C39 0004 00003A0B      1920          CMP.B   #$4,bit1
000024EE  6700 0018               1921          BEQ     MISCPRINTNEG
000024F2  0C39 0006 00003A0B      1922          CMP.B   #$6,bit1
000024FA  6700 0002               1923          BEQ     MISCPRINTNOT
000024FE                          1924  
000024FE                          1925  MISCPRINTNOT
000024FE  43F9 00003369           1926          LEA     MNOT,A1
00002504  6000 000C               1927          BRA     MISCPRINTEND
00002508                          1928  
00002508                          1929  MISCPRINTNEG
00002508  43F9 00003374           1930          LEA     MNEG,A1
0000250E  6000 0002               1931          BRA     MISCPRINTEND
00002512                          1932  
00002512                          1933  MISCPRINTEND
00002512  103C 000E               1934          MOVE.B  #14,D0
00002516  4E4F                    1935          TRAP    #15
00002518  4E75                    1936          RTS
0000251A                          1937  
0000251A                          1938  *******************************************************************************
0000251A                          1939  * ADDQ section 
0000251A                          1940  
0000251A                          1941  ADDQ    
0000251A                          1942  *       BRA     IMD
0000251A                          1943          
0000251A  13C5 00003A0B           1944          MOVE.B  D5,bit1
00002520  141E                    1945          MOVE.B  (A6)+,D2
00002522                          1946  
00002522  DE02                    1947          ADD.B   D2,D7
00002524                          1948  
00002524  1602                    1949          MOVE.B  D2,D3               *copy data at D2 to D3
00002526                          1950                                      *get digit in 10's place
00002526  E80B                    1951          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002528                          1952                                      *get digit in 1's place
00002528  E90A                    1953          LSL.B   #4,D2               Shift left to get rid of 10's place
0000252A  E80A                    1954          LSR.B   #4,D2               Shift back right into 1's place
0000252C                          1955  
0000252C                          1956          * gets size
0000252C  3803                    1957          MOVE.W  D3,D4
0000252E  E44C                    1958          LSR.W   #$2,D4
00002530  13C4 00003A0C           1959          MOVE.B  D4,bit2
00002536                          1960      
00002536                          1961  
00002536                          1962  *        BRA     IMD
00002536  43F9 0000339A           1963          LEA     MADDQ,A1
0000253C  103C 000E               1964          MOVE.B  #14,D0
00002540  4E4F                    1965          TRAP    #15
00002542                          1966          
00002542                          1967          *determine size
00002542  B83C 0000               1968          CMP.B   #$0,D4
00002546  6700 0018               1969          BEQ     ADDQB
0000254A  B87C 0001               1970          CMP.W   #$1,D4
0000254E  6700 0020               1971          BEQ     ADDQW
00002552  B8BC 00000002           1972          CMP.L   #$2,D4
00002558  6700 0026               1973          BEQ     ADDQL
0000255C  6000 0A92               1974          BRA     INVOP
00002560                          1975  
00002560                          1976  ADDQB
00002560  43F9 000032D7           1977          LEA     MBYTE,A1
00002566  103C 000E               1978          MOVE.B  #14,D0
0000256A  4E4F                    1979          TRAP    #15
0000256C  6000 0022               1980          BRA     ADDQCONT
00002570                          1981          
00002570                          1982  ADDQW
00002570  43F9 000032DA           1983          LEA     MWORD,A1
00002576  103C 000E               1984          MOVE.B  #14,D0
0000257A  4E4F                    1985          TRAP    #15
0000257C  6000 0012               1986          BRA     ADDQCONT
00002580                          1987          
00002580                          1988  ADDQL        
00002580  43F9 000032DD           1989          LEA     MLONG,A1
00002586  103C 000E               1990          MOVE.B  #14,D0
0000258A  4E4F                    1991          TRAP    #15
0000258C  6000 0002               1992          BRA     ADDQCONT
00002590                          1993          
00002590                          1994  ADDQCONT        
00002590  43F9 000032B5           1995          LEA     TAB,A1
00002596  103C 000E               1996          MOVE.B  #14,D0
0000259A  4E4F                    1997          TRAP    #15
0000259C                          1998  
0000259C  43F9 000032C3           1999          LEA     HASH,A1
000025A2  103C 000E               2000          MOVE.B  #14,D0
000025A6  4E4F                    2001          TRAP    #15
000025A8                          2002          
000025A8  E20D                    2003          LSR.B   #1,D5               Shifts the byte over to get the value of the immediate data
000025AA  BA3C 0000               2004          CMP.B   #$0,D5              Checks if the value is 0
000025AE  6600 0006               2005          BNE     ADDQCONT2           If it isn't then skips this next part
000025B2  1A3C 0008               2006          MOVE.B  #8,D5               If it is, then replaces the 0 with 8
000025B6                          2007  
000025B6                          2008  ADDQCONT2
000025B6  1205                    2009          MOVE.B  D5,D1
000025B8  103C 0003               2010          MOVE.B  #3,D0
000025BC  4E4F                    2011          TRAP    #15
000025BE                          2012          
000025BE  43F9 000032B9           2013          LEA     COMMA,A1
000025C4  103C 000E               2014          MOVE.B  #14,D0
000025C8  4E4F                    2015          TRAP    #15
000025CA                          2016          
000025CA  6000 0002               2017          BRA     ADDQEA
000025CE                          2018          
000025CE                          2019  ADDQEA
000025CE  E30B                    2020          LSL.B   #1,D3               Shifts the byte to the left
000025D0  C63C 0007               2021          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
000025D4                          2022  
000025D4  0882 0003               2023          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
000025D8  6700 0004               2024          BEQ     ADDQEA2             If it was already zero, then it will skip this next step
000025DC  5203                    2025          ADD.B   #$1,D3              It it was one, then it will add one to the mode
000025DE                          2026  
000025DE                          2027  ADDQEA2
000025DE  13C2 00003A0E           2028          MOVE.B  D2,bit4     *REG?
000025E4  13C3 00003A0D           2029          MOVE.B  D3,bit3     *MODE?
000025EA  13C4 00003A0C           2030          MOVE.B  D4,bit2     *SIZE?
000025F0  45F9 00003062           2031          LEA     ENDNEWLINE,A2
000025F6  6000 082E               2032          BRA     SUBEA
000025FA                          2033          ***
000025FA                          2034          
000025FA                          2035          
000025FA  B63C 0000               2036          CMP.B   #$0,D3
000025FE  6700 002A               2037          BEQ     DN_EAM
00002602  B63C 0001               2038          CMP.B   #$1,D3
00002606  6700 003A               2039          BEQ     AN_EAM
0000260A  B63C 0002               2040          CMP.B   #$2,D3
0000260E  6700 004A               2041          BEQ     INAN_EAM
00002612  B63C 0003               2042          CMP.B   #$3,D3
00002616  6700 0072               2043          BEQ     INC_EAM
0000261A  B63C 0004               2044          CMP.B   #$4,D3
0000261E  6700 00A6               2045          BEQ     DEC_EAM
00002622  B63C 0007               2046          CMP.B   #$7,D3
00002626  6700 00DA               2047          BEQ     ABS_EA
0000262A                          2048          
0000262A                          2049  DN_EAM
0000262A  43F9 000032CD           2050          LEA     DISPD,A1
00002630  103C 000E               2051          MOVE.B  #14,D0
00002634  4E4F                    2052          TRAP    #15
00002636  1202                    2053          MOVE.B  D2,D1
00002638  103C 0003               2054          MOVE.B  #3,D0
0000263C  4E4F                    2055          TRAP    #15
0000263E  6000 0A22               2056          BRA     ENDNEWLINE
00002642                          2057          
00002642                          2058  AN_EAM
00002642  43F9 000032C7           2059          LEA     DISPA,A1
00002648  103C 000E               2060          MOVE.B  #14,D0
0000264C  4E4F                    2061          TRAP    #15
0000264E  1202                    2062          MOVE.B  D2,D1
00002650  103C 0003               2063          MOVE.B  #3,D0
00002654  4E4F                    2064          TRAP    #15
00002656  6000 0A0A               2065          BRA     ENDNEWLINE
0000265A                          2066          
0000265A                          2067  INAN_EAM
0000265A  43F9 000032BB           2068          LEA     OPENBRA,A1
00002660  103C 000E               2069          MOVE.B  #14,D0
00002664  4E4F                    2070          TRAP    #15
00002666  43F9 000032C7           2071          LEA     DISPA,A1
0000266C  103C 000E               2072          MOVE.B  #14,D0
00002670  4E4F                    2073          TRAP    #15
00002672  1202                    2074          MOVE.B  D2,D1
00002674  103C 0003               2075          MOVE.B  #3,D0
00002678  4E4F                    2076          TRAP    #15
0000267A  43F9 000032BD           2077          LEA     CLOSEBRA,A1
00002680  103C 000E               2078          MOVE.B  #14,D0
00002684  4E4F                    2079          TRAP    #15
00002686  6000 09DA               2080          BRA     ENDNEWLINE
0000268A                          2081          
0000268A                          2082  INC_EAM                             *Consider combining inc and dec with in and removing dup com
0000268A  43F9 000032BB           2083          LEA     OPENBRA,A1
00002690  103C 000E               2084          MOVE.B  #14,D0
00002694  4E4F                    2085          TRAP    #15
00002696  43F9 000032C7           2086          LEA     DISPA,A1
0000269C  103C 000E               2087          MOVE.B  #14,D0
000026A0  4E4F                    2088          TRAP    #15
000026A2                          2089          
000026A2  3202                    2090          MOVE.W  D2,D1
000026A4  103C 0003               2091          MOVE.B  #3,D0
000026A8  4E4F                    2092          TRAP    #15
000026AA                          2093          
000026AA  43F9 000032BD           2094          LEA     CLOSEBRA,A1
000026B0  103C 000E               2095          MOVE.B  #14,D0
000026B4  4E4F                    2096          TRAP    #15
000026B6  43F9 000032BF           2097          LEA     POS,A1
000026BC  103C 000E               2098          MOVE.B  #14,D0
000026C0  4E4F                    2099          TRAP    #15
000026C2  6000 099E               2100          BRA     ENDNEWLINE
000026C6                          2101          
000026C6                          2102  DEC_EAM
000026C6  43F9 000032C1           2103          LEA     NEG,A1
000026CC  103C 000E               2104          MOVE.B  #14,D0
000026D0  4E4F                    2105          TRAP    #15
000026D2  43F9 000032BB           2106          LEA     OPENBRA,A1
000026D8  103C 000E               2107          MOVE.B  #14,D0
000026DC  4E4F                    2108          TRAP    #15
000026DE  43F9 000032C7           2109          LEA     DISPA,A1
000026E4  103C 000E               2110          MOVE.B  #14,D0
000026E8  4E4F                    2111          TRAP    #15
000026EA  1202                    2112          MOVE.B  D2,D1
000026EC  103C 0003               2113          MOVE.B  #3,D0
000026F0  4E4F                    2114          TRAP    #15
000026F2  43F9 000032BD           2115          LEA     CLOSEBRA,A1
000026F8  103C 000E               2116          MOVE.B  #14,D0
000026FC  4E4F                    2117          TRAP    #15
000026FE  6000 0962               2118          BRA     ENDNEWLINE
00002702                          2119          
00002702                          2120  ABS_EA  
00002702                          2121          *USE D5 TO SET SIZE APPROPRIATELY AND TO FULFILL REQ TO USE DISPEA SR
00002702  45F9 0000270C           2122          LEA     ABS_EA2,A2
00002708  6000 086C               2123          BRA     DISPEA
0000270C                          2124          
0000270C                          2125  ABS_EA2
0000270C  6000 0954               2126          BRA     ENDNEWLINE
00002710                          2127  
00002710                          2128  *************************************************************************
00002710                          2129  * MOVEM stuff
00002710                          2130          *   D5 is bit1
00002710                          2131          *   D3 is bit2
00002710                          2132          *   D2 is bit3
00002710                          2133  MISCMOVEM
00002710  1805                    2134          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002712  4245                    2135          CLR     D5                  Moves 0 to D5
00002714  0804 0002               2136          BTST    #2,D4               Checks the bit at spot 2
00002718  6700 0006               2137          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
0000271C  1A3C 0001               2138          MOVE.B  #1,D5               Else, it will skip it
00002720                          2139  
00002720                          2140  MISCMOVEM2
00002720  4246                    2141          CLR     D6                  Clears D6, setting it to 0
00002722  1803                    2142          MOVE.B  D3,D4               Gets the size field and stores it into D6
00002724  0804 0002               2143          BTST    #2,D4               Checks the bit at spot 2
00002728  6700 0006               2144          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
0000272C  1C3C 0001               2145          MOVE.B  #1,D6               Else, it will skip it. 
00002730                          2146  
00002730                          2147  MISCMOVEM3
00002730  C63C 0003               2148          AND.B   #$3,D3              Gets ride of the first 2 bits
00002734  E30B                    2149          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
00002736  0882 0003               2150          BCLR    #3,D2               Checks furthest left bit and set it to 0
0000273A  6700 0006               2151          BEQ     MISCMOVEM4
0000273E  08C3 0000               2152          BSET    #0,D3               If bit was 1, adds 1 to mode
00002742                          2153  
00002742                          2154      * bit1 is in D5 dr field
00002742                          2155      * bit2 is in D6 size
00002742                          2156      * bit3 is in D3 mode
00002742                          2157      * bit4 is in D2 reg
00002742                          2158  MISCMOVEM4
00002742  13C5 00003A0B           2159          MOVE.B  D5,bit1
00002748  13C6 00003A0C           2160          MOVE.B  D6,bit2
0000274E  13C3 00003A0D           2161          MOVE.B  D3,bit3
00002754  13C2 00003A0E           2162          MOVE.B  D2,bit4
0000275A                          2163  
0000275A                          2164      * Prints out MOVEM and size + tab
0000275A  43F9 00003335           2165          LEA     MMOVEM,A1
00002760  103C 000E               2166          MOVE.B  #14,D0
00002764  4E4F                    2167          TRAP    #15
00002766                          2168  
00002766                          2169  * Finds the appropiate size and prints it out
00002766  BC3C 0001               2170          CMP.B   #1,D6
0000276A  6700 000C               2171          BEQ     MISCMMSIZEL
0000276E  43F9 000032DA           2172          LEA     MWORD,A1
00002774  6000 0008               2173          BRA     MISCMMPRINTSIZE
00002778                          2174  
00002778                          2175  MISCMMSIZEL
00002778  43F9 000032DD           2176          LEA     MLONG,A1
0000277E                          2177  
0000277E                          2178  MISCMMPRINTSIZE
0000277E  4E4F                    2179          TRAP    #15
00002780  43F9 000032B5           2180          LEA     TAB,A1
00002786  4E4F                    2181          TRAP    #15
00002788                          2182  
00002788                          2183  * Figures out if it is REG-to-MEM or MEM-to-REG
00002788  3C1E                    2184          MOVE.W  (A6)+,D6
0000278A  BA3C 0000               2185          CMP.B   #0,D5
0000278E  6700 0006               2186          BEQ     MISCMMPREDECCHECK
00002792  6000 007C               2187          BRA     MISCMMPOSTINC
00002796                          2188  
00002796                          2189  MISCMMPREDECCHECK
00002796  B63C 0004               2190          CMP.B   #$4,D3
0000279A  6700 0006               2191          BEQ     MISCMMPREDEC
0000279E  6000 00DE               2192          BRA     MISCMMREGMEM
000027A2                          2193  
000027A2                          2194  ******************************************************************
000027A2                          2195  * MOVEM Post-decrement
000027A2                          2196  * Prints out registers from post-decrement
000027A2                          2197  * D6 holds the reg list
000027A2                          2198  MISCMMPREDEC
000027A2  1806                    2199          MOVE.B  D6,D4
000027A4  3E3C 0008               2200          MOVE.W  #8,D7               Counter
000027A8  123C 000F               2201          MOVE.B  #$F,D1
000027AC                          2202  
000027AC  49F9 000032C7           2203          LEA     DISPA,A4
000027B2  6100 0032               2204          BSR     MISCMMPREDECPRINT
000027B6                          2205  
000027B6  3806                    2206          MOVE.W  D6,D4
000027B8  E04C                    2207          LSR.W   #8,D4
000027BA  3E3C 0008               2208          MOVE.W  #8,D7               Counter
000027BE  49F9 000032CD           2209          LEA     DISPD,A4
000027C4  6100 0020               2210          BSR     MISCMMPREDECPRINT
000027C8  6000 0002               2211          BRA     MISCMMPREDEC2
000027CC                          2212  
000027CC                          2213  MISCMMPREDEC2
000027CC  43F9 000032B9           2214          LEA     COMMA,A1
000027D2  103C 000E               2215          MOVE.B  #14,D0
000027D6  4E4F                    2216          TRAP    #15
000027D8                          2217  
000027D8  45F9 000027E2           2218          LEA     MISCMMPREDEC3,A2
000027DE  6000 0646               2219          BRA     SUBEA
000027E2                          2220  
000027E2                          2221  MISCMMPREDEC3
000027E2  6000 087E               2222          BRA     ENDNEWLINE
000027E6                          2223  
000027E6                          2224  * Prints out reg list
000027E6                          2225  MISCMMPREDECPRINT
000027E6  E30C                    2226          LSL.B   #1,D4
000027E8  6400 001C               2227          BCC     MISCMMPREDECPRINT3
000027EC                          2228  
000027EC  B23C 000F               2229          CMP.B   #$F,D1
000027F0  6700 0008               2230          BEQ     MISCMMPREDECPRINT2
000027F4  4EB9 000028F4           2231          JSR     MISCMMSLASH
000027FA                          2232  
000027FA                          2233  MISCMMPREDECPRINT2
000027FA  224C                    2234          MOVEA.L A4,A1
000027FC  103C 000E               2235          MOVE.B  #14,D0
00002800  4E4F                    2236          TRAP    #15
00002802  6100 00E2               2237          BSR     MISCMMPRINTNUM
00002806                          2238  
00002806                          2239  MISCMMPREDECPRINT3
00002806  5307                    2240          SUB.B   #1,D7
00002808  BE3C 0000               2241          CMP.B   #0,D7
0000280C  66D8                    2242          BNE     MISCMMPREDECPRINT
0000280E  4E75                    2243          RTS
00002810                          2244  
00002810                          2245  ******************************************************************
00002810                          2246  * MOVEM Post-increment
00002810                          2247  * Prints out registers from post-increment
00002810                          2248  * D6 holds the reg list
00002810                          2249  MISCMMPOSTINC
00002810  45F9 0000281A           2250          LEA     MISCMMPOSTINC2,A2
00002816  6000 060E               2251          BRA     SUBEA
0000281A                          2252  
0000281A                          2253  MISCMMPOSTINC2
0000281A  43F9 000032B9           2254          LEA     COMMA,A1
00002820  103C 000E               2255          MOVE.B  #14,D0
00002824  4E4F                    2256          TRAP    #15
00002826                          2257  
00002826  3806                    2258          MOVE.W  D6,D4
00002828  E04C                    2259          LSR.W   #8,D4
0000282A  3E3C 0008               2260          MOVE.W  #8,D7               Counter
0000282E  123C 000F               2261          MOVE.B  #$F,D1
00002832                          2262  
00002832  49F9 000032C7           2263          LEA     DISPA,A4
00002838  6100 001A               2264          BSR     MISCMMPOSTINCPRINT
0000283C                          2265  
0000283C  1806                    2266          MOVE.B  D6,D4
0000283E  3E3C 0008               2267          MOVE.W  #8,D7               Counter
00002842  49F9 000032CD           2268          LEA     DISPD,A4
00002848  6100 000A               2269          BSR     MISCMMPOSTINCPRINT
0000284C  6000 0002               2270          BRA     MISCMMPOSTINC3
00002850                          2271  
00002850                          2272  MISCMMPOSTINC3
00002850  6000 0810               2273          BRA     ENDNEWLINE
00002854                          2274  
00002854                          2275  * Prints out reg list
00002854                          2276  MISCMMPOSTINCPRINT
00002854  E20C                    2277          LSR.B   #1,D4
00002856  6400 001C               2278          BCC     MISCMMPOSTINCPRINT3
0000285A                          2279  
0000285A  B23C 000F               2280          CMP.B   #$F,D1
0000285E  6700 0008               2281          BEQ     MISCMMPOSTINCPRINT2
00002862  4EB9 000028F4           2282          JSR     MISCMMSLASH
00002868                          2283  
00002868                          2284  MISCMMPOSTINCPRINT2
00002868  224C                    2285          MOVEA.L A4,A1
0000286A  103C 000E               2286          MOVE.B  #14,D0
0000286E  4E4F                    2287          TRAP    #15
00002870  6100 0074               2288          BSR     MISCMMPRINTNUM
00002874                          2289  
00002874                          2290  MISCMMPOSTINCPRINT3
00002874  5307                    2291          SUB.B   #1,D7
00002876  BE3C 0000               2292          CMP.B   #0,D7
0000287A  66D8                    2293          BNE     MISCMMPOSTINCPRINT
0000287C  4E75                    2294          RTS
0000287E                          2295  
0000287E                          2296  ******************************************************************
0000287E                          2297  * MOVEM REG-to-MEM non-predecrement
0000287E                          2298  * Prints out a register to memory when it is NOT in predecrement
0000287E                          2299  * D6 holds the reg list
0000287E                          2300  MISCMMREGMEM
0000287E  1806                    2301          MOVE.B  D6,D4
00002880  3E3C 0008               2302          MOVE.W  #8,D7               Counter
00002884  123C 000F               2303          MOVE.B  #$F,D1
00002888                          2304  
00002888  49F9 000032CD           2305          LEA     DISPD,A4
0000288E  61C4                    2306          BSR     MISCMMPOSTINCPRINT
00002890                          2307  
00002890  3806                    2308          MOVE.W  D6,D4
00002892  E04C                    2309          LSR.W   #8,D4
00002894  3E3C 0008               2310          MOVE.W  #8,D7               Counter
00002898  49F9 000032C7           2311          LEA     DISPA,A4
0000289E  61B4                    2312          BSR     MISCMMPOSTINCPRINT
000028A0  6000 0002               2313          BRA     MISCMMREGMEM2
000028A4                          2314  
000028A4                          2315  MISCMMREGMEM2
000028A4  43F9 000032B9           2316          LEA     COMMA,A1
000028AA  103C 000E               2317          MOVE.B  #14,D0
000028AE  4E4F                    2318          TRAP    #15
000028B0                          2319  
000028B0  45F9 000028BA           2320          LEA     MISCMMREGMEM3,A2
000028B6  6000 056E               2321          BRA     SUBEA
000028BA                          2322  
000028BA                          2323  MISCMMREGMEM3
000028BA  6000 07A6               2324          BRA     ENDNEWLINE
000028BE                          2325  
000028BE                          2326  * Prints out reg list
000028BE                          2327  MISCMMREGMEMPRINT
000028BE  E20C                    2328          LSR.B   #1,D4
000028C0  64B2                    2329          BCC     MISCMMPOSTINCPRINT3
000028C2                          2330  
000028C2  B23C 000F               2331          CMP.B   #$F,D1
000028C6  67A0                    2332          BEQ     MISCMMPOSTINCPRINT2
000028C8  4EB9 000028F4           2333          JSR     MISCMMSLASH
000028CE                          2334  
000028CE                          2335  MISCMMREGMEMPRINT2
000028CE  224C                    2336          MOVEA.L A4,A1
000028D0  103C 000E               2337          MOVE.B  #14,D0
000028D4  4E4F                    2338          TRAP    #15
000028D6  6100 000E               2339          BSR     MISCMMPRINTNUM
000028DA                          2340  
000028DA                          2341  MISCMMREGMEMPRINT3
000028DA  5307                    2342          SUB.B   #1,D7
000028DC  BE3C 0000               2343          CMP.B   #0,D7
000028E0  6600 FF72               2344          BNE     MISCMMPOSTINCPRINT
000028E4  4E75                    2345          RTS
000028E6                          2346  
000028E6                          2347  
000028E6                          2348  
000028E6                          2349  ***********************************************
000028E6                          2350  * Stuff for printing reg list
000028E6                          2351  MISCMMPRINTNUM
000028E6  123C 0008               2352          MOVE.B  #8,D1
000028EA  9207                    2353          SUB.B   D7,D1
000028EC  103C 0003               2354          MOVE.B  #3,D0
000028F0  4E4F                    2355          TRAP    #15
000028F2  4E75                    2356          RTS
000028F4                          2357  
000028F4                          2358  MISCMMSLASH
000028F4  43F9 000032C5           2359          LEA     SLASH,A1
000028FA  103C 000E               2360          MOVE.B  #14,D0
000028FE  4E4F                    2361          TRAP    #15
00002900  4E75                    2362          RTS
00002902                          2363  
00002902                          2364  ******************************************************************************************************
00002902                          2365  * SUB section
00002902                          2366  
00002902                          2367          *   Grabs next two nibbles
00002902  141E                    2368  SUB     MOVE.B  (A6)+,D2
00002904                          2369  
00002904  DE02                    2370          ADD.B   D2,D7
00002906                          2371  
00002906  1602                    2372          MOVE.B  D2,D3               Copies data at D2 to D3
00002908                          2373          *   this gets digit in 10's place
00002908  E80B                    2374          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000290A                          2375          *   this gets digit in 1's place
0000290A  E90A                    2376          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000290C  E80A                    2377          LSR.B   #4,D2               Shifts back right into 1's place
0000290E                          2378  
0000290E                          2379          *   D3 holds digit in 10's place
0000290E                          2380          *   D2 holds digit in 1's place
0000290E                          2381  
0000290E                          2382          
0000290E                          2383          *   Converts nibble into 3-bit parts
0000290E  E20B                    2384          LSR.B   #1,D3
00002910  6400 0004               2385          BCC     SUB2
00002914  5404                    2386          ADD.B   #$2,D4
00002916                          2387          
00002916  E20B                    2388  SUB2    LSR.B   #1,D3
00002918  6400 0004               2389          BCC     SUB3
0000291C  5804                    2390          ADD.B   #$4,D4
0000291E                          2391          
0000291E  1205                    2392  SUB3    MOVE.B  D5,D1
00002920  E209                    2393          LSR.B   #1,D1
00002922  6400 0004               2394          BCC     SUB4
00002926  5803                    2395          ADD.B   #$4,D3
00002928                          2396  
00002928  B43C 0007               2397  SUB4    CMP.B   #$7,D2
0000292C  6D00 0006               2398          BLT     SUB1
00002930  5204                    2399          ADD.B   #$1,D4
00002932  5102                    2400          SUB.B   #$8,D2
00002934                          2401  
00002934                          2402          *   Stores them into addr
00002934  13C1 00003A0B           2403  SUB1    MOVE.B  D1,bit1
0000293A  13C3 00003A0C           2404          MOVE.B  D3,bit2
00002940  13C4 00003A0D           2405          MOVE.B  D4,bit3
00002946  13C2 00003A0E           2406          MOVE.B  D2,bit4
0000294C                          2407  
0000294C                          2408          * do this later
0000294C  4241                    2409          CLR     D1
0000294E  7400                    2410          MOVE.L  #0,D2
00002950  7600                    2411          MOVE.L  #0,D3
00002952  7800                    2412          MOVE.L  #0,D4
00002954  7A00                    2413          MOVE.L  #0,D5
00002956  7C00                    2414          MOVE.L  #0,D6
00002958                          2415  
00002958                          2416          
00002958                          2417  ******************************************************************************************************
00002958                          2418  * After spliting the op-code into SUB's defined groupings
00002958                          2419  *   This figures out which operation it is and goes to that sub-routine
00002958                          2420  
00002958                          2421          * This checks if bit0 is C which is either AND or MULS
00002958  0C39 000C 00003A0A      2422          CMP.B   #$C,bit0
00002960  6600 000E               2423          BNE     SUBACHECK
00002964  0C39 0007 00003A0C      2424          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
0000296C  6700 F180               2425          BEQ     MULSW                       AND will use SUB's routine
00002970                          2426  
00002970                          2427  SUBACHECK
00002970                          2428          * This will display SUBA instead  -- check this later
00002970  0C39 0003 00003A0C      2429          CMP.B   #$3,bit2
00002978  6700 01D6               2430          BEQ     SUBA
0000297C  0C39 0007 00003A0C      2431          CMP.B   #$7,bit2
00002984  6700 01CA               2432          BEQ     SUBA
00002988                          2433  
00002988                          2434          * This will find the size and stuff
00002988  0C39 0000 00003A0C      2435          CMP.B   #$0,bit2
00002990  6700 003E               2436          BEQ     SUBSIZE1
00002994  0C39 0001 00003A0C      2437          CMP.B   #$1,bit2
0000299C  6700 0072               2438          BEQ     SUBSIZE2
000029A0  0C39 0002 00003A0C      2439          CMP.B   #$2,bit2
000029A8  6700 00A6               2440          BEQ     SUBSIZE3
000029AC  0C39 0004 00003A0C      2441          CMP.B   #$4,bit2
000029B4  6700 00DA               2442          BEQ     SUBSIZE4
000029B8  0C39 0005 00003A0C      2443          CMP.B   #$5,bit2
000029C0  6700 010E               2444          BEQ     SUBSIZE5
000029C4  0C39 0006 00003A0C      2445          CMP.B   #$6,bit2
000029CC  6700 0142               2446          BEQ     SUBSIZE6
000029D0                          2447     
000029D0                          2448  ******************************************************************************************************
000029D0                          2449  *   Displays size, then does operation order
000029D0                          2450  
000029D0                          2451  *   000 byte    EA,DN
000029D0                          2452  SUBSIZE1
000029D0  6100 0260               2453          BSR     SUBPRINT
000029D4  43F9 000032D7           2454          LEA     MBYTE,A1
000029DA  103C 000E               2455          MOVE.B  #14,D0
000029DE  4E4F                    2456          TRAP    #15
000029E0  43F9 000032B5           2457          LEA     TAB,A1
000029E6  103C 000E               2458          MOVE.B  #14,D0
000029EA  4E4F                    2459          TRAP    #15
000029EC                          2460  
000029EC  45F9 000029F6           2461          LEA     SUBSIZE11,A2
000029F2  6000 0432               2462          BRA     SUBEA
000029F6                          2463  SUBSIZE11
000029F6  45F9 00002A0C           2464          LEA     SUBSIZE12,A2
000029FC  43F9 000032B9           2465          LEA     COMMA,A1
00002A02  103C 000E               2466          MOVE.B  #14,D0
00002A06  4E4F                    2467          TRAP    #15
00002A08  6000 02F8               2468          BRA     SUBDN
00002A0C                          2469  SUBSIZE12
00002A0C  6000 0654               2470          BRA     ENDNEWLINE
00002A10                          2471  
00002A10                          2472  *************************************************
00002A10                          2473  *   001 word    EA,DN
00002A10                          2474  SUBSIZE2
00002A10  6100 0220               2475          BSR     SUBPRINT
00002A14  43F9 000032DA           2476          LEA     MWORD,A1
00002A1A  103C 000E               2477          MOVE.B  #14,D0
00002A1E  4E4F                    2478          TRAP    #15
00002A20  43F9 000032B5           2479          LEA     TAB,A1
00002A26  103C 000E               2480          MOVE.B  #14,D0
00002A2A  4E4F                    2481          TRAP    #15
00002A2C                          2482  
00002A2C  45F9 00002A36           2483          LEA     SUBSIZE21,A2
00002A32  6000 03F2               2484          BRA     SUBEA
00002A36                          2485  SUBSIZE21
00002A36  45F9 00002A4C           2486          LEA     SUBSIZE22,A2
00002A3C  43F9 000032B9           2487          LEA     COMMA,A1
00002A42  103C 000E               2488          MOVE.B  #14,D0
00002A46  4E4F                    2489          TRAP    #15
00002A48  6000 02B8               2490          BRA     SUBDN
00002A4C                          2491  SUBSIZE22
00002A4C  6000 0614               2492          BRA     ENDNEWLINE
00002A50                          2493  
00002A50                          2494  *************************************************
00002A50                          2495  *   010 long    EA,DN
00002A50                          2496  SUBSIZE3
00002A50  6100 01E0               2497          BSR     SUBPRINT
00002A54  43F9 000032DD           2498          LEA     MLONG,A1
00002A5A  103C 000E               2499          MOVE.B  #14,D0
00002A5E  4E4F                    2500          TRAP    #15
00002A60  43F9 000032B5           2501          LEA     TAB,A1
00002A66  103C 000E               2502          MOVE.B  #14,D0
00002A6A  4E4F                    2503          TRAP    #15
00002A6C                          2504  
00002A6C  45F9 00002A76           2505          LEA     SUBSIZE31,A2
00002A72  6000 03B2               2506          BRA     SUBEA
00002A76                          2507  SUBSIZE31
00002A76  45F9 00002A8C           2508          LEA     SUBSIZE32,A2
00002A7C  43F9 000032B9           2509          LEA     COMMA,A1
00002A82  103C 000E               2510          MOVE.B  #14,D0
00002A86  4E4F                    2511          TRAP    #15
00002A88  6000 0278               2512          BRA     SUBDN
00002A8C                          2513  SUBSIZE32
00002A8C  6000 05D4               2514          BRA     ENDNEWLINE
00002A90                          2515  
00002A90                          2516  *************************************************
00002A90                          2517  *   100 byte    DN,EA
00002A90                          2518  SUBSIZE4
00002A90  6100 01A0               2519          BSR     SUBPRINT
00002A94  43F9 000032D7           2520          LEA     MBYTE,A1
00002A9A  103C 000E               2521          MOVE.B  #14,D0
00002A9E  4E4F                    2522          TRAP    #15
00002AA0  43F9 000032B5           2523          LEA     TAB,A1
00002AA6  103C 000E               2524          MOVE.B  #14,D0
00002AAA  4E4F                    2525          TRAP    #15
00002AAC                          2526  
00002AAC                          2527          *BSR     SUBERRORTEST1
00002AAC                          2528  
00002AAC  45F9 00002AB6           2529          LEA     SUBSIZE41,A2
00002AB2  6000 024E               2530          BRA     SUBDN
00002AB6                          2531  SUBSIZE41
00002AB6  45F9 00002ACC           2532          LEA     SUBSIZE42,A2
00002ABC  43F9 000032B9           2533          LEA     COMMA,A1
00002AC2  103C 000E               2534          MOVE.B  #14,D0
00002AC6  4E4F                    2535          TRAP    #15
00002AC8  6000 035C               2536          BRA     SUBEA
00002ACC                          2537  SUBSIZE42
00002ACC  6000 0594               2538          BRA     ENDNEWLINE
00002AD0                          2539  
00002AD0                          2540  *************************************************
00002AD0                          2541  *   101 word    DN,EA
00002AD0                          2542  SUBSIZE5
00002AD0                          2543          *BSR     SUBERRORTEST1               * This does error testing
00002AD0  6100 0160               2544          BSR     SUBPRINT                    * Prints out 'SUB.'
00002AD4  43F9 000032DA           2545          LEA     MWORD,A1
00002ADA  103C 000E               2546          MOVE.B  #14,D0
00002ADE  4E4F                    2547          TRAP    #15
00002AE0  43F9 000032B5           2548          LEA     TAB,A1
00002AE6  103C 000E               2549          MOVE.B  #14,D0
00002AEA  4E4F                    2550          TRAP    #15
00002AEC                          2551  
00002AEC  45F9 00002AF6           2552          LEA     SUBSIZE51,A2
00002AF2  6000 020E               2553          BRA     SUBDN
00002AF6                          2554  SUBSIZE51
00002AF6  45F9 00002B0C           2555          LEA     SUBSIZE52,A2
00002AFC  43F9 000032B9           2556          LEA     COMMA,A1
00002B02  103C 000E               2557          MOVE.B  #14,D0
00002B06  4E4F                    2558          TRAP    #15
00002B08  6000 031C               2559          BRA     SUBEA
00002B0C                          2560  SUBSIZE52
00002B0C  6000 0554               2561          BRA     ENDNEWLINE
00002B10                          2562  
00002B10                          2563  *************************************************
00002B10                          2564  *   110 long    DN,EA
00002B10                          2565  SUBSIZE6
00002B10                          2566          *BSR     SUBERRORTEST1               * This does error testing
00002B10  6100 0120               2567          BSR     SUBPRINT                    * Prints out 'SUB.'
00002B14  43F9 000032DD           2568          LEA     MLONG,A1
00002B1A  103C 000E               2569          MOVE.B  #14,D0
00002B1E  4E4F                    2570          TRAP    #15
00002B20  43F9 000032B5           2571          LEA     TAB,A1
00002B26  103C 000E               2572          MOVE.B  #14,D0
00002B2A  4E4F                    2573          TRAP    #15
00002B2C                          2574  
00002B2C                          2575          *BSR     SUBERRORTEST1
00002B2C                          2576  
00002B2C  45F9 00002B36           2577          LEA     SUBSIZE61,A2
00002B32  6000 01CE               2578          BRA     SUBDN
00002B36                          2579  SUBSIZE61
00002B36  45F9 00002B4C           2580          LEA     SUBSIZE62,A2
00002B3C  43F9 000032B9           2581          LEA     COMMA,A1
00002B42  103C 000E               2582          MOVE.B  #14,D0
00002B46  4E4F                    2583          TRAP    #15
00002B48  6000 02DC               2584          BRA     SUBEA
00002B4C                          2585  SUBSIZE62
00002B4C  6000 0514               2586          BRA     ENDNEWLINE
00002B50                          2587  
00002B50                          2588  ****************************************************************************
00002B50                          2589  *   This section is for SUBA
00002B50                          2590  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002B50                          2591  SUBA
00002B50  0C39 0009 00003A0A      2592          CMP.B   #$9,bit0
00002B58  6700 001A               2593          BEQ     SUBPRINTSUBA
00002B5C  0C39 000B 00003A0A      2594          CMP.B   #$B,bit0
00002B64  6700 001E               2595          BEQ     SUBPRINTCMPA
00002B68  0C39 000D 00003A0A      2596          CMP.B   #$D,bit0
00002B70  6700 0022               2597          BEQ     SUBPRINTADDA
00002B74                          2598  
00002B74                          2599  
00002B74                          2600  SUBPRINTSUBA
00002B74  43F9 0000334E           2601          LEA     MSUBA,A1                    Displays 'SUBA.'
00002B7A  103C 000E               2602          MOVE.B  #14,D0
00002B7E  4E4F                    2603          TRAP    #15
00002B80  6000 0022               2604          BRA     SUBACONT
00002B84                          2605  
00002B84                          2606  SUBPRINTCMPA
00002B84  43F9 00003383           2607          LEA     MCMPA,A1                    Displays 'SUBA.'
00002B8A  103C 000E               2608          MOVE.B  #14,D0
00002B8E  4E4F                    2609          TRAP    #15
00002B90  6000 0012               2610          BRA     SUBACONT
00002B94                          2611  
00002B94                          2612  SUBPRINTADDA
00002B94  43F9 00003394           2613          LEA     MADDA,A1                    Displays 'SUBA.'
00002B9A  103C 000E               2614          MOVE.B  #14,D0
00002B9E  4E4F                    2615          TRAP    #15
00002BA0  6000 0002               2616          BRA     SUBACONT
00002BA4                          2617  
00002BA4                          2618  SUBACONT
00002BA4                          2619          * Does the rest of SUBA
00002BA4  0C39 0003 00003A0C      2620          CMP.B   #$3,bit2
00002BAC  6700 000E               2621          BEQ     SUBSIZE7
00002BB0  0C39 0007 00003A0C      2622          CMP.B   #$7,bit2
00002BB8  6700 003E               2623          BEQ     SUBSIZE8
00002BBC                          2624  
00002BBC                          2625  *************************************************
00002BBC                          2626  *   SUBA Word   ea,An
00002BBC                          2627  SUBSIZE7
00002BBC  43F9 000032DA           2628          LEA     MWORD,A1
00002BC2  103C 000E               2629          MOVE.B  #14,D0
00002BC6  4E4F                    2630          TRAP    #15
00002BC8  43F9 000032B5           2631          LEA     TAB,A1
00002BCE  103C 000E               2632          MOVE.B  #14,D0
00002BD2  4E4F                    2633          TRAP    #15
00002BD4                          2634  
00002BD4  45F9 00002BDE           2635          LEA     SUBSIZE71,A2
00002BDA  6000 024A               2636          BRA     SUBEA
00002BDE                          2637  SUBSIZE71
00002BDE  45F9 00002BF4           2638          LEA     SUBSIZE72,A2
00002BE4  43F9 000032B9           2639          LEA     COMMA,A1
00002BEA  103C 000E               2640          MOVE.B  #14,D0
00002BEE  4E4F                    2641          TRAP    #15
00002BF0  6000 0164               2642          BRA     SUBAN2
00002BF4                          2643  SUBSIZE72
00002BF4  6000 046C               2644          BRA     ENDNEWLINE
00002BF8                          2645  
00002BF8                          2646  *************************************************
00002BF8                          2647  *   SUBA longword   ea,An
00002BF8                          2648  SUBSIZE8
00002BF8  43F9 000032DD           2649          LEA     MLONG,A1
00002BFE  103C 000E               2650          MOVE.B  #14,D0
00002C02  4E4F                    2651          TRAP    #15
00002C04  43F9 000032B5           2652          LEA     TAB,A1
00002C0A  103C 000E               2653          MOVE.B  #14,D0
00002C0E  4E4F                    2654          TRAP    #15
00002C10                          2655  
00002C10  45F8 2BDE               2656          LEA     SUBSIZE71,A2
00002C14  6000 0210               2657          BRA     SUBEA
00002C18                          2658  SUBSIZE81
00002C18  45F8 2BF4               2659          LEA     SUBSIZE72,A2
00002C1C  43F9 000032B9           2660          LEA     COMMA,A1
00002C22  103C 000E               2661          MOVE.B  #14,D0
00002C26  4E4F                    2662          TRAP    #15
00002C28  6000 012C               2663          BRA     SUBAN2
00002C2C                          2664  SUBSIZE82
00002C2C  6000 0434               2665          BRA     ENDNEWLINE
00002C30                          2666  
00002C30                          2667  *************************************************
00002C30                          2668  * Jumps to memory location at A2
00002C30                          2669  SUBJMPA2
00002C30  4ED2                    2670          JMP     (A2)
00002C32                          2671  
00002C32                          2672  *************************************************
00002C32                          2673  * Prints out opcode name
00002C32                          2674  SUBPRINT
00002C32  0C39 0009 00003A0A      2675          CMP.B   #$9,bit0                Prints SUB
00002C3A  6700 0026               2676          BEQ     SUBPRINTSUB
00002C3E  0C39 000B 00003A0A      2677          CMP.B   #$B,bit0                Prints CMP or EOR
00002C46  6700 004A               2678          BEQ     SUBPRINTB
00002C4A  0C39 000C 00003A0A      2679          CMP.B   #$C,bit0                Prints AND
00002C52  6700 001E               2680          BEQ     SUBPRINTAND
00002C56  0C39 000D 00003A0A      2681          CMP.B   #$D,bit0                Prints ADD
00002C5E  6700 0022               2682          BEQ     SUBPRINTADD
00002C62                          2683  
00002C62                          2684  SUBPRINTSUB   * Displays 'SUB.' 
00002C62  43F9 00003349           2685          LEA     MSUB,A1
00002C68  103C 000E               2686          MOVE.B  #14,D0
00002C6C  4E4F                    2687          TRAP    #15
00002C6E  6000 004E               2688          BRA     SUBPRINTEND
00002C72                          2689  
00002C72                          2690  SUBPRINTAND   * Displays 'AND.' 
00002C72  43F9 00003354           2691          LEA     MAND,A1
00002C78  103C 000E               2692          MOVE.B  #14,D0
00002C7C  4E4F                    2693          TRAP    #15
00002C7E  6000 003E               2694          BRA     SUBPRINTEND
00002C82                          2695  
00002C82                          2696  SUBPRINTADD   * Displays 'ADD.' 
00002C82  43F9 00003359           2697          LEA     MADD,A1
00002C88  103C 000E               2698          MOVE.B  #14,D0
00002C8C  4E4F                    2699          TRAP    #15
00002C8E  6000 002E               2700          BRA     SUBPRINTEND
00002C92                          2701  
00002C92                          2702  SUBPRINTB
00002C92  0C39 0004 00003A0C      2703          CMP.B   #$4,bit2
00002C9A  6D00 0012               2704          BLT     SUBPRINTCMP
00002C9E                          2705  
00002C9E                          2706  SUBPRINTEOR   * Displays 'EOR.' 
00002C9E  43F9 00003389           2707          LEA     MEOR,A1
00002CA4  103C 000E               2708          MOVE.B  #14,D0
00002CA8  4E4F                    2709          TRAP    #15
00002CAA  6000 0012               2710          BRA     SUBPRINTEND
00002CAE                          2711  
00002CAE                          2712  SUBPRINTCMP   * Displays 'CMP.' 
00002CAE  43F9 00003378           2713          LEA     MCMP,A1
00002CB4  103C 000E               2714          MOVE.B  #14,D0
00002CB8  4E4F                    2715          TRAP    #15
00002CBA  6000 0002               2716          BRA     SUBPRINTEND
00002CBE                          2717  
00002CBE                          2718  SUBPRINTEND
00002CBE  4E75                    2719          RTS
00002CC0                          2720  
00002CC0                          2721  
00002CC0                          2722  *******************************************************************
00002CC0                          2723  * Error testing for DN->EA operations
00002CC0                          2724  *  Data register, address register, and immediate data cannot be destinations
00002CC0                          2725  SUBERRORTEST1
00002CC0                          2726          * test for DN or AN register, branches to invalid op code if true
00002CC0  0C39 0000 00003A0D      2727          CMP.B   #0,bit3
00002CC8  6700 0326               2728          BEQ     INVOP
00002CCC  0C39 0001 00003A0D      2729          CMP.B   #1,bit3
00002CD4  6700 031A               2730          BEQ     INVOP
00002CD8                          2731          
00002CD8                          2732          * check if destination is immediate data
00002CD8  0C39 0007 00003A0D      2733          CMP.B   #7,bit3
00002CE0  6600 001E               2734          BNE     SUBERRORTEST11
00002CE4  0C39 0000 00003A0E      2735          CMP.B   #0,bit4
00002CEC  6700 0012               2736          BEQ     SUBERRORTEST11
00002CF0  0C39 0001 00003A0E      2737          CMP.B   #1,bit4
00002CF8  6700 0006               2738          BEQ     SUBERRORTEST11
00002CFC  6000 02F2               2739          BRA     INVOP
00002D00                          2740          
00002D00                          2741  SUBERRORTEST11
00002D00  4E75                    2742          RTS
00002D02                          2743  
00002D02                          2744  
00002D02                          2745  ******************************************************************************************************
00002D02                          2746  *   Displays data register
00002D02                          2747  SUBDN
00002D02  43F9 000032E0           2748          LEA     MDN,A1
00002D08  103C 000E               2749          MOVE.B  #14,D0
00002D0C  4E4F                    2750          TRAP    #15
00002D0E                          2751  
00002D0E  1239 00003A0B           2752          MOVE.B  bit1,D1
00002D14  103C 0003               2753          MOVE.B  #3,D0
00002D18  4E4F                    2754          TRAP    #15
00002D1A                          2755          
00002D1A  6000 FF14               2756          BRA     SUBJMPA2
00002D1E                          2757  
00002D1E                          2758  *   Displays data register
00002D1E                          2759  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002D1E                          2760  SUBDN2
00002D1E  43F9 000032E0           2761          LEA     MDN,A1
00002D24  103C 000E               2762          MOVE.B  #14,D0
00002D28  4E4F                    2763          TRAP    #15
00002D2A                          2764  
00002D2A  1239 00003A0E           2765          MOVE.B  bit4,D1
00002D30  103C 0003               2766          MOVE.B  #3,D0
00002D34  4E4F                    2767          TRAP    #15
00002D36                          2768          
00002D36  6000 FEF8               2769          BRA     SUBJMPA2
00002D3A                          2770  
00002D3A                          2771  *   Displays address register
00002D3A                          2772  SUBAN
00002D3A  43F9 000032E2           2773          LEA     MAN,A1
00002D40  103C 000E               2774          MOVE.B  #14,D0
00002D44  4E4F                    2775          TRAP    #15
00002D46                          2776  
00002D46  1239 00003A0E           2777          MOVE.B  bit4,D1
00002D4C  103C 0003               2778          MOVE.B  #3,D0
00002D50  4E4F                    2779          TRAP    #15
00002D52                          2780          
00002D52  6000 FEDC               2781          BRA     SUBJMPA2
00002D56                          2782  
00002D56                          2783  *   Displays address register
00002D56                          2784  *   This is for SUBA, SUBA puts An into bit1
00002D56                          2785  SUBAN2
00002D56  43F9 000032E2           2786          LEA     MAN,A1
00002D5C  103C 000E               2787          MOVE.B  #14,D0
00002D60  4E4F                    2788          TRAP    #15
00002D62                          2789  
00002D62  1239 00003A0B           2790          MOVE.B  bit1,D1
00002D68  103C 0003               2791          MOVE.B  #3,D0
00002D6C  4E4F                    2792          TRAP    #15
00002D6E                          2793          
00002D6E  6000 FEC0               2794          BRA     SUBJMPA2
00002D72                          2795  
00002D72                          2796  
00002D72                          2797  *   Displays indirect address register
00002D72                          2798  SUBANID
00002D72  43F9 000032BB           2799          LEA     OPENBRA,A1
00002D78  103C 000E               2800          MOVE.B  #14,D0
00002D7C  4E4F                    2801          TRAP    #15
00002D7E                          2802  
00002D7E  43F9 000032E2           2803          LEA     MAN,A1
00002D84  103C 000E               2804          MOVE.B  #14,D0
00002D88  4E4F                    2805          TRAP    #15
00002D8A                          2806  
00002D8A  1239 00003A0E           2807          MOVE.B  bit4,D1
00002D90  103C 0003               2808          MOVE.B  #3,D0
00002D94  4E4F                    2809          TRAP    #15
00002D96                          2810  
00002D96  43F9 000032BD           2811          LEA     CLOSEBRA,A1
00002D9C  103C 000E               2812          MOVE.B  #14,D0
00002DA0  4E4F                    2813          TRAP    #15
00002DA2                          2814  
00002DA2  6000 FE8C               2815          BRA     SUBJMPA2
00002DA6                          2816  
00002DA6                          2817  *   Displays indirect address register with post increment
00002DA6                          2818  SUBANIDPOS
00002DA6  43F9 000032BB           2819          LEA     OPENBRA,A1
00002DAC  103C 000E               2820          MOVE.B  #14,D0
00002DB0  4E4F                    2821          TRAP    #15
00002DB2                          2822  
00002DB2  43F9 000032E2           2823          LEA     MAN,A1
00002DB8  103C 000E               2824          MOVE.B  #14,D0
00002DBC  4E4F                    2825          TRAP    #15
00002DBE                          2826  
00002DBE  1239 00003A0E           2827          MOVE.B  bit4,D1
00002DC4  103C 0003               2828          MOVE.B  #3,D0
00002DC8  4E4F                    2829          TRAP    #15
00002DCA                          2830  
00002DCA  43F9 000032BD           2831          LEA     CLOSEBRA,A1
00002DD0  103C 000E               2832          MOVE.B  #14,D0
00002DD4  4E4F                    2833          TRAP    #15
00002DD6                          2834  
00002DD6  43F9 000032BF           2835          LEA     POS,A1
00002DDC  103C 000E               2836          MOVE.B  #14,D0
00002DE0  4E4F                    2837          TRAP    #15
00002DE2                          2838  
00002DE2  6000 FE4C               2839          BRA     SUBJMPA2
00002DE6                          2840  
00002DE6                          2841  *   Displays indirect address register with pre decrement
00002DE6                          2842  SUBANIDNEG
00002DE6  43F9 000032C1           2843          LEA     NEG,A1
00002DEC  103C 000E               2844          MOVE.B  #14,D0
00002DF0  4E4F                    2845          TRAP    #15
00002DF2                          2846  
00002DF2  43F9 000032BB           2847          LEA     OPENBRA,A1
00002DF8  103C 000E               2848          MOVE.B  #14,D0
00002DFC  4E4F                    2849          TRAP    #15
00002DFE                          2850  
00002DFE  43F9 000032E2           2851          LEA     MAN,A1
00002E04  103C 000E               2852          MOVE.B  #14,D0
00002E08  4E4F                    2853          TRAP    #15
00002E0A                          2854  
00002E0A  1239 00003A0E           2855          MOVE.B  bit4,D1
00002E10  103C 0003               2856          MOVE.B  #3,D0
00002E14  4E4F                    2857          TRAP    #15
00002E16                          2858  
00002E16  43F9 000032BD           2859          LEA     CLOSEBRA,A1
00002E1C  103C 000E               2860          MOVE.B  #14,D0
00002E20  4E4F                    2861          TRAP    #15
00002E22                          2862  
00002E22  6000 FE0C               2863          BRA     SUBJMPA2
00002E26                          2864  
00002E26                          2865  
00002E26                          2866  
00002E26                          2867  
00002E26                          2868  ******************************************************************************************************
00002E26                          2869  * Displays the EA as hex numbers
00002E26                          2870  * 
00002E26                          2871  SUBEA
00002E26                          2872          *   This finds which mode to use
00002E26  0C39 0000 00003A0D      2873          CMP.B   #$0,bit3
00002E2E  6700 FEEE               2874          BEQ     SUBDN2
00002E32  0C39 0001 00003A0D      2875          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002E3A  6700 FEFE               2876          BEQ     SUBAN
00002E3E  0C39 0002 00003A0D      2877          CMP.B   #$2,bit3
00002E46  6700 FF2A               2878          BEQ     SUBANID
00002E4A  0C39 0003 00003A0D      2879          CMP.B   #$3,bit3
00002E52  6700 FF52               2880          BEQ     SUBANIDPOS
00002E56  0C39 0004 00003A0D      2881          CMP.B   #$4,bit3
00002E5E  6786                    2882          BEQ     SUBANIDNEG
00002E60  0C39 0005 00003A0D      2883          CMP.B   #$5,bit3
00002E68  6700 0424               2884          BEQ     ERROR
00002E6C  0C39 0006 00003A0D      2885          CMP.B   #$6,bit3
00002E74  6700 0418               2886          BEQ     ERROR
00002E78  0C39 0007 00003A0D      2887          CMP.B   #$7,bit3
00002E80  6700 0002               2888          BEQ     SUBEAHEX
00002E84                          2889  
00002E84                          2890  SUBEAHEX
00002E84  0C39 0004 00003A0E      2891          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002E8C  6700 0086               2892          BEQ     SUBEAID
00002E90                          2893  SUBEAID2
00002E90                          2894          *   Else it will assume it is absolute addressing mode
00002E90  43F9 000032D5           2895          LEA     MHEX,A1
00002E96  103C 000E               2896          MOVE.B  #14,D0
00002E9A  4E4F                    2897          TRAP    #15
00002E9C                          2898  
00002E9C  0C39 0000 00003A0E      2899          CMP.B   #$0,bit4
00002EA4  6700 007E               2900          BEQ     SUBEAHEX1
00002EA8  0C39 0001 00003A0E      2901          CMP.B   #$1,bit4
00002EB0  6700 007A               2902          BEQ     SUBEAHEX2
00002EB4                          2903  
00002EB4  0C39 0000 00003A0C      2904          CMP.B   #$0,bit2            * SUB byte displays as word
00002EBC  6700 0066               2905          BEQ     SUBEAHEX1
00002EC0  0C39 0004 00003A0C      2906          CMP.B   #$4,bit2            * SUB byte displays as word
00002EC8  6700 005A               2907          BEQ     SUBEAHEX1
00002ECC  0C39 0001 00003A0C      2908          CMP.B   #$1,bit2            * SUB word
00002ED4  6700 004E               2909          BEQ     SUBEAHEX1
00002ED8  0C39 0005 00003A0C      2910          CMP.B   #$5,bit2            * SUB word
00002EE0  6700 0042               2911          BEQ     SUBEAHEX1
00002EE4  0C39 0003 00003A0C      2912          CMP.B   #$3,bit2            * SUBA word
00002EEC  6700 0036               2913          BEQ     SUBEAHEX1
00002EF0  0C39 0002 00003A0C      2914          CMP.B   #$2,bit2            * SUB longword
00002EF8  6700 0032               2915          BEQ     SUBEAHEX2
00002EFC  0C39 0006 00003A0C      2916          CMP.B   #$6,bit2            * SUB longword
00002F04  6700 0026               2917          BEQ     SUBEAHEX2
00002F08  0C39 0007 00003A0C      2918          CMP.B   #$7,bit2            * SUBA longword
00002F10  6700 001A               2919          BEQ     SUBEAHEX2
00002F14                          2920  
00002F14                          2921  SUBEAID
00002F14  43F9 000032C3           2922          LEA     HASH,A1
00002F1A  103C 000E               2923          MOVE.B  #14,D0
00002F1E  4E4F                    2924          TRAP    #15
00002F20  6000 FF6E               2925          BRA     SUBEAID2
00002F24                          2926  
00002F24                          2927  SUBEAHEX1  
00002F24                          2928          *absolute address word
00002F24  1E3C 0002               2929          MOVE.B  #2,D7
00002F28  6000 000A               2930          BRA     SUBEAHEX3
00002F2C                          2931  
00002F2C                          2932  SUBEAHEX2  *absolute address long
00002F2C  1E3C 0004               2933          MOVE.B  #4,D7
00002F30  6000 0002               2934          BRA     SUBEAHEX3
00002F34                          2935  
00002F34                          2936  SUBEAHEX3
00002F34  BE3C 0000               2937          CMP.B   #0,D7               Compares current addr to ending addr
00002F38  6700 FCF6               2938          BEQ     SUBJMPA2            Branches to done if they are equal
00002F3C                          2939  
00002F3C                          2940      
00002F3C  141E                    2941          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F3E                          2942          
00002F3E  1602                    2943          MOVE.B  D2,D3               Copies data at D2 to D3
00002F40                          2944          *   this gets digit in 10's place
00002F40  E80B                    2945          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F42                          2946          *   this gets digit in 1's place
00002F42  E90A                    2947          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F44  E80A                    2948          LSR.B   #4,D2               Shifts back right into 1's place
00002F46                          2949  
00002F46                          2950          
00002F46                          2951          *   D3 holds digit in 10's place
00002F46                          2952          *   D2 holds digit in 1's place
00002F46                          2953          
00002F46  1203                    2954          MOVE.B  D3,D1               Displays digit in 10's place first
00002F48                          2955  
00002F48                          2956          *   converts digits 10+ into letters
00002F48                          2957  
00002F48  47F9 00002F5C           2958          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002F4E  B23C 0009               2959          CMP.B   #9,D1               Compares digit to 9
00002F52  6E00 0164               2960          BGT     CONV                Print out letter representation if greater than 9
00002F56                          2961  
00002F56  103C 0003               2962          MOVE.B  #3,D0               Displays digit if it is less than A
00002F5A  4E4F                    2963          TRAP    #15
00002F5C                          2964          
00002F5C                          2965  SUBEAHEX4    
00002F5C  1202                    2966          MOVE.B  D2,D1               Displays digit in 1's place second
00002F5E                          2967  
00002F5E                          2968          *   converts digits 10+ into letters
00002F5E  47F9 00002F72           2969          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F64  B23C 0009               2970          CMP.B   #9,D1               Compares digit to 9
00002F68  6E00 014E               2971          BGT     CONV                Print out letter representation if greater than 9
00002F6C                          2972          
00002F6C  103C 0003               2973          MOVE.B  #3,D0               Displays digit if it is less than A
00002F70  4E4F                    2974          TRAP    #15
00002F72                          2975          
00002F72                          2976  SUBEAHEX5         
00002F72                          2977  * Display counter -- creates new line every 8 bytes
00002F72                          2978          * D7 is used as counter
00002F72                          2979          
00002F72  5307                    2980          SUB.B   #1,D7                       
00002F74  60BE                    2981          BRA     SUBEAHEX3              Loops back to display next address
00002F76                          2982  
00002F76                          2983  ***   display EA ends here
00002F76                          2984  
00002F76                          2985  ******************************************************************************************************
00002F76                          2986  * Displays the EA as hex numbers
00002F76                          2987  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002F76                          2988  * OUTPUT: Displays size of EA reading from A6
00002F76                          2989  * Jumps to location stored in A2 when finished
00002F76                          2990  DISPEA
00002F76  43F9 000032D5           2991          LEA     MHEX,A1
00002F7C  103C 000E               2992          MOVE.B  #14,D0
00002F80  4E4F                    2993          TRAP    #15
00002F82                          2994  
00002F82  B83C 0002               2995          CMP.B   #$2,D4              Branches to longword display if size is 2
00002F86  6700 000A               2996          BEQ     DISPEALONG          Else it will assume word length
00002F8A                          2997  
00002F8A                          2998  DISPEAWORD
00002F8A                          2999          *absolute address word
00002F8A  1E3C 0002               3000          MOVE.B  #2,D7
00002F8E  6000 000A               3001          BRA     DISPEA3
00002F92                          3002   
00002F92                          3003  DISPEALONG
00002F92                          3004          *absolute address long
00002F92  1E3C 0004               3005          MOVE.B  #4,D7
00002F96  6000 0002               3006          BRA     DISPEA3
00002F9A                          3007  
00002F9A                          3008  DISPEA3
00002F9A  BE3C 0000               3009          CMP.B   #0,D7               Compares current addr to ending addr
00002F9E  6700 FC90               3010          BEQ     SUBJMPA2            Branches to done if they are equal
00002FA2                          3011  
00002FA2                          3012      
00002FA2  141E                    3013          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002FA4                          3014          
00002FA4  1602                    3015          MOVE.B  D2,D3               Copies data at D2 to D3
00002FA6                          3016          *   this gets digit in 10's place
00002FA6  E80B                    3017          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002FA8                          3018          *   this gets digit in 1's place
00002FA8  E90A                    3019          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002FAA  E80A                    3020          LSR.B   #4,D2               Shifts back right into 1's place
00002FAC                          3021  
00002FAC                          3022          
00002FAC                          3023          *   D3 holds digit in 10's place
00002FAC                          3024          *   D2 holds digit in 1's place
00002FAC                          3025          
00002FAC  1203                    3026          MOVE.B  D3,D1               Displays digit in 10's place first
00002FAE                          3027  
00002FAE                          3028          *   converts digits 10+ into letters
00002FAE                          3029  
00002FAE  47F9 00002FC2           3030          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002FB4  B23C 0009               3031          CMP.B   #9,D1               Compares digit to 9
00002FB8  6E00 00FE               3032          BGT     CONV                Print out letter representation if greater than 9
00002FBC                          3033  
00002FBC  103C 0003               3034          MOVE.B  #3,D0               Displays digit if it is less than A
00002FC0  4E4F                    3035          TRAP    #15
00002FC2                          3036    
00002FC2                          3037  DISPEA4
00002FC2  1202                    3038          MOVE.B  D2,D1               Displays digit in 1's place second
00002FC4                          3039  
00002FC4                          3040          *   converts digits 10+ into letters
00002FC4  47F9 00002FD8           3041          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002FCA  B23C 0009               3042          CMP.B   #9,D1               Compares digit to 9
00002FCE  6E00 00E8               3043          BGT     CONV                Print out letter representation if greater than 9
00002FD2                          3044          
00002FD2  103C 0003               3045          MOVE.B  #3,D0               Displays digit if it is less than A
00002FD6  4E4F                    3046          TRAP    #15
00002FD8                          3047        
00002FD8                          3048  DISPEA5
00002FD8                          3049  * Display counter -- creates new line every 8 bytes
00002FD8                          3050          * D7 is used as counter
00002FD8                          3051          
00002FD8  5307                    3052          SUB.B   #1,D7                       
00002FDA  60BE                    3053          BRA     DISPEA3              Loops back to display next address
00002FDC                          3054  
00002FDC                          3055  ***   display EA ends here
00002FDC                          3056  
00002FDC                          3057  *******************************************************************
00002FDC                          3058  * Clears all of the data registers
00002FDC                          3059  CLRDN
00002FDC  4280                    3060          CLR.L   D0
00002FDE  4281                    3061          CLR.L   D1
00002FE0  4282                    3062          CLR.L   D2
00002FE2  4283                    3063          CLR.L   D3
00002FE4  4284                    3064          CLR.L   D4
00002FE6  4285                    3065          CLR.L   D5
00002FE8  4286                    3066          CLR.L   D6
00002FEA  4287                    3067          CLR.L   D7
00002FEC  4E75                    3068          RTS
00002FEE                          3069  
00002FEE                          3070  ********************************************************************
00002FEE                          3071  * Invalid op-code handling
00002FEE                          3072  * Displays DATA YYYY
00002FEE                          3073  *  YYYY represents the op-code that failed
00002FEE                          3074  INVOPCODE
00002FEE  DE1E                    3075          ADD.B   (A6)+,D7
00002FF0                          3076  
00002FF0                          3077  INVOP
00002FF0  43F9 00003344           3078          LEA     MDATA,A1
00002FF6  103C 000E               3079          MOVE.B  #14,D0
00002FFA  4E4F                    3080          TRAP    #15
00002FFC  43F9 000032B5           3081          LEA     TAB,A1
00003002  103C 000E               3082          MOVE.B  #14,D0
00003006  4E4F                    3083          TRAP    #15
00003008  43F9 000032D5           3084          LEA     MHEX,A1
0000300E  103C 000E               3085          MOVE.B  #14,D0
00003012  4E4F                    3086          TRAP    #15
00003014                          3087          
00003014  1C3C 0002               3088          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00003018                          3089          
00003018  3407                    3090          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
0000301A  E04A                    3091          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
0000301C  6000 0004               3092          BRA     INVOP2              Skips the second part to do later
00003020                          3093  
00003020                          3094  INVOP1
00003020  1407                    3095          MOVE.B  D7,D2
00003022                          3096  INVOP2
00003022  1602                    3097          MOVE.B  D2,D3               Copies data at D2 to D3
00003024                          3098          *   this gets digit in 10's place
00003024  E80B                    3099          LSR.B   #4,D3               Shifts right to get rid of 1's place
00003026                          3100          *   this gets digit in 1's place
00003026  E90A                    3101          LSL.B   #4,D2               Shifts left to get rid of 10's place
00003028  E80A                    3102          LSR.B   #4,D2               Shifts back right into 1's place
0000302A                          3103  
0000302A                          3104          
0000302A                          3105          *   D3 holds digit in 10's place
0000302A                          3106          *   D2 holds digit in 1's place
0000302A                          3107          
0000302A  1203                    3108          MOVE.B  D3,D1               Displays digit in 10's place first
0000302C                          3109  
0000302C                          3110          *   converts digits 10+ into letters
0000302C                          3111  
0000302C  47F9 00003040           3112          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00003032  B23C 0009               3113          CMP.B   #9,D1               Compares digit to 9
00003036  6E00 0080               3114          BGT     CONV                Print out letter representation if greater than 9
0000303A                          3115  
0000303A  103C 0003               3116          MOVE.B  #3,D0               Displays digit if it is less than A
0000303E  4E4F                    3117          TRAP    #15
00003040                          3118          
00003040                          3119  INVOP3   
00003040  1202                    3120          MOVE.B  D2,D1               Displays digit in 1's place second
00003042                          3121  
00003042                          3122          *   converts digits 10+ into letters
00003042  47F9 00003056           3123          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00003048  B23C 0009               3124          CMP.B   #9,D1               Compares digit to 9
0000304C  6E00 006A               3125          BGT     CONV                Print out letter representation if greater than 9
00003050                          3126          
00003050  103C 0003               3127          MOVE.B  #3,D0               Displays digit if it is less than A
00003054  4E4F                    3128          TRAP    #15
00003056                          3129          
00003056                          3130  INVOP4
00003056                          3131  * Display counter -- creates new line every 8 bytes
00003056                          3132          * D6 is used as counter
00003056                          3133          
00003056  5306                    3134          SUB.B   #1,D6
00003058  BC3C 0000               3135          CMP.B   #0,D6
0000305C  6700 0004               3136          BEQ     ENDNEWLINE
00003060  60BE                    3137          BRA     INVOP1              Loops back to display next address
00003062                          3138  
00003062                          3139  
00003062                          3140  ******************************************************************************************************
00003062                          3141  * Creates a new line after an op-code is displayed, loops back to start to display next code
00003062                          3142  ENDNEWLINE
00003062  43F9 000032B2           3143          LEA     NEWLINE,A1          Creates a new line in output window
00003068  103C 000E               3144          MOVE.B  #14,D0
0000306C  4E4F                    3145          TRAP    #15
0000306E                          3146  
0000306E  5339 00003A01           3147          SUB.B   #1,dispcount
00003074  0C39 0000 00003A01      3148          CMP.B   #0,dispcount               Checks if display counter is zero
0000307C  6600 E0E4               3149          BNE     NEWADDR
00003080                          3150  
00003080                          3151  * Asks user to press enter to continue
00003080                          3152  * Resets counter
00003080  43F9 000032B2           3153          LEA     NEWLINE,A1          Creates a new line in output window
00003086  103C 000E               3154          MOVE.B  #14,D0
0000308A  4E4F                    3155          TRAP    #15
0000308C                          3156          
0000308C  43F9 000034FF           3157          LEA     MCONT,A1            Asks user to press enter to continue
00003092  103C 000E               3158          MOVE.B  #14,D0
00003096  4E4F                    3159          TRAP    #15
00003098                          3160  
00003098  103C 0004               3161          MOVE.B  #4,D0               Takes in user input
0000309C  4E4F                    3162          TRAP    #15
0000309E  4281                    3163          CLR.L   D1                  Clears D1 incase user decides to input something
000030A0                          3164  
000030A0  43F9 000032B2           3165          LEA     NEWLINE,A1          Creates a new line in output window
000030A6  103C 000E               3166          MOVE.B  #14,D0
000030AA  4E4F                    3167          TRAP    #15
000030AC                          3168  
000030AC  13FC 001E 00003A01      3169          MOVE.B  #dispnum,dispcount  Resets display counter
000030B4  6000 E0AC               3170          BRA     NEWADDR             Loops back to beginning
000030B8                          3171  
000030B8                          3172  
000030B8                          3173  ******************************************************************************************************
000030B8                          3174  * Converts decimal number into hex and displays it
000030B8                          3175  *   converts number 10-15 to A-F
000030B8                          3176  *   INPUT: decimal number in D1
000030B8                          3177  *   OUTPUT: HEX number to output
000030B8  B23C 000A               3178  CONV    CMP.B   #10,D1              Displays 10 as A
000030BC  6700 002A               3179          BEQ     HEXA
000030C0  B23C 000B               3180          CMP.B   #11,D1              Displays 11 as B
000030C4  6700 002C               3181          BEQ     HEXB
000030C8  B23C 000C               3182          CMP.B   #12,D1              Displays 12 as C
000030CC  6700 002E               3183          BEQ     HEXC
000030D0  B23C 000D               3184          CMP.B   #13,D1              Displays 13 as D
000030D4  6700 0030               3185          BEQ     HEXD
000030D8  B23C 000E               3186          CMP.B   #14,D1              Displays 14 as E
000030DC  6700 0032               3187          BEQ     HEXE
000030E0  B23C 000F               3188          CMP.B   #15,D1              Displays 15 as F
000030E4  6700 0034               3189          BEQ     HEXF
000030E8                          3190  
000030E8  43F9 000032C7           3191  HEXA    LEA     DISPA,A1            Loads A character
000030EE  6000 0034               3192          BRA     PRINT
000030F2                          3193    
000030F2  43F9 000032C9           3194  HEXB    LEA     DISPB,A1            Loads B character
000030F8  6000 002A               3195          BRA     PRINT
000030FC                          3196  
000030FC  43F9 000032CB           3197  HEXC    LEA     DISPC,A1            Loads C character
00003102  6000 0020               3198          BRA     PRINT
00003106                          3199  
00003106  43F9 000032CD           3200  HEXD    LEA     DISPD,A1            Loads D character
0000310C  6000 0016               3201          BRA     PRINT
00003110                          3202  
00003110  43F9 000032CF           3203  HEXE    LEA     DISPE,A1            Loads E character
00003116  6000 000C               3204          BRA     PRINT
0000311A                          3205  
0000311A  43F9 000032D1           3206  HEXF    LEA     DISPF,A1            Loads F character
00003120  6000 0002               3207          BRA     PRINT
00003124                          3208  
00003124  103C 000E               3209  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00003128  4E4F                    3210          TRAP    #15                 Prints out message in A1
0000312A  4ED3                    3211          JMP     (A3)
0000312C                          3212  
0000312C                          3213  ******************************************************************************
0000312C                          3214  * Converts decimal input to hex
0000312C                          3215  * INPUT: Decimal inside D2
0000312C                          3216  * OUTPUT: HEX into D3
0000312C                          3217  *   Converts number in decimal to hex        
0000312C                          3218  DEC2HEX
0000312C  B43C 0030               3219          CMP.B   #$30,D2             0
00003130  6700 00B0               3220          BEQ     D2HZERO
00003134  B43C 0031               3221          CMP.B   #$31,D2             1
00003138  6700 00AE               3222          BEQ     D2HONE
0000313C  B43C 0032               3223          CMP.B   #$32,D2             2
00003140  6700 00AC               3224          BEQ     D2HTWO
00003144  B43C 0033               3225          CMP.B   #$33,D2             3
00003148  6700 00AA               3226          BEQ     D2HTHREE
0000314C  B43C 0034               3227          CMP.B   #$34,D2             4
00003150  6700 00A8               3228          BEQ     D2HFOUR
00003154  B43C 0035               3229          CMP.B   #$35,D2             5
00003158  6700 00A6               3230          BEQ     D2HFIVE
0000315C  B43C 0036               3231          CMP.B   #$36,D2             6
00003160  6700 00A4               3232          BEQ     D2HSIX
00003164  B43C 0037               3233          CMP.B   #$37,D2             7
00003168  6700 00A2               3234          BEQ     D2HSEVEN
0000316C  B43C 0038               3235          CMP.B   #$38,D2             8
00003170  6700 00A0               3236          BEQ     D2HEIGHT
00003174  B43C 0039               3237          CMP.B   #$39,D2             9
00003178  6700 009E               3238          BEQ     D2HNINE
0000317C  B43C 0041               3239          CMP.B   #$41,D2             A
00003180  6700 009C               3240          BEQ     D2HHEXA
00003184  B43C 0042               3241          CMP.B   #$42,D2             B
00003188  6700 009A               3242          BEQ     D2HHEXB
0000318C  B43C 0043               3243          CMP.B   #$43,D2             C
00003190  6700 0098               3244          BEQ     D2HHEXC
00003194  B43C 0044               3245          CMP.B   #$44,D2             D
00003198  6700 0096               3246          BEQ     D2HHEXD
0000319C  B43C 0045               3247          CMP.B   #$45,D2             E
000031A0  6700 0094               3248          BEQ     D2HHEXE
000031A4  B43C 0046               3249          CMP.B   #$46,D2             F
000031A8  6700 0092               3250          BEQ     D2HHEXF
000031AC  B43C 0061               3251          CMP.B   #$61,D2             A
000031B0  6700 006C               3252          BEQ     D2HHEXA
000031B4  B43C 0062               3253          CMP.B   #$62,D2             B
000031B8  6700 006A               3254          BEQ     D2HHEXB
000031BC  B43C 0063               3255          CMP.B   #$63,D2             C
000031C0  6700 0068               3256          BEQ     D2HHEXC
000031C4  B43C 0064               3257          CMP.B   #$64,D2             D
000031C8  6700 0066               3258          BEQ     D2HHEXD
000031CC  B43C 0065               3259          CMP.B   #$65,D2             E
000031D0  6700 0064               3260          BEQ     D2HHEXE
000031D4  B43C 0066               3261          CMP.B   #$66,D2             F
000031D8  6700 0062               3262          BEQ     D2HHEXF
000031DC                          3263  
000031DC                          3264          * User entered a non-hex character
000031DC                          3265          * Moves F to D1 to indicate error before returning
000031DC  123C 000F               3266          MOVE.B  #$F,D1
000031E0  4E75                    3267          RTS
000031E2                          3268  
000031E2                          3269  *   Moves the appropiate hex number to D3
000031E2  163C 0000               3270  D2HZERO MOVE.B  #$0,D3
000031E6  4E75                    3271          RTS
000031E8                          3272  
000031E8                          3273  D2HONE
000031E8  163C 0001               3274          MOVE.B  #$1,D3
000031EC  4E75                    3275          RTS
000031EE                          3276  
000031EE                          3277  D2HTWO
000031EE  163C 0002               3278          MOVE.B  #$2,D3
000031F2  4E75                    3279          RTS
000031F4                          3280  
000031F4                          3281  D2HTHREE
000031F4  163C 0003               3282          MOVE.B  #$3,D3
000031F8  4E75                    3283          RTS
000031FA                          3284  
000031FA                          3285  D2HFOUR
000031FA  163C 0004               3286          MOVE.B  #$4,D3
000031FE  4E75                    3287          RTS
00003200                          3288  
00003200                          3289  D2HFIVE
00003200  163C 0005               3290          MOVE.B  #$5,D3
00003204  4E75                    3291          RTS
00003206                          3292  
00003206                          3293  D2HSIX
00003206  163C 0006               3294          MOVE.B  #$6,D3
0000320A  4E75                    3295          RTS
0000320C                          3296  
0000320C                          3297  D2HSEVEN
0000320C  163C 0007               3298          MOVE.B  #$7,D3
00003210  4E75                    3299          RTS
00003212                          3300  
00003212                          3301  D2HEIGHT
00003212  163C 0008               3302          MOVE.B  #$8,D3
00003216  4E75                    3303          RTS
00003218                          3304  
00003218                          3305  D2HNINE
00003218  163C 0009               3306          MOVE.B  #$9,D3
0000321C  4E75                    3307          RTS
0000321E                          3308  
0000321E                          3309  D2HHEXA
0000321E  163C 000A               3310          MOVE.B  #$A,D3
00003222  4E75                    3311          RTS
00003224                          3312  
00003224                          3313  D2HHEXB
00003224  163C 000B               3314          MOVE.B  #$B,D3
00003228  4E75                    3315          RTS
0000322A                          3316  
0000322A                          3317  D2HHEXC
0000322A  163C 000C               3318          MOVE.B  #$C,D3
0000322E  4E75                    3319          RTS
00003230                          3320  
00003230                          3321  D2HHEXD
00003230  163C 000D               3322          MOVE.B  #$D,D3
00003234  4E75                    3323          RTS
00003236                          3324  
00003236                          3325  D2HHEXE
00003236  163C 000E               3326          MOVE.B  #$E,D3
0000323A  4E75                    3327          RTS
0000323C                          3328  
0000323C                          3329  D2HHEXF
0000323C  163C 000F               3330          MOVE.B  #$F,D3
00003240  4E75                    3331          RTS
00003242                          3332  
00003242                          3333  *************************************************************************************************
00003242                          3334  ASK4REPEAT
00003242  43F9 000032B2           3335          LEA     NEWLINE,A1          Creates a new line in output window
00003248  103C 000E               3336          MOVE.B  #14,D0
0000324C  4E4F                    3337          TRAP    #15
0000324E                          3338  ASK4REPEAT2
0000324E  43F9 00003406           3339          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00003254  103C 000E               3340          MOVE.B  #14,D0
00003258  4E4F                    3341          TRAP    #15
0000325A                          3342  
0000325A  43F9 00003A0E           3343          LEA     bit4,A1             User has to enter Y to start over
00003260  103C 0002               3344          MOVE.B  #2,D0               N to exit
00003264  4E4F                    3345          TRAP    #15
00003266                          3346  
00003266  1239 00003A0E           3347          MOVE.B  bit4,D1             User input was stored in bit4
0000326C  B23C 0059               3348          CMP.B   #$59,D1             Char Y
00003270  6700 DD8E               3349          BEQ     DISPASCII
00003274  B23C 0079               3350          CMP.B   #$79,D1             Char y
00003278  6700 DD86               3351          BEQ     DISPASCII
0000327C  B23C 004E               3352          CMP.B   #$4E,D1             Char N
00003280  6700 001C               3353          BEQ     DONE
00003284  B23C 006E               3354          CMP.B   #$6E,D1             Char n
00003288  6700 0014               3355          BEQ     DONE
0000328C  60C0                    3356          BRA     ASK4REPEAT2          Asks again if user enters invalid character
0000328E                          3357  
0000328E                          3358  
0000328E                          3359  **************************************************************************************************
0000328E  43F9 000034CD           3360  ERROR   LEA     MERROR,A1
00003294  103C 000E               3361          MOVE.B  #14,D0
00003298  4E4F                    3362          TRAP    #15
0000329A  6000 000E               3363          BRA     EXIT
0000329E                          3364  
0000329E  43F9 000034E4           3365  DONE    LEA     MDONE,A1
000032A4  103C 000E               3366          MOVE.B  #14,D0
000032A8  4E4F                    3367          TRAP    #15
000032AA                          3368  
000032AA  103C 0009               3369  EXIT    MOVE.B  #9,D0
000032AE  4E4F                    3370          TRAP    #15
000032B0                          3371  
000032B0                          3372  ************************************ Output stuff **************************************
000032B0                          3373  * Stuff for output
000032B0                          3374  
000032B0  =0000000D               3375  CR      EQU     $0D
000032B0  =0000000A               3376  LF      EQU     $0A
000032B0                          3377  
000032B0= 20 00                   3378  SPACE       DC.B    ' ',0
000032B2= 0D 0A 00                3379  NEWLINE     DC.B    '',CR,LF,0
000032B5= 20 20 20 00             3380  TAB         DC.B    '   ',0
000032B9= 2C 00                   3381  COMMA       DC.B    ',',0
000032BB= 28 00                   3382  OPENBRA     DC.B    '(',0
000032BD= 29 00                   3383  CLOSEBRA    DC.B    ')',0
000032BF= 2B 00                   3384  POS         DC.B    '+',0
000032C1= 2D 00                   3385  NEG         DC.B    '-',0
000032C3= 23 00                   3386  HASH        DC.B    '#',0
000032C5= 2F 00                   3387  SLASH       DC.B    '/',0
000032C7                          3388  
000032C7                          3389  
000032C7= 41 00                   3390  DISPA       DC.B    'A',0
000032C9= 42 00                   3391  DISPB       DC.B    'B',0
000032CB= 43 00                   3392  DISPC       DC.B    'C',0
000032CD= 44 00                   3393  DISPD       DC.B    'D',0
000032CF= 45 00                   3394  DISPE       DC.B    'E',0
000032D1= 46 00                   3395  DISPF       DC.B    'F',0
000032D3                          3396  
000032D3= 2E 00                   3397  MDOT        DC.B    '.',0
000032D5= 24 00                   3398  MHEX        DC.B    '$',0
000032D7= 42 20 00                3399  MBYTE       DC.B    'B ',0
000032DA= 57 20 00                3400  MWORD       DC.B    'W ',0
000032DD= 4C 20 00                3401  MLONG       DC.B    'L ',0
000032E0= 44 00                   3402  MDN         DC.B    'D',0
000032E2= 41 00                   3403  MAN         DC.B    'A',0
000032E4                          3404  
000032E4= 4A 53 52 00             3405  MJSR        DC.B    'JSR',0
000032E8= 42 54 53 54 00          3406  MBTST       DC.B    'BTST',0
000032ED= 52 4F 4C 00             3407  MROL        DC.B    'ROL',0
000032F1= 52 4F 52 00             3408  MROR        DC.B    'ROR',0
000032F5= 4C 53 4C 00             3409  MLSL        DC.B    'LSL',0
000032F9= 4C 53 52 00             3410  MLSR        DC.B    'LSR',0
000032FD= 4E 45 47 2E 00          3411  MMNEGW      DC.B    'NEG.',0
00003302= 44 49 56 53 2E 57 00    3412  MMDIVSW     DC.B    'DIVS.W',0
00003309= 4D 55 4C 53 2E 57 00    3413  MMULSW      DC.B    'MULS.W',0
00003310= 4D 4F 56 45 2E 42 00    3414  MMOVEB      DC.B    'MOVE.B',0
00003317= 4D 4F 56 45 2E 57 00    3415  MMOVEW      DC.B    'MOVE.W',0
0000331E= 4D 4F 56 45 2E 4C 00    3416  MMOVEL      DC.B    'MOVE.L',0
00003325= 4D 4F 56 45 41 2E ...   3417  MMOVEAW     DC.B    'MOVEA.W',0
0000332D= 4D 4F 56 45 41 2E ...   3418  MMOVEAL     DC.B    'MOVEA.L',0
00003335= 4D 4F 56 45 4D 2E 00    3419  MMOVEM      DC.B    'MOVEM.',0
0000333C                          3420  
0000333C= 41 53 4C 00             3421  MASL        DC.B    'ASL',0
00003340= 41 53 52 00             3422  MASR        DC.B    'ASR',0
00003344= 44 41 54 41 00          3423  MDATA       DC.B    'DATA',0
00003349= 53 55 42 2E 00          3424  MSUB        DC.B    'SUB.',0
0000334E= 53 55 42 41 2E 00       3425  MSUBA       DC.B    'SUBA.',0
00003354= 41 4E 44 2E 00          3426  MAND        DC.B    'AND.',0
00003359= 41 44 44 2E 00          3427  MADD        DC.B    'ADD.',0
0000335E= 53 55 42 49 2E 00       3428  MSUBI       DC.B    'SUBI.',0
00003364= 4F 52 49 2E 00          3429  MORI        DC.B    'ORI.',0
00003369= 4E 4F 54 2E 00          3430  MNOT        DC.B    'NOT.',0
0000336E= 4D 55 4C 53 2E 00       3431  MMUL        DC.B    'MULS.',0
00003374= 4E 45 47 00             3432  MNEG        DC.B    'NEG',0
00003378= 43 4D 50 2E 00          3433  MCMP        DC.B    'CMP.',0
0000337D= 43 4D 50 49 2E 00       3434  MCMPI       DC.B    'CMPI.',0
00003383= 43 4D 50 41 2E 00       3435  MCMPA       DC.B    'CMPA.',0
00003389= 45 4F 52 2E 00          3436  MEOR        DC.B    'EOR.',0
0000338E= 45 4F 52 49 2E 00       3437  MEORI       DC.B    'EORI.',0
00003394= 41 44 44 41 2E 00       3438  MADDA       DC.B    'ADDA.',0
0000339A= 41 44 44 51 2E 00       3439  MADDQ       DC.B    'ADDQ.',0
000033A0                          3440  
000033A0= 42 45 51 00             3441  MBEQ        DC.B    'BEQ',0
000033A4= 42 4E 45 00             3442  MBNE        DC.B    'BNE',0
000033A8= 42 4C 54 00             3443  MBLT        DC.B    'BLT',0
000033AC= 42 48 49 00             3444  MBHI        DC.B    'BHI',0
000033B0= 42 52 41 00             3445  MBRA        DC.B    'BRA',0
000033B4= 4E 4F 50 00             3446  MNOP        DC.B    'NOP',0
000033B8= 52 54 53 00             3447  MRTS        DC.B    'RTS',0
000033BC= 4C 45 41 00             3448  MLEA        DC.B    'LEA',0
000033C0                          3449  
000033C0= 4C 65 6D 6D 65 20 ...   3450  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
000033E3= 47 69 6D 6D 65 20 ...   3451  MADDR2      DC.B    'Gimme that end address too homie: ',0
00003406= 54 72 79 6E 61 20 ...   3452  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00003426= 45 6E 64 20 61 64 ...   3453  MIOERR1     DC.B    'End address must be after the start address, try again.',0
0000345E= 41 64 64 72 65 73 ...   3454  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003491= 52 65 2D 65 6E 74 ...   3455  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
000034AD= 41 64 64 72 65 73 ...   3456  MIOERR4     DC.B    'Address must be an even number.',0
000034CD= 45 52 52 4F 52 3A ...   3457  MERROR      DC.B    'ERROR: Something broke',0
000034E4= 43 4F 4D 50 4C 45 ...   3458  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000034FF= 2A 2A 50 52 45 53 ...   3459  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
0000351B                          3460  
0000351B= 20 5F 5F 5F 5F 5F ...   3461  ASCII1      DC.B    ' ________  ________  ___  __       ',0
0000353F= 7C 5C 20 20 20 5F ...   3462  ASCII2      DC.B    '|\   ____\|\   __  \|\  \|\  \     ',0
00003563= 5C 20 5C 20 20 5C ...   3463  ASCII3      DC.B    '\ \  \___|\ \  \|\  \ \  \/  /|_   ',0
00003587= 20 5C 20 5C 20 20 ...   3464  ASCII4      DC.B    ' \ \  \____\ \   __  \ \   ___  \  ',0
000035AB= 20 20 5C 20 5C 20 ...   3465  ASCII5      DC.B    '  \ \  ___  \ \  \|\  \ \  \\ \  \ ',0
000035CF= 20 20 20 5C 20 5C ...   3466  ASCII6      DC.B    '   \ \_______\ \_______\ \__\\ \__\',0
000035F3= 20 20 20 20 5C 7C ...   3467  ASCII7      DC.B    '    \|_______|\|_______|\|__| \|__|',0
00003617                          3468  
00003617= 25 25 23 25 20 25 ...   3469  ASCII11     DC.B    '%%#% %% %% #%**      .%%%%%%%%%.',0
00003638= 20 25 23 20 20 25 ...   3470  ASCII12     DC.B    ' %#  %%#%% #%..      *%%%%%%%%%%              %/%%%/% #%%%%%    /%%    %%#  %%#',0
00003688= 20 25 23 20 20 25 ...   3471  ASCII13     DC.B    ' %#  %% %% #%,,       %%%%%%%%%%.     ###       %%%   /%%,,,   /%%%    % %, %%#',0
000036D8= 20 20 20 20 20 20 ...   3472  ASCII14     DC.B    '                    # /%%%%%%%%%#               %%%   /%%***  /% %%%   %  %/ %#',0
00003728= 20 20 20 20 20 20 ...   3473  ASCII15     DC.B    '                   (%  %%%%%%%%%%               %%%   /%%%%% /%  (%%   %  %  %#',0
00003778= 20 20 20 20 20 20 ...   3474  ASCII16     DC.B    '                   %%, (%%%%%%%%%#',0
0000379B= 20 20 20 20 20 20 ...   3475  ASCII17     DC.B    '                  #%%   %%%%%%%%%%',0
000037BE= 20 20 20 20 20 20 ...   3476  ASCII18     DC.B    '                  %%.   #%%%%%%%%%#',0
000037E2= 20 20 20 20 20 20 ...   3477  ASCII19     DC.B    '                 #%#     %%%%%%%%%%           ________  ________  ___  __',0
0000382C= 20 20 20 20 20 20 ...   3478  ASCII1A     DC.B    '                .%%      #%%%%%%%%%(        |\   ____\|\   __  \|\  \|\  \',0
00003877= 20 20 20 20 20 20 ...   3479  ASCII1B     DC.B    '                %%( (%%%%%%%%%%%%%%%        \ \  \___|\ \  \|\  \ \  \/  /|_',0
000038C4= 20 20 20 20 20 20 ...   3480  ASCII1C     DC.B    '               ,%%  //////%%%%%%%%%%(        \ \  \____\ \   __  \ \   ___  \',0
00003912= 20 20 20 20 20 20 ...   3481  ASCII1D     DC.B    '               %%/        *%%%%%%%%%%         \ \  ___  \ \  \|\  \ \  \\ \  \',0
00003961= 20 20 20 20 20 20 ...   3482  ASCII1E     DC.B    '              %%%,         %%%%%%%%%%/         \ \_______\ \_______\ \__\\ \__\',0
000039B1= 20 20 20 20 20 20 ...   3483  ASCII1F     DC.B    '           (%%%%%%%(     *%%%%%%%%%%%%%,        \|_______|\|_______|\|__| \|__|',0
00003A01                          3484  
00003A01                          3485  ********************************** MEMORY STORAGE **********************************************
00003A01                          3486  * Stores memory locations at the end of the program
00003A01                          3487  * How DS works: Give it a variable name.
00003A01                          3488  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00003A01                          3489  *   Last is the number of storage you want. 
00003A01                          3490  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00003A01                          3491  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00003A01                          3492  *            
00003A01                          3493  
00003A01                          3494  dispcount   DS.B    1           Used to count display lines
00003A02                          3495  
00003A02                          3496  startaddr   DS.L    1
00003A06                          3497  endaddr     DS.L    1
00003A0A                          3498  
00003A0A                          3499  bit0        DS.B    1           SEE NOTE UP TOP
00003A0B                          3500  bit1        DS.B    1           SEE NOTE UP TOP
00003A0C                          3501  bit2        DS.B    1           SEE NOTE UP TOP
00003A0D                          3502  bit3        DS.B    1           SEE NOTE UP TOP
00003A0E                          3503  bit4        DS.B    1           SEE NOTE UP TOP
00003A0F                          3504  
00003A0F                          3505  
00003A0F                          3506      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_EA              2702
ABS_EA2             270C
ADDIMD              15C6
ADDIMD0             15F6
ADDIMD1             1604
ADDIMD4             1612
ADDIMDDES           1680
ADDIMDDES0          16A4
ADDIMDDES1          16B2
ADDIMDDES4          16C0
ADDQ                251A
ADDQB               2560
ADDQCONT            2590
ADDQCONT2           25B6
ADDQEA              25CE
ADDQEA2             25DE
ADDQL               2580
ADDQW               2570
AN_EAM              2642
ASCII1              351B
ASCII11             3617
ASCII12             3638
ASCII13             3688
ASCII14             36D8
ASCII15             3728
ASCII16             3778
ASCII17             379B
ASCII18             37BE
ASCII19             37E2
ASCII1A             382C
ASCII1B             3877
ASCII1C             38C4
ASCII1D             3912
ASCII1E             3961
ASCII1F             39B1
ASCII2              353F
ASCII3              3563
ASCII4              3587
ASCII5              35AB
ASCII6              35CF
ASCII7              35F3
ASK4REPEAT          3242
ASK4REPEAT2         324E
ASLRMEMH            1DE0
BCC                 2092
BCCBEQ              210E
BCCBHI              212C
BCCBLT              2122
BCCBNE              2118
BCCBRA              2104
BCCDISP             20D8
BCCLONG             20C0
BCCNEXT             20C8
BCCPRINT            2136
BCCWORD             20B8
BIT0                3A0A
BIT1                3A0B
BIT2                3A0C
BIT3                3A0D
BIT4                3A0E
BTST                12EE
BTSTMEM             1366
CLOSEBRA            32BD
CLRDN               2FDC
CODE                1236
COMMA               32B9
CONTPRINTLEA        23C8
CONV                30B8
CR                  D
D2HEIGHT            3212
D2HFIVE             3200
D2HFOUR             31FA
D2HHEXA             321E
D2HHEXB             3224
D2HHEXC             322A
D2HHEXD             3230
D2HHEXE             3236
D2HHEXF             323C
D2HNINE             3218
D2HONE              31E8
D2HSEVEN            320C
D2HSIX              3206
D2HTHREE            31F4
D2HTWO              31EE
D2HZERO             31E2
DEC2HEX             312C
DEC_EAM             26C6
DISPA               32C7
DISPADDR            1138
DISPADDR1           1180
DISPADDR2           1182
DISPADDR3           11B6
DISPADDR4           11CC
DISPADDR5           11E2
DISPADDR6           11F8
DISPADDREND         1202
DISPADDRSTART       1174
DISPASCII           1000
DISPB               32C9
DISPC               32CB
DISPCOUNT           3A01
DISPD               32CD
DISPE               32CF
DISPEA              2F76
DISPEA3             2F9A
DISPEA4             2FC2
DISPEA5             2FD8
DISPEALONG          2F92
DISPEAWORD          2F8A
DISPF               32D1
DISPNUM             1E
DIVSW               1B78
DN_EAM              262A
DONE                329E
ENDADDR             3A06
ENDNEWLINE          3062
ENDNLINC            1AEA
ERROR               328E
EXIT                32AA
HANDLEDES           1628
HASH                32C3
HEXA                30E8
HEXB                30F2
HEXC                30FC
HEXD                3106
HEXE                3110
HEXF                311A
IMD                 2146
IMD2                2178
IMD3                2180
IMD4                218C
IMDBYTE             2226
IMDEA               224E
IMDEA2              2276
IMDEA3              228C
IMDLONG             2244
IMDPRINT            21C6
IMDPRINTCMPI        2214
IMDPRINTEND         221E
IMDPRINTEORI        220A
IMDPRINTORI         21F6
IMDPRINTSUBI        2200
IMDWORD             2236
INAN_EAM            265A
INC_EAM             268A
INVOP               2FF0
INVOP1              3020
INVOP2              3022
INVOP3              3040
INVOP4              3056
INVOPCODE           2FEE
IOERROR1            10FA
IOERROR2            1108
IOERROR3            1118
IOERROR4            1128
IOGETADDR           10B0
IOLOOP              10D6
IOSTART             1088
IOSTARTLOOP         10D0
JSR                 12A2
LEAIMD0             23AC
LEAIMD1             23BA
LEAMODE0            2388
LEAMODE1            2380
LEA_ABS_EA          2394
LEA_INDIR_AN        23EC
LF                  A
LSLR                1D5C
LSLRDESD            19DA
LSLRMEM             1F44
LSLRMEMH            1E64
LSLRSRCD            19B2
MADD                3359
MADDA               3394
MADDQ               339A
MADDR1              33C0
MADDR2              33E3
MAN                 32E2
MAND                3354
MASL                333C
MASR                3340
MBEQ                33A0
MBHI                33AC
MBLT                33A8
MBNE                33A4
MBRA                33B0
MBTST               32E8
MBYTE               32D7
MCMP                3378
MCMPA               3383
MCMPI               337D
MCONT               34FF
MDATA               3344
MDN                 32E0
MDONE               34E4
MDOT                32D3
MEOR                3389
MEORI               338E
MERROR              34CD
MHEX                32D5
MIOERR1             3426
MIOERR2             345E
MIOERR3             3491
MIOERR4             34AD
MISC                2290
MISCBIT2            22D8
MISCBIT3            22E4
MISCBYTE            2498
MISCCHECKM          2318
MISCCHKLEA          22F8
MISCEA              24C6
MISCEA2             24E2
MISCLEA             2348
MISCLEA2            2374
MISCLONG            24BA
MISCMMPOSTINC       2810
MISCMMPOSTINC2      281A
MISCMMPOSTINC3      2850
MISCMMPOSTINCPRINT  2854
MISCMMPOSTINCPRINT2  2868
MISCMMPOSTINCPRINT3  2874
MISCMMPREDEC        27A2
MISCMMPREDEC2       27CC
MISCMMPREDEC3       27E2
MISCMMPREDECCHECK   2796
MISCMMPREDECPRINT   27E6
MISCMMPREDECPRINT2  27FA
MISCMMPREDECPRINT3  2806
MISCMMPRINTNUM      28E6
MISCMMPRINTSIZE     277E
MISCMMREGMEM        287E
MISCMMREGMEM2       28A4
MISCMMREGMEM3       28BA
MISCMMREGMEMPRINT   28BE
MISCMMREGMEMPRINT2  28CE
MISCMMREGMEMPRINT3  28DA
MISCMMSIZEL         2778
MISCMMSLASH         28F4
MISCMOVEM           2710
MISCMOVEM2          2720
MISCMOVEM3          2730
MISCMOVEM4          2742
MISCNOP             2338
MISCNOT             244C
MISCNOT2            2456
MISCNOT3            245E
MISCNOT4            246A
MISCPRINT           24E6
MISCPRINTEND        2512
MISCPRINTNEG        2508
MISCPRINTNOT        24FE
MISCRTS             243C
MISCWORD            24AA
MJSR                32E4
MLEA                33BC
MLONG               32DD
MLSL                32F5
MLSR                32F9
MMDIVSW             3302
MMNEGW              32FD
MMOVEAL             332D
MMOVEAW             3325
MMOVEB              3310
MMOVEL              331E
MMOVEM              3335
MMOVEW              3317
MMUL                336E
MMULSW              3309
MNEG                3374
MNOP                33B4
MNOT                3369
MORI                3364
MOVB                1540
MOVBDN1             1926
MOVBDN2             1AC6
MOVEAL              14EC
MOVEAN1             16D6
MOVEAN2             19F6
MOVEAW              140C
MOVEIAN1            174A
MOVEIAND1           1886
MOVEIANI1           17DE
MOVIAN2             1A12
MOVIAND2            1A86
MOVIANI2            1A46
MOVL                1460
MOVW                1380
MREPEAT             3406
MROL                32ED
MROR                32F1
MRTS                33B8
MSUB                3349
MSUBA               334E
MSUBI               335E
MULSW               1AEE
MWORD               32DA
NEG                 32C1
NEGW                1C06
NEWADDR             1162
NEWLINE             32B2
OPENBRA             32BB
POS                 32BF
PRINT               3124
PRINTASL            1DFC
PRINTASR            1E30
PRINTB              1F8E
PRINTBYTE           1C60
PRINTL              1FF6
PRINTLONG           1D08
PRINTLSL            1F10
PRINTLSLRCOUNT      202A
PRINTLSR            205E
PRINTROL            1EA8
PRINTROR            1EDC
PRINTW              1FC2
PRINTWORD           1CB4
RORL                1E90
SLASH               32C5
SPACE               32B0
START               1000
STARTADDR           3A02
SUB                 2902
SUB1                2934
SUB2                2916
SUB3                291E
SUB4                2928
SUBA                2B50
SUBACHECK           2970
SUBACONT            2BA4
SUBAN               2D3A
SUBAN2              2D56
SUBANID             2D72
SUBANIDNEG          2DE6
SUBANIDPOS          2DA6
SUBDN               2D02
SUBDN2              2D1E
SUBEA               2E26
SUBEAHEX            2E84
SUBEAHEX1           2F24
SUBEAHEX2           2F2C
SUBEAHEX3           2F34
SUBEAHEX4           2F5C
SUBEAHEX5           2F72
SUBEAID             2F14
SUBEAID2            2E90
SUBERRORTEST1       2CC0
SUBERRORTEST11      2D00
SUBJMPA2            2C30
SUBPRINT            2C32
SUBPRINTADD         2C82
SUBPRINTADDA        2B94
SUBPRINTAND         2C72
SUBPRINTB           2C92
SUBPRINTCMP         2CAE
SUBPRINTCMPA        2B84
SUBPRINTEND         2CBE
SUBPRINTEOR         2C9E
SUBPRINTSUB         2C62
SUBPRINTSUBA        2B74
SUBSIZE1            29D0
SUBSIZE11           29F6
SUBSIZE12           2A0C
SUBSIZE2            2A10
SUBSIZE21           2A36
SUBSIZE22           2A4C
SUBSIZE3            2A50
SUBSIZE31           2A76
SUBSIZE32           2A8C
SUBSIZE4            2A90
SUBSIZE41           2AB6
SUBSIZE42           2ACC
SUBSIZE5            2AD0
SUBSIZE51           2AF6
SUBSIZE52           2B0C
SUBSIZE6            2B10
SUBSIZE61           2B36
SUBSIZE62           2B4C
SUBSIZE7            2BBC
SUBSIZE71           2BDE
SUBSIZE72           2BF4
SUBSIZE8            2BF8
SUBSIZE81           2C18
SUBSIZE82           2C2C
TAB                 32B5
